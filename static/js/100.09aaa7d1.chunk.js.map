{"version":3,"file":"static/js/100.09aaa7d1.chunk.js","mappings":"yOAuCA,I,QAAA,EAxBA,WACE,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAF,SAAA,EACNF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,KACLF,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAAJ,SAAA,EACVF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAL,UACHF,EAAAA,EAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,EAAAA,EAAK,mBAErBV,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAAAT,SAAC,iBAETF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAAAV,SAAC,8HAINC,EAAAA,EAAAA,MAACU,EAAAA,GAAW,CAAAX,SAAA,EACVF,EAAAA,EAAAA,KAACc,EAAAA,GAAS,CAACC,GAAG,gBAAeb,SAAC,kBAC9BF,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CAACD,GAAG,aAAYb,SAAC,kBAKrC,E,6BCnCae,EAAaC,EAAAA,EAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yTCA1BC,EAAWH,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0MAYrBE,EAAcJ,EAAAA,EAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2dAsBxBI,EAAWN,EAAAA,EAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+QCFlC,MA1BA,SAAcM,GAAiD,IAA9CxB,EAAQwB,EAARxB,SAAUyB,EAAMD,EAANC,OAAQC,EAAWF,EAAXE,YAAaC,EAAUH,EAAVG,WAC9C,OAAKF,GAQDA,GACFG,OAAOC,iBAAiB,WAPJ,SAAAC,GACF,WAAdA,EAAMC,KACRL,GAEJ,IAMOM,EAAAA,cACLlC,EAAAA,EAAAA,KAACqB,EAAQ,CAACc,QAASP,EAAY1B,UAC7BC,EAAAA,EAAAA,MAACmB,EAAW,CAACa,QAAS,SAAAC,GAAC,OAAIA,EAAEC,iBAAiB,EAACnC,SAAA,EAC7CF,EAAAA,EAAAA,KAACwB,EAAQ,CAACW,QAASP,EAAY1B,UAC7BF,EAAAA,EAAAA,KAAA,OAAKsC,UAAS,GAAA7B,OAAK8B,EAAAA,EAAM,sBAE3BvC,EAAAA,EAAAA,KAAA,OAAAE,SAAMA,KACNF,EAAAA,EAAAA,KAACiB,EAAU,CAAAf,SAAE2B,SAGjBW,SAASC,eAAe,gBAtBN,IAwBtB,ECZA,EAjBoB,WAClB,IAAAC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCf,EAAMiB,EAAA,GAAEE,EAASF,EAAA,GAExB,OACEzC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAC+C,EAAO,KACR/C,EAAAA,EAAAA,KAAA,UAAQmC,QAAS,kBAAMW,GAAU,EAAK,EAAC5C,SAAC,iGACxCF,EAAAA,EAAAA,KAACgD,EAAK,CACJpB,YAAa,kBAAMkB,GAAU,EAAM,EACnCnB,OAAQA,EACRzB,SAAU,WACV2B,WAAY,aAIpB,C","sources":["components/Welcome/Welcome.jsx","components/Button/Button.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","pages/WelcomePage/WelcomePage.jsx"],"sourcesContent":["import React from 'react';\nimport icons from '../../images/sprite.svg';\nimport {\n  Container,\n  Wrapper,\n  Logo,\n  LogoWrapper,\n  Icon,\n  Title,\n  Text,\n  AuthWrapper,\n  RegButton,\n  LogButton,\n} from './Welcome.styled';\n\nfunction Welcome() {\n  return (\n    <Container>\n      <Wrapper>\n        <Logo />\n        <LogoWrapper>\n          <Icon>\n            <use href={`${icons}#icon-logo`} />\n          </Icon>\n          <Title>TASK PRO</Title>\n        </LogoWrapper>\n        <Text>\n          Supercharge your productivity and take control of your tasks with Task\n          Pro - Don't wait, start achieving your goals now!\n        </Text>\n        <AuthWrapper>\n          <RegButton to=\"auth/register\">Registration</RegButton>\n          <LogButton to=\"auth/login\">Log In</LogButton>\n        </AuthWrapper>\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Welcome;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 10px 11px 11px 11px;\n\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: rgb(252, 252, 252);\n\n  cubic-bezier(0.4, 0, 0.2, 1) @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { MainButton } from '../Button/Button';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, btnContent }) {\n  if (!isOpen) return null;\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n        <MainButton>{btnContent}</MainButton>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import React, { useState } from 'react';\nimport Welcome from 'components/Welcome/Welcome';\nimport Modal from 'components/Modal/Modal';\n\nconst WelcomePage = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div>\n      <Welcome />\n      <button onClick={() => setIsOpen(true)}>Відкрити модалку</button>\n      <Modal\n        handleClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n        children={'hello :)'}\n        btnContent={'button'}\n      />\n    </div>\n  );\n};\n\nexport default WelcomePage;\n"],"names":["_jsx","Container","children","_jsxs","Wrapper","Logo","LogoWrapper","Icon","href","concat","icons","Title","Text","AuthWrapper","RegButton","to","LogButton","MainButton","styled","_templateObject","_taggedTemplateLiteral","Backdrop","ModalWindow","_templateObject2","CloseBtn","_templateObject3","_ref","isOpen","handleClose","btnContent","window","addEventListener","event","key","ReactDOM","onClick","e","stopPropagation","xlinkHref","Sprite","document","getElementById","_useState","useState","_useState2","_slicedToArray","setIsOpen","Welcome","Modal"],"sourceRoot":""}