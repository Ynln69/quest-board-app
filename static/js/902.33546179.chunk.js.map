{"version":3,"file":"static/js/902.33546179.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/EditProfile/EditProfile.styled.jsx","images/eye-user.svg","components/EditProfile/EditProfile.jsx","components/EditProfile/EditProfileModal.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Button/Button.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","redux/boards/boardsSelectors.js","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","components/ModalBoard/ModalBoard.jsx","components/ModalBoard/index.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.js","components/HeaderDashboard/HeaderDashboard.jsx","components/Task/Task.styled.js","components/Task/Task.jsx","components/Column/ModalColumn/ModalColumn.styled.js","components/Column/ModalColumn/ModalColumn.jsx","components/Column/AddColumn/AddColumn.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.styled.js","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds/non-optimized|sync|/^/.//.*$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n    `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  \n  &.theme-light {\n    background-color: #F6F6F7;\n    fill: #FFFFFF;\n     }\n\n  &.theme-dark {\n    background-color: #161616;\n    fill: #FFFFFF;\n  }\n\n  &.theme-violet {\n    background-color: #ECEDFD;\n    fill: #FFFFFF;\n  }\n   `;","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: var(--modal_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--close_icon);\n\n  &:hover,\n  :focus {\n    stroke: var(--close_active);\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  document.body.style.overflow = isOpen ? 'hidden' : 'visible';\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const EditProfileModal = styled.div`\n// position: absolute;\n// top: 50%;\n// left: 50%;\n// transform: translate(-50%, -50%);\n// width: 100%;\n// padding: 24px;\n\n// border-radius: 8px;\n// box-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\n// // transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// background-color: var(--modal_bgc);\n\n// cubic-bezier(0.4, 0, 0.2, 1)\n//  @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n// @media screen and (min-width: 768px) {\n//   width: 400px;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n   font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const LabelPass = styled.label`\nposition: relative;\nwidth:100%;\n`;\n\nexport const LabelText = styled.label`\nwidth:100%;\n`;\n\nexport const FieldUser = styled(Field)`\n  width:100%;\n    height: 49px;\n    color: var(--modal_main_color);\n    background-color: var(--modal_field);\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n`;\n\nexport const IconUserWrapper = styled.label`\n  width: 68px;\n  height: 78px;\n  position: relative;\n  margin: 24px auto 25px;\n  border-radius: 8px;\n  background-position: center;\n  cursor: pointer;\n\n  // &:hover,\n  // &:focus,\n  // &:active {\n  //   opacity: 1;\n  //   box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  // }\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid var(--create_normal);\n  color: var(--plus_color);\n  cursor: pointer;\n\n  // &:hover,\n  // &:focus,\n  // &:active {\n  //   background: var(--create_active);\n    // }\n\n    &:hover,\n  &:focus,\n  &:active {\n      opacity: 0.8;\n    }\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  display: none;\n  width:100%\n`;\n\nexport const NoneInput = styled.input`\n  display: none;\n`;\n\nexport const PlusBtn = styled.button`\n  position: absolute;\n  bottom: -15%;\n  left: 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: var(--user_bgc);\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active  {\n    background: var(--create_active);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\n// export const ModalCloseButton = styled.button`\n//   width: 18px;\n//   height: 18px;\n//   position: absolute;\n//   right: 14px;\n//   top: 14px;\n//   border-radius: 50%;\n//   background-color: transparent;\n//   cursor: pointer;\n//   transition: background-color 250ms ease-in;\n//   stroke: var(--modal_main_color);\n\n//   &:hover,\n//   :focus {\n//   }\n// `;\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEyeUser(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 800,\n    height: 800,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#787878\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"m2 2 20 20M6.713 6.723C3.665 8.795 2 12 2 12s3.636 7 10 7c2.05 0 3.817-.727 5.271-1.712M11 5.058A8.595 8.595 0 0 1 12 5c6.364 0 10 7 10 7s-.692 1.332-2 2.834\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#787878\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M14 14.236a3 3 0 0 1-4.13-4.348\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeUser);\nexport default __webpack_public_path__ + \"static/media/eye-user.accfc4141682c117e0a89ff4d886ee4d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  EditProfileModal,\n  FormBox,\n  AvatarImage,\n  FieldUser,\n  NoneInput,\n  PlusBtn,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n  PasswordView,\n  PasswordIcon,\n  Svg,\n  LabelPass,\n  LabelText,\n} from './EditProfile.styled';\nimport { updateUser, updateUserAvatar } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport Sprite from '../../images/sprite.svg';\nimport eyeUser from '../../images/eye-user.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { username, email, password, avatarURL } = useSelector(selectUser);\n  const [showPassword, setShowPassword] = useState(false);\n  const [avatarNewURL, setAvatarNewURL] = useState(avatarURL);\n\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = async values => {\n    console.log(values);\n\n    dispatch(\n      updateUser({\n        username: values.newName,\n        email: values.newEmail,\n        password: values.newPassword,\n      })\n    );\n\n    if (avatarNewURL !== values.newPhoto) {\n      dispatch(updateUserAvatar(avatarNewURL));\n    }\n    onClose();\n  };\n\n  const handleAvatarClick = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const formData = new FormData();\n      formData.append('avatar', selectedFile);\n      setAvatarNewURL(formData);\n    }\n  };\n\n  return (\n    <EditProfileModal>\n      <Formik\n        initialValues={{\n          newPhoto: avatarNewURL,\n          newName: username,\n          newEmail: email,\n          newPassword: password,\n        }}\n        onSubmit={handleFormSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <FormBox>\n            <IconUserWrapper>\n              {values.newPhoto ? (\n                <AvatarImage\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  alt=\"Avatar\"\n                  src={values.newPhoto}\n                />\n              ) : (\n                <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                  <use href={`${Sprite}#icon-user`} />\n                </svg>\n              )}\n              <PlusBtn\n                onClick={() => document.getElementById('newPhotoInput').click()}\n              >\n                <IconPlus>\n                  <use href={`${Sprite}#icon-plus-us`} />\n                </IconPlus>\n                <NoneInput\n                  type=\"file\"\n                  id=\"newPhotoInput\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                    handleAvatarClick(event);\n                  }}\n                />\n              </PlusBtn>\n            </IconUserWrapper>\n\n            <LabelText>\n              <FieldUser type=\"text\" name=\"newName\" />\n              <ErrorMessage name=\"newName\" component=\"div\" />\n            </LabelText>\n\n            <LabelText>\n              <FieldUser type=\"email\" name=\"newEmail\" />\n              <ErrorMessage name=\"newEmail\" component=\"div\" />\n            </LabelText>\n\n            <LabelPass>\n              <FieldUser\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n              />\n              <PasswordView onClick={togglePasswordVisibility}>\n                {showPassword ? (\n                  <PasswordIcon src={eyeUser} />\n                ) : (\n                  <Svg>\n                    <use stroke=\"gray\" href={`${Sprite}#eye-password`} />\n                  </Svg>\n                )}\n              </PasswordView>\n              <ErrorMessage name=\"newPassword\" component=\"div\" />\n            </LabelPass>\n\n            <SaveBtn type=\"submit\" disabled={isSubmitting}>\n              Save\n            </SaveBtn>\n          </FormBox>\n        )}\n      </Formik>\n    </EditProfileModal>\n  );\n};\n\nexport default EditProfile;\n","import Modal from 'components/Modal/Modal';\nimport EditProfile from './EditProfile';\n\nconst EditProfileModal = ({ onClose }) => {\n  const handleCloseModal = () => {\n    onClose();\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={true}\n        handleClose={handleCloseModal}\n        heading={'Edit profile'}\n      >\n        <EditProfile onClose={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditProfileModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfileModal from 'components/EditProfile/EditProfileModal';\nimport Sprite from '../../images/sprite.svg';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserInfo = ({ theme }) => {\n  const { username, avatarURL } = useSelector(selectUser);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n\n  const openEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const closeEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar\n          src={avatarURL}\n          alt=\"User Avatar\"\n          onClick={openEditProfileModal}\n        />\n      ) : (\n        <UserIcon\n          className={`icon-user theme-${theme}`}\n          onClick={openEditProfileModal}\n        >\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isEditProfileModalOpen && <EditProfileModal onClose={closeEditProfileModal} />}\n         </Container>\n  );\n};\n\nexport default UserInfo;\n\n\n\n\n\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar,  UserIcon  } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const setAvatarIcon = (activeUserTheme) => {\n//   switch (activeUserTheme) {\n//        case 'light':\n//       return '#icon-userlight';\n//       case 'dark':\n//       return '#icon-userdark';\n//     case 'violet':\n//       return '#icon-userviolet';\n//     default:\n//       return '#icon-userlight';\n//   }\n// };\n\n// const UserInfo = ({theme}) => {\n//   const { avatarURL, username } = useSelector(state => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   const avatarIcon = setAvatarIcon(theme);\n\n//   return (\n//     <Container>\n//       <div>{username}</div>\n//       {avatarURL ? (\n//         <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon onClick={openModal}>\n//         <svg className={`icon-user`} width=\"32\" height=\"32\">\n//           <use href={Sprite + avatarIcon} />\n//         </svg>\n//       </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n","export const selectTheme = (state) => state.theme;","import styled from '@emotion/styled';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n  cursor: pointer;\n  margin-left: auto;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\nexport const BoardIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  &:last-child {\n    margin-right: 0;\n  }\n  &.theme-violet {\n    fill: var(--add_btn_bgc);\n  }\n  &.theme-dark {\n    fill: #ffffff;\n  }\n`;\n\nexport const TItleBoard = styled.div`\n  display: flex;\n`;\n\nexport const BoardIcons = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: 'Poppins';\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { needHelp } from '../../redux/auth/operations';\nimport { MainButton } from 'components/Button/Button';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelpForm = ({ handleCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { email, comment } = values;\n    console.log({ email, comment });\n    try {\n      const result = await dispatch(needHelp({ email, comment }));\n      if (needHelp.fulfilled.match(result)) {\n        console.log('Request successful');\n        resetForm(initialValues);\n        handleCloseModal();\n      } else {\n      }\n    } catch (err) {\n      console.log('Error:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n\nNeedHelpForm.propTypes = {\n  handleCloseModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n      <NeedHelpForm handleCloseModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","export const selectBoards = state => state.boards.boards;\n","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 302px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: rgba(0, 0, 0, 0);\n  stroke: rgba(22, 22, 22, 0.5);\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  &:checked + img {\n    border: 1px solid rgba(190, 219, 176, 0.4);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: #161616;\n  }\n  &:hover + img {\n    border: 1px solid #bedbb0;\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { MainButton } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { createBoard, editBoard } from 'redux/boards/boardOperations';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1.jpg',\n  'bg2.jpg',\n  'bg3.jpg',\n  'bg4.jpg',\n  'bg5.jpg',\n  'bg6.jpg',\n  'bg7.jpg',\n  'bg8.jpg',\n  'bg9.jpg',\n  'bg10.jpg',\n  'bg11.jpg',\n  'bg12.jpg',\n  'bg13.jpg',\n  'bg14.jpg',\n  'bg15.jpg',\n  'bg16.jpg',\n];\n\nfunction ModalBoard({ btnContent, closeModal, boardData }) {\n  const dispatch = useDispatch();\n\n  const initialValues =\n    btnContent === 'Create'\n      ? {\n          title: '',\n          icon: icons[0],\n          background: backgrounds[0],\n        }\n      : {\n          title: boardData?.title,\n          icon: boardData?.icon,\n          background: boardData?.background,\n        };\n\n  const handleSubmit = (values, { resetForm }) => {\n    // const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      title: values.title,\n      icon: values.icon,\n      background: values.background,\n    };\n    if (btnContent === 'Create') {\n      dispatch(createBoard(newBoard));\n    } else {\n      console.log(newBoard);\n      dispatch(editBoard({ newBoard, id: boardData._id }));\n    }\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addBoardSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\">\n          <StyledInputField\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={values.title}\n          />\n          <ErrorMsg name=\"title\" component=\"p\" />\n          <StyledSubtitle>Icons</StyledSubtitle>\n          <IconsWrapper>\n            {icons.map(icon => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon}\n                  onChange={handleChange}\n                  checked={values.icon === icon}\n                />\n                <StyledSVG>\n                  <use href={`${sprite}#${icon}`}></use>\n                </StyledSVG>\n              </label>\n            ))}\n          </IconsWrapper>\n          <StyledSubtitle>Background</StyledSubtitle>\n          <BgImagesWrapper>\n            {backgrounds.map((background, i) => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"background\"\n                  value={background}\n                  onChange={handleChange}\n                  checked={values.background === background}\n                />\n                <img\n                  src={require(`../../images/backgrounds/non-optimized/${background}`)}\n                  alt={`background variant ${i + 1}`}\n                  width=\"28\"\n                />\n              </label>\n            ))}\n          </BgImagesWrapper>\n          <MainButton type=\"submit\">{btnContent}</MainButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalBoard;\n","import ModalBoard from './ModalBoard';\n\nexport default ModalBoard;\n","import {\n  SvgAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  SidebarBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardIcon,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TItleBoard,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\nimport Modal from 'components/Modal/Modal';\nimport ModalBoard from 'components/ModalBoard';\n\nconst actionsList = { add: 'add', edit: 'edit' };\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(actionsList.add);\n  const [boardData, setBoardData] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getBoards());\n    },\n    [dispatch],\n    boards\n  );\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleModalType = e => {\n    const buttonAction = e.currentTarget.ariaLabel;\n    const editButtonId = e.currentTarget.getAttribute('data-board-id') || '';\n    if (buttonAction === actionsList.add) {\n      setModalType(actionsList.add);\n      toggleModal();\n    } else {\n      setModalType(actionsList.edit);\n      setBoardData(boards.filter(board => board._id === editButtonId)[0]);\n      toggleModal();\n    }\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n        <button aria-label=\"add\" type=\"button\" onClick={handleModalType}>\n          <SvgAdd>\n            <use href={`${sprite}#icon-plus`} />\n          </SvgAdd>\n        </button>\n      </BoardTitleBlock>\n      <ul>\n        {boards.map(board => (\n          <BoardList key={board._id}>\n            <TItleBoard>\n              <BoardIcon>\n                <use href={`${sprite}#${board.icon}`} />\n              </BoardIcon>\n\n              {board.title}\n            </TItleBoard>\n            <BoardIcons>\n              <button\n                type=\"button\"\n                aria-label=\"edit\"\n                data-board-id={board._id}\n                onClick={handleModalType}\n              >\n                <EditIcon>\n                  <use href={`${sprite}#icon-pencil`} />\n                </EditIcon>\n              </button>\n              <EditIcon onClick={() => dispatch(deleteBoard(board._id))}>\n                <use href={`${sprite}#icon-trash`} />\n              </EditIcon>\n            </BoardIcons>\n          </BoardList>\n        ))}\n      </ul>\n\n      {isModalOpen && (\n        <Modal\n          isOpen={toggleModal}\n          handleClose={toggleModal}\n          heading={modalType === actionsList.add ? 'New board' : 'Edit board'}\n        >\n          <ModalBoard\n            btnContent={modalType === actionsList.add ? 'Create' : 'Edit'}\n            closeModal={toggleModal}\n            boardData={boardData}\n          />\n        </Modal>\n      )}\n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower src={flower} alt=\"flower\" />\n\n        <HelpContent>\n          If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={() => dispatch(logOut())}>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n//   display: inline-block;\n`;\n\nexport const Select = styled.select`\n  position: absolute;\n  display: none;\n  bottom: -70px;\n  left: 80%;\n  transform: translateX(-80%);\n  display: inline-flex;\n  padding: 18px 44px 18px 18px;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid var(--border_theme);\n  cursor: pointer;\n  z-index: 99;\n`;\n\nexport const Option = styled.option`\n  // content: '';\n  // position: absolute;\n  // top: 50%;\n  // right: 12px;\n  // transform: translateY(-50%);\n  // width: 0;\n  // height: 0;\n  font-family: Poppins;\n  font-size: 14px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: -0.28px;\n  border: 1px solid var(--border_theme);\n  color: var(-theme_color);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: var(--theme_active);\n  }\n`;\n\n// export const ThemeMenu = styled.ul`\n//   position: absolute;\n//   top: 100%;\n//   left: 0;\n//   width: 100%;\n//   background: var(--theme_bgc);\n//   box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n//   border-radius: 8px;\n//   padding: 8px 0;\n//   margin-top: 4px;\n//   list-style: none;\n//   z-index: 99;\n// `;\n\n// export const ThemeMenuItem = styled.li`\n//   font-family: Poppins;\n//   color: var(--border_theme);\n//   font-size: 14px;\n//   letter-spacing: -0.28px;\n//   padding: 8px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: var(--border_theme);\n//     color: var(--theme_bgc);\n//   }\n// `;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { updateTheme } from 'redux/theme/operations';\nimport { Container, Select, Option } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  const onToggleTheme = async event => {\n    const newTheme = event.target.value;\n\n    const themes = ['light', 'dark', 'violet'];\n    themes.forEach(t => {\n      document.body.classList.remove(t);\n    });\n\n    document.body.classList.remove(theme);\n    document.body.classList.add(newTheme);\n\n    dispatch(setTheme(newTheme));\n\n    try {\n      await dispatch(updateTheme({ theme: newTheme }));\n      localStorage.setItem('theme', newTheme);\n    } catch (error) {\n      console.log('Error updating theme:', error);\n    }\n    onClose();\n  };\n\n  return (\n    <Container >\n      <Select value={theme} onChange={onToggleTheme} >\n        \n        <Option value=\"light\">Light</Option>\n        <Option value=\"dark\">Dark</Option>\n        <Option value=\"violet\">Violet</Option>\n      \n              </Select>\n    </Container>\n  );\n};\nexport default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  // color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  color: var(--header_user_text);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const HeaderNav = styled.div`\nposition: relative;\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nmargin-right: 14px;\ncursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  color: var(--header_user_text);\n  fill: transparent;\n  z-index: 999;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n    let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen); // Toggle the state for isThemeSelectorOpen\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      {isSideBarOpen && <Sidebar />}\n      <HeaderWrap>\n        <HeaderNav>\n          <div>\n            <SelectIcon\n              className={`icon-chevron-down theme-${theme}`}\n              width=\"16\"\n              height=\"16\"\n              onClick={toggleThemeSelector}\n            >\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector onClose={() => setThemeSelectorOpen(false)} />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const HeadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 24px;\n`;\n\nexport const HeadText = styled.p`\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import { HeadContainer, HeadText } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = () => {\n  return (\n    <HeadContainer>\n      <HeadText>Name Board</HeadText>\n      <HeadText>Filters</HeadText>\n    </HeadContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LineContainer = styled.div`\n  position: absolute;\n  width: 4px;\n  top: 0;\n  left: -4px;\n  height: 100%;\n  border-radius: 4px 0px 0px 4px;\n  background: #8fa1d0;\n`;\n\nexport const TaskContainer = styled.div`\n  position: relative;\n  padding: 14px 20px;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background-color: ${props =>\n    props.isDragging ? 'var(--board_task_bgc)' : 'var(--board_task_bgc)'};\n  margin-bottom: 8px;\n`;\n\nexport const TaskTitle = styled.h2`\n  margin-bottom: 8px;\n\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskDesc = styled.p`\n  margin-bottom: 14px;\n  width: 290px;\n  height: 38px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: var(--board_filter_color);\n  font-family: 'Poppins';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  letter-spacing: -0.24px;\n`;\n\nexport const TaskVector = styled.div`\n  width: 290px;\n  height: 1px;\n  background-color: var(--line_color);\n  margin-bottom: 14px;\n`;\n\nexport const TaskBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const TaskContent = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TaskPrior = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > div {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: violet;\n  }\n`;\n\nexport const TaskDeadline = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > span {\n    color: var(--board_main_color);\n    font-family: Poppins;\n    font-size: 10px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: -0.2px;\n  }\n`;\n\nexport const TestListIcon = styled.ul`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  > li {\n    display: flex;\n    align-items: center;\n    > button {\n      padding: 0;\n      border: none;\n      background-color: rgba(0, 0, 0, 0);\n      > svg {\n        stroke: var(--modal_second_color);\n        fill: rgba(0, 0, 0, 0);\n        &:hover,\n        &:focus,\n        &:active {\n          stroke: var(--icon_active_color);\n        }\n      }\n    }\n  }\n`;\n","import {\n  LineContainer,\n  TaskContainer,\n  TaskTitle,\n  TaskDesc,\n  TaskVector,\n  TaskBox,\n  TaskContent,\n  TaskPrior,\n  TaskDeadline,\n  TestListIcon,\n} from './Task.styled';\nimport { Draggable } from 'react-beautiful-dnd';\nimport sprite from '../../images/sprite.svg';\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <TaskContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          <LineContainer />\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <TaskTitle>{task.title}</TaskTitle>\n          <TaskDesc>{task.description}</TaskDesc>\n          <TaskVector />\n          <TaskBox>\n            <TaskContent>\n              <TaskPrior>\n                {/* <p>{task.priority}</p> */}\n                <p>Priority</p>\n                <div />\n              </TaskPrior>\n              <TaskDeadline>\n                <p>Deadline</p>\n                <span>{task.deadline}</span>\n              </TaskDeadline>\n            </TaskContent>\n            <TestListIcon>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-bell`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-arrow-circle`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-pencil`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-trash`} />\n                  </svg>\n                </button>\n              </li>\n            </TestListIcon>\n          </TaskBox>\n        </TaskContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 302px;\n  min-height: 49px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  color: #161616;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  ine-height: normal;\n  font-family: inherit;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  color: #161616;\n  font-size: 18px;\n  font-weight: 500;\n  width: 302px;\n  height: 49px;\n`;\n","import { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport sprite from '../../../images/sprite.svg';\nimport { Button, BoxSvg, SvgAdd, Input } from './ModalColumn.styled';\n\nconst ModalColumn = ({ handleSubmit, nameTitle }) => {\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState(nameTitle || '');\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleFormSubmit = () => {\n    handleSubmit(title);\n    handlerVisible();\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ title: nameTitle }} onSubmit={handleFormSubmit}>\n        <Form>\n          <Input\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={e => {\n              setTitle(e.target.value);\n            }}\n          />\n          <Button type=\"submit\">\n            <BoxSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxSvg>\n            Add\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\nexport default ModalColumn;\n","import Modal from '../../Modal/Modal';\nimport ModalColumn from '../ModalColumn/ModalColumn';\n\nconst AddColumn = ({ closeColumnModal, handleSubmit, title, nameTitle }) => {\n  const handleCloseModal = () => {\n    closeColumnModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={title}>\n        <ModalColumn handleSubmit={handleSubmit} nameTitle={nameTitle} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  border-radius: 2px;\n  max-width: 334px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 56px;\n  padding: 18px 20px 17px 20px;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  color: #161616;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n  overflow-y: auto;\n  max-height: 478px;\n`;\n\nexport const ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: rgba(22, 22, 22, 0.5);\n  fill: #fff;\n  cursor: pointer;\n`;\n\nexport const BoxSvg = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxAddSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\nimport AddColumn from './AddColumn/AddColumn';\nimport {\n  Container,\n  Title,\n  TitleBox,\n  TaskList,\n  ContainerModal,\n  Svg,\n  BoxSvg,\n  SvgAdd,\n  BoxAddSvg,\n  Button,\n} from './Column.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const handleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleVisibleEdit = () => {\n    setShowEditModal(!showEditModal);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    handleVisible();\n  };\n\n  const handleEdit = e => {\n    handleVisibleEdit();\n  };\n\n  const handleSubmitEdit = data => {\n    column.title = data;\n    handleVisibleEdit();\n  };\n\n  const handleDelete = () => {\n    if (tasks.length === 0) {\n      const newColumns = { ...cardData.columns };\n      delete newColumns[column.id];\n\n      setCardData(prevCardData => ({\n        ...prevCardData,\n        columns: newColumns,\n      }));\n    }\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <TitleBox {...provided.dragHandleProps}>\n            <Title>{column.title}</Title>\n            <BoxSvg>\n              <Svg onClick={handleEdit}>\n                <use href={`${sprite}#icon-pencil`} />\n              </Svg>\n              <Svg onClick={handleDelete}>\n                <use href={`${sprite}#icon-trash`} />\n              </Svg>\n            </BoxSvg>\n          </TitleBox>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <Button onClick={handleVisible}>\n            <BoxAddSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxAddSvg>\n            Add another card\n          </Button>\n\n          {showEditModal && (\n            <AddColumn\n              title={'Edit column'}\n              nameTitle={column.title}\n              closeColumnModal={handleVisibleEdit}\n              handleSubmit={handleSubmitEdit}\n            />\n          )}\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  padding: 0 24px 36px 24px;\n  gap: 34px;\n  overflow-x: auto;\n`;\n\nexport const Container = styled.ul`\n  display: flex;\n  gap: 34px;\n  position: relative;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #ffffff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\n//add Elvira\nimport AddColumn from 'components/Column/AddColumn/AddColumn';\nimport {\n  MainContainer,\n  Container,\n  Button,\n  BoxSvg,\n  SvgAdd,\n} from './MainDashboard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n  const [visible, setVisible] = useState(false);\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = data => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: data,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    handlerVisible();\n  };\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'inherit';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <MainContainer>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                if (!column) {\n                  return null;\n                }\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <div>\n        <Button onClick={handlerVisible}>\n          <BoxSvg>\n            <SvgAdd>\n              <use href={`${sprite}#icon-plus`} />\n            </SvgAdd>\n          </BoxSvg>\n          Add another column\n        </Button>\n      </div>\n\n      {visible && (\n        <>\n          <AddColumn\n            closeColumnModal={handlerVisible}\n            handleSubmit={handleSubmit}\n            title={'Add column'}\n          />\n        </>\n      )}\n    </MainContainer>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerDashboard = styled.div`\n  width: 100%;\n  background: var(--board_bgc);\n`;\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\nimport { ContainerDashboard } from './Dashboard.styled';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <ContainerDashboard>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </ContainerDashboard>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Container } from './HomePage.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { refreshUser } from 'redux/auth/operations';\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <Container>\n        <Sidebar theme={theme} />\n        <div style={{ width: '100%' }}>\n          <Header theme={theme} />\n          <Dashboard theme={theme} />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg1.jpg\": 7727,\n\t\"./bg10.jpg\": 1640,\n\t\"./bg11.jpg\": 1948,\n\t\"./bg12.jpg\": 146,\n\t\"./bg13.jpg\": 3317,\n\t\"./bg14.jpg\": 2285,\n\t\"./bg15.jpg\": 1487,\n\t\"./bg16.jpg\": 130,\n\t\"./bg2.jpg\": 22,\n\t\"./bg3.jpg\": 5881,\n\t\"./bg4.jpg\": 5102,\n\t\"./bg5.jpg\": 3581,\n\t\"./bg6.jpg\": 8528,\n\t\"./bg7.jpg\": 7333,\n\t\"./bg8.jpg\": 490,\n\t\"./bg9.jpg\": 1779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2860;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","Backdrop","ModalWindow","Heading","CloseBtn","_templateObject4","_ref","children","isOpen","handleClose","heading","document","body","style","overflow","window","addEventListener","event","key","ReactDOM","_jsx","onClick","_jsxs","e","stopPropagation","xlinkHref","concat","Sprite","getElementById","EditProfileModal","FormBox","Form","LabelPass","LabelText","FieldUser","Field","_templateObject5","IconUserWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","NoneInput","_templateObject9","_templateObject10","PlusBtn","_templateObject11","IconPlus","_templateObject12","PasswordView","_templateObject13","PasswordIcon","_templateObject14","Svg","_templateObject15","onClose","_useSelector","useSelector","selectUser","username","email","password","avatarURL","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","avatarNewURL","setAvatarNewURL","dispatch","useDispatch","togglePasswordVisibility","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","console","log","updateUser","newName","newEmail","newPassword","newPhoto","updateUserAvatar","stop","_x","apply","arguments","Formik","initialValues","onSubmit","_ref3","isSubmitting","setFieldValue","type","name","alt","src","className","width","height","href","click","id","onChange","URL","createObjectURL","currentTarget","files","selectedFile","target","startsWith","formData","FormData","append","handleAvatarClick","ErrorMessage","component","eyeUser","stroke","disabled","handleCloseModal","Modal","EditProfile","theme","isEditProfileModalOpen","setIsEditProfileModalOpen","openEditProfileModal","selectTheme","state","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","Flower","BoardIcon","BoardList","EditIcon","_templateObject16","TItleBoard","_templateObject17","BoardIcons","_templateObject18","MainButton","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","handleSubmit","resetForm","result","needHelp","sent","t0","message","_x2","validationSchema","_ref4","errors","touched","submitCount","autoComplete","placeholder","resize","closeModal","NeedHelpForm","selectBoards","boards","addBoardSchema","Yup","title","StyledInputField","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","btnContent","boardData","icon","background","newBoard","createBoard","editBoard","_id","handleChange","value","map","checked","sprite","nanoid","i","require","actionsList","Sidebar","isModalOpen","setIsModalOpen","modalType","setModalType","_useState5","_useState6","setBoardData","_useState7","_useState8","isShow","setIsShow","useEffect","getBoards","toggleModal","handleModalType","buttonAction","ariaLabel","editButtonId","getAttribute","filter","board","deleteBoard","ModalBoard","NeedHelpModal","logOut","Select","Option","onToggleTheme","newTheme","forEach","t","classList","remove","add","setTheme","updateTheme","localStorage","setItem","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","storedTheme","getItem","setTimeout","handleOutsideClick","removeEventListener","clearTimeout","closest","ThemeSelector","UserInfo","HeadContainer","HeadText","HeaderDashboard","LineContainer","TaskContainer","props","isDragging","TaskTitle","TaskDesc","TaskVector","TaskBox","TaskContent","TaskPrior","TaskDeadline","TestListIcon","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","ref","innerRef","description","deadline","BoxSvg","Button","nameTitle","visible","setVisible","setTitle","_Fragment","closeColumnModal","ModalColumn","TitleBox","TaskList","isDraggingOver","ContainerModal","BoxAddSvg","Column","column","tasks","cardData","setCardData","dataForModal","titleTask","setTitleTask","showEditModal","setShowEditModal","handleVisible","handleVisibleEdit","taskId","uuidv4","replace","newTask","_defineProperty","priority","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","handleEdit","handleSubmitEdit","data","handleDelete","length","newColumns","Droppable","droppableId","droppableProps","AddColumn","MainContainer","MainDashboard","handlerVisible","DragDropContext","onDragStart","color","transition","onDragUpdate","update","destination","opacity","Object","keys","backgroundColor","onDragEnd","_objectSpread3","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskId","newColumnOrder","columnOrder","direction","initialUserModel","boardsData","ContainerDashboard","Dashboard","refreshUser","ThemeProvider","Header","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}