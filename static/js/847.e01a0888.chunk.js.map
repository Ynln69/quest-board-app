{"version":3,"file":"static/js/847.e01a0888.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Button/Button.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","redux/boards/boardsSelectors.js","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","components/ModalBoard/ModalBoard.jsx","components/ModalBoard/index.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.js","components/HeaderDashboard/HeaderDashboard.jsx","components/Task/Task.styled.js","components/Task/Task.jsx","components/Column/ModalColumn/ModalColumn.styled.js","components/Column/ModalColumn/ModalColumn.jsx","components/Column/AddColumn/AddColumn.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.styled.js","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds/non-optimized|sync|/^/.//.*$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  // &.theme-light {\n  //   background-color: #fcfcfc;\n  //    }\n\n  // &.theme-dark {\n  //   background-color: #161616;\n  // }\n\n  // &.theme-violet {\n  //   background-color: #ECEDFD;\n  // }\n   `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  \n  &.theme-light {\n    background-color: #F6F6F7;\n    fill: #FFFFFF;\n     }\n\n  &.theme-dark {\n    background-color: #161616;\n    fill: #FFFFFF;\n  }\n\n  &.theme-violet {\n    background-color: #ECEDFD;\n    fill: #FFFFFF;\n  }\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: var(--modal_bgc);\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n    color: var(--modal_main_color);\n    background-color: var(--modal_field);\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const IconUserWrapper = styled.label`\n  width: 68px;\n  height: 78px;\n  position: relative;\n  margin: 24px auto 25px;\n  border-radius: 8px;\n  background-position: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid var(--create_normal);\n  color: var(--plus_color);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: var(--create_active);\n  }\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  display: none;\n`;\n\nexport const NoneInput = styled.input`\n  display: none;\n`;\n\nexport const PlusBtn = styled.button`\n  position: absolute;\n  bottom: -10%;\n  left: 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  border: none;\n  background-color: var(--add_photo_bgc);\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\n// export const ModalCloseButton = styled.button`\n//   width: 18px;\n//   height: 18px;\n//   position: absolute;\n//   right: 14px;\n//   top: 14px;\n//   border-radius: 50%;\n//   background-color: transparent;\n//   cursor: pointer;\n//   transition: background-color 250ms ease-in;\n//   stroke: var(--modal_main_color);\n\n//   &:hover,\n//   :focus {\n//   }\n// `;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  EditProfileModal,\n  FormBox,\n  AvatarImage,\n  FieldUser,\n  NoneInput,\n  PlusBtn,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n  Container,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { avatarURL, username, email, password } = useSelector(\n    state => state.profile\n  );\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      \n      // const formData = new FormData();\n      // formData.append('avatar', selectedFile);\n      // dispatch(formData);\n      dispatch(updateProfileData({ newPhoto: selectedFile }));\n      onClose();\n    }\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <p>Edit profile</p>\n        <Formik\n          initialValues={{\n            newPhoto: avatarURL,\n            newName: username,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <IconUserWrapper onClick={handleAvatarClick}>\n                {values.newPhoto ? (\n                  <AvatarImage\n                   type=\"file\"\n                  name=\"newPhoto\"\n                  alt=\"Avatar\"\n                  src={values.newPhoto}\n                  // onChange={e => {\n                  //   handleAvatarClick(e);\n                  //   setFieldValue('newPhoto', URL.createObjectURL(e.currentTarget.files[0]));\n                  // }}\n                  />\n                ) : (\n                  <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                    <use href={`${Sprite}#icon-user`} />\n                  </svg>\n                )}\n                <PlusBtn onClick={() => document.getElementById('newPhotoInput').click()}>\n                  <IconPlus>\n                    <use href={`${Sprite}#icon-plus-us`} />\n                  </IconPlus>\n                  <NoneInput\n      type=\"file\"\n      id=\"newPhotoInput\"\n      name=\"newPhoto\"\n      onChange={event => {\n        setFieldValue(\n          'newPhoto',\n          URL.createObjectURL(event.currentTarget.files[0])\n        );\n      }}\n    />\n                </PlusBtn>\n              </IconUserWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n\n/* <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <IconUserWrapper>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <PlusBtn>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus-us`} />\n                    </IconPlus>\n                    </PlusBtn>\n                                    \n                    \n                  </IconUserWrapper>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus-us`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper> */\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: var(--modal_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--close_icon);\n\n  &:hover,\n  :focus {\n    stroke: var(--close_active);\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  document.body.style.overflow = isOpen ? 'hidden' : 'visible';\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\nimport Sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\n\nconst UserInfo = ({ theme }) => {\n  const { avatarURL, username } = useSelector((state) => state.profile);\n  const [isEditProfileModalOpen, setEditProfileModalOpen] = useState(false);\n\n  const openEditProfileModal = () => {\n    setEditProfileModalOpen(true);\n  };\n\n  const closeEditProfileModal = () => {\n    setEditProfileModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openEditProfileModal} />\n      ) : (\n        <UserIcon className={`icon-user theme-${theme}`} onClick={openEditProfileModal}>\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      <Modal isOpen={isEditProfileModalOpen} handleClose={closeEditProfileModal} heading={'Edit profil'}>\n        <EditProfile />\n      </Modal>\n    </Container>\n  );\n};\n\n\nexport default UserInfo;\n\n\n\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar,  UserIcon  } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const setAvatarIcon = (activeUserTheme) => {\n//   switch (activeUserTheme) {\n//        case 'light':\n//       return '#icon-userlight';\n//       case 'dark':\n//       return '#icon-userdark';\n//     case 'violet':\n//       return '#icon-userviolet';\n//     default:\n//       return '#icon-userlight'; \n//   }\n// }; \n\n// const UserInfo = ({theme}) => {\n//   const { avatarURL, username } = useSelector(state => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   const avatarIcon = setAvatarIcon(theme);\n\n//   return (\n//     <Container>\n//       <div>{username}</div>\n//       {avatarURL ? (\n//         <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon onClick={openModal}>\n//         <svg className={`icon-user`} width=\"32\" height=\"32\">\n//           <use href={Sprite + avatarIcon} />\n//         </svg>\n//       </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n\n\n\n","export const selectTheme = (state) => state.theme;","import styled from '@emotion/styled';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n  cursor: pointer;\n  margin-left: auto;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\nexport const BoardIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  &:last-child {\n    margin-right: 0;\n  }\n  &.theme-violet {\n    fill: var(--add_btn_bgc);\n  }\n  &.theme-dark {\n    fill: #ffffff;\n  }\n`;\n\nexport const TItleBoard = styled.div`\n  display: flex;\n`;\n\nexport const BoardIcons = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: 'Poppins';\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { MainButton } from 'components/Button/Button';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n};\n\nconst NeedHelpForm = () => {\n  const handleSubmit = evt => {};\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n        <NeedHelpForm />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","export const selectBoards = state => state.boards.boards;\n","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 302px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: rgba(0, 0, 0, 0);\n  stroke: rgba(22, 22, 22, 0.5);\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  &:checked + img {\n    border: 1px solid rgba(190, 219, 176, 0.4);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: #161616;\n  }\n  &:hover + img {\n    border: 1px solid #bedbb0;\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { MainButton } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { createBoard, editBoard } from 'redux/boards/boardOperations';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1.jpg',\n  'bg2.jpg',\n  'bg3.jpg',\n  'bg4.jpg',\n  'bg5.jpg',\n  'bg6.jpg',\n  'bg7.jpg',\n  'bg8.jpg',\n  'bg9.jpg',\n  'bg10.jpg',\n  'bg11.jpg',\n  'bg12.jpg',\n  'bg13.jpg',\n  'bg14.jpg',\n  'bg15.jpg',\n  'bg16.jpg',\n];\n\nfunction ModalBoard({ btnContent, closeModal, boardData }) {\n  const dispatch = useDispatch();\n\n  const initialValues =\n    btnContent === 'Create'\n      ? {\n          title: '',\n          icon: icons[0],\n          background: backgrounds[0],\n        }\n      : {\n          title: boardData?.title,\n          icon: boardData?.icon,\n          background: boardData?.background,\n        };\n\n  const handleSubmit = (values, { resetForm }) => {\n    // const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      title: values.title,\n      icon: values.icon,\n      background: values.background,\n    };\n    if (btnContent === 'Create') {\n      dispatch(createBoard(newBoard));\n    } else {\n      console.log(newBoard);\n      dispatch(editBoard({ newBoard, id: boardData._id }));\n    }\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addBoardSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\">\n          <StyledInputField\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={values.title}\n          />\n          <ErrorMsg name=\"title\" component=\"p\" />\n          <StyledSubtitle>Icons</StyledSubtitle>\n          <IconsWrapper>\n            {icons.map(icon => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon}\n                  onChange={handleChange}\n                  checked={values.icon === icon}\n                />\n                <StyledSVG>\n                  <use href={`${sprite}#${icon}`}></use>\n                </StyledSVG>\n              </label>\n            ))}\n          </IconsWrapper>\n          <StyledSubtitle>Background</StyledSubtitle>\n          <BgImagesWrapper>\n            {backgrounds.map((background, i) => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"background\"\n                  value={background}\n                  onChange={handleChange}\n                  checked={values.background === background}\n                />\n                <img\n                  src={require(`../../images/backgrounds/non-optimized/${background}`)}\n                  alt={`background variant ${i + 1}`}\n                  width=\"28\"\n                />\n              </label>\n            ))}\n          </BgImagesWrapper>\n          <MainButton type=\"submit\">{btnContent}</MainButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalBoard;\n","import ModalBoard from './ModalBoard';\n\nexport default ModalBoard;\n","import {\n  SvgAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  SidebarBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardIcon,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TItleBoard,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\nimport Modal from 'components/Modal/Modal';\nimport ModalBoard from 'components/ModalBoard';\n\nconst actionsList = { add: 'add', edit: 'edit' };\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(actionsList.add);\n  const [boardData, setBoardData] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getBoards());\n    },\n    [dispatch],\n    boards\n  );\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleModalType = e => {\n    const buttonAction = e.currentTarget.ariaLabel;\n    const editButtonId = e.currentTarget.getAttribute('data-board-id') || '';\n    if (buttonAction === actionsList.add) {\n      setModalType(actionsList.add);\n      toggleModal();\n    } else {\n      setModalType(actionsList.edit);\n      setBoardData(boards.filter(board => board._id === editButtonId)[0]);\n      toggleModal();\n    }\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n        <button aria-label=\"add\" type=\"button\" onClick={handleModalType}>\n          <SvgAdd>\n            <use href={`${sprite}#icon-plus`} />\n          </SvgAdd>\n        </button>\n      </BoardTitleBlock>\n      <ul>\n        {boards.map(board => (\n          <BoardList key={board._id}>\n            <TItleBoard>\n              <BoardIcon>\n                <use href={`${sprite}#${board.icon}`} />\n              </BoardIcon>\n\n              {board.title}\n            </TItleBoard>\n            <BoardIcons>\n              <button\n                type=\"button\"\n                aria-label=\"edit\"\n                data-board-id={board._id}\n                onClick={handleModalType}\n              >\n                <EditIcon>\n                  <use href={`${sprite}#icon-pencil`} />\n                </EditIcon>\n              </button>\n              <EditIcon onClick={() => dispatch(deleteBoard(board._id))}>\n                <use href={`${sprite}#icon-trash`} />\n              </EditIcon>\n            </BoardIcons>\n          </BoardList>\n        ))}\n      </ul>\n\n      {isModalOpen && (\n        <Modal\n          isOpen={toggleModal}\n          handleClose={toggleModal}\n          heading={modalType === actionsList.add ? 'New board' : 'Edit board'}\n        >\n          <ModalBoard\n            btnContent={modalType === actionsList.add ? 'Create' : 'Edit'}\n            closeModal={toggleModal}\n            boardData={boardData}\n          />\n        </Modal>\n      )}\n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower src={flower} alt=\"flower\" />\n\n        <HelpContent>\n          If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={() => dispatch(logOut())}>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n//   display: inline-block;\n`;\n\nexport const Select = styled.select`\n  position: absolute;\n  display: none;\n  bottom: -70px;\n  left: 80%;\n  transform: translateX(-80%);\n  display: inline-flex;\n  padding: 18px 44px 18px 18px;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid var(--border_theme);\n  cursor: pointer;\n  z-index: 99;\n`;\n\nexport const Option = styled.option`\n  // content: '';\n  // position: absolute;\n  // top: 50%;\n  // right: 12px;\n  // transform: translateY(-50%);\n  // width: 0;\n  // height: 0;\n  font-family: Poppins;\n  font-size: 14px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: -0.28px;\n  border: 1px solid var(--border_theme);\n  color: var(-theme_color);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: var(--theme_active);\n  }\n`;\n\n// export const ThemeMenu = styled.ul`\n//   position: absolute;\n//   top: 100%;\n//   left: 0;\n//   width: 100%;\n//   background: var(--theme_bgc);\n//   box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n//   border-radius: 8px;\n//   padding: 8px 0;\n//   margin-top: 4px;\n//   list-style: none;\n//   z-index: 99;\n// `;\n\n// export const ThemeMenuItem = styled.li`\n//   font-family: Poppins;\n//   color: var(--border_theme);\n//   font-size: 14px;\n//   letter-spacing: -0.28px;\n//   padding: 8px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: var(--border_theme);\n//     color: var(--theme_bgc);\n//   }\n// `;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { updateTheme } from 'redux/theme/operations';\nimport { Container, Select, Option } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  const onToggleTheme = async event => {\n    const newTheme = event.target.value;\n\n    const themes = ['light', 'dark', 'violet'];\n    themes.forEach(t => {\n      document.body.classList.remove(t);\n    });\n\n    document.body.classList.remove(theme);\n    document.body.classList.add(newTheme);\n\n    dispatch(setTheme(newTheme));\n\n    try {\n      await dispatch(updateTheme({ theme: newTheme }));\n      localStorage.setItem('theme', newTheme);\n    } catch (error) {\n      console.log('Error updating theme:', error);\n    }\n    onClose();\n  };\n\n  return (\n    <Container >\n      <Select value={theme} onChange={onToggleTheme} >\n        \n        <Option value=\"light\">Light</Option>\n        <Option value=\"dark\">Dark</Option>\n        <Option value=\"violet\">Violet</Option>\n      \n              </Select>\n    </Container>\n  );\n};\nexport default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  // color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  color: var(--header_user_text);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const HeaderNav = styled.div`\nposition: relative;\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nmargin-right: 14px;\ncursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  color: var(--header_user_text);\n  fill: transparent;\n  z-index: 999;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n    let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen); // Toggle the state for isThemeSelectorOpen\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      {isSideBarOpen && <Sidebar />}\n      <HeaderWrap>\n        <HeaderNav>\n          <div>\n            <SelectIcon\n              className={`icon-chevron-down theme-${theme}`}\n              width=\"16\"\n              height=\"16\"\n              onClick={toggleThemeSelector}\n            >\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector onClose={() => setThemeSelectorOpen(false)} />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const HeadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 24px;\n`;\n\nexport const HeadText = styled.p`\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import { HeadContainer, HeadText } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = () => {\n  return (\n    <HeadContainer>\n      <HeadText>Name Board</HeadText>\n      <HeadText>Filters</HeadText>\n    </HeadContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LineContainer = styled.div`\n  position: absolute;\n  width: 4px;\n  top: 0;\n  left: -4px;\n  height: 100%;\n  border-radius: 4px 0px 0px 4px;\n  background: #8fa1d0;\n`;\n\nexport const TaskContainer = styled.div`\n  position: relative;\n  padding: 14px 20px;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background-color: ${props =>\n    props.isDragging ? 'var(--board_task_bgc)' : 'var(--board_task_bgc)'};\n  margin-bottom: 8px;\n`;\n\nexport const TaskTitle = styled.h2`\n  margin-bottom: 8px;\n\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskDesc = styled.p`\n  margin-bottom: 14px;\n  width: 290px;\n  height: 38px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: var(--board_filter_color);\n  font-family: 'Poppins';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  letter-spacing: -0.24px;\n`;\n\nexport const TaskVector = styled.div`\n  width: 290px;\n  height: 1px;\n  background-color: var(--line_color);\n  margin-bottom: 14px;\n`;\n\nexport const TaskBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const TaskContent = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TaskPrior = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > div {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: violet;\n  }\n`;\n\nexport const TaskDeadline = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > span {\n    color: var(--board_main_color);\n    font-family: Poppins;\n    font-size: 10px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: -0.2px;\n  }\n`;\n\nexport const TestListIcon = styled.ul`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  > li {\n    display: flex;\n    align-items: center;\n    > button {\n      padding: 0;\n      border: none;\n      background-color: rgba(0, 0, 0, 0);\n      > svg {\n        stroke: var(--modal_second_color);\n        fill: rgba(0, 0, 0, 0);\n        &:hover,\n        &:focus,\n        &:active {\n          stroke: var(--icon_active_color);\n        }\n      }\n    }\n  }\n`;\n","import {\n  LineContainer,\n  TaskContainer,\n  TaskTitle,\n  TaskDesc,\n  TaskVector,\n  TaskBox,\n  TaskContent,\n  TaskPrior,\n  TaskDeadline,\n  TestListIcon,\n} from './Task.styled';\nimport { Draggable } from 'react-beautiful-dnd';\nimport sprite from '../../images/sprite.svg';\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <TaskContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          <LineContainer />\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <TaskTitle>{task.title}</TaskTitle>\n          <TaskDesc>{task.description}</TaskDesc>\n          <TaskVector />\n          <TaskBox>\n            <TaskContent>\n              <TaskPrior>\n                {/* <p>{task.priority}</p> */}\n                <p>Priority</p>\n                <div />\n              </TaskPrior>\n              <TaskDeadline>\n                <p>Deadline</p>\n                <span>{task.deadline}</span>\n              </TaskDeadline>\n            </TaskContent>\n            <TestListIcon>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-bell`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-arrow-circle`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-pencil`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-trash`} />\n                  </svg>\n                </button>\n              </li>\n            </TestListIcon>\n          </TaskBox>\n        </TaskContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 302px;\n  min-height: 49px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  color: #161616;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  ine-height: normal;\n  font-family: inherit;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  color: #161616;\n  font-size: 18px;\n  font-weight: 500;\n  width: 302px;\n  height: 49px;\n`;\n","import { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport sprite from '../../../images/sprite.svg';\nimport { Button, BoxSvg, SvgAdd, Input } from './ModalColumn.styled';\n\nconst ModalColumn = ({ handleSubmit, nameTitle }) => {\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState(nameTitle || '');\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleFormSubmit = () => {\n    handleSubmit(title);\n    handlerVisible();\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ title: nameTitle }} onSubmit={handleFormSubmit}>\n        <Form>\n          <Input\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={e => {\n              setTitle(e.target.value);\n            }}\n          />\n          <Button type=\"submit\">\n            <BoxSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxSvg>\n            Add\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\nexport default ModalColumn;\n","import Modal from '../../Modal/Modal';\nimport ModalColumn from '../ModalColumn/ModalColumn';\n\nconst AddColumn = ({ closeColumnModal, handleSubmit, title, nameTitle }) => {\n  const handleCloseModal = () => {\n    closeColumnModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={title}>\n        <ModalColumn handleSubmit={handleSubmit} nameTitle={nameTitle} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  border-radius: 2px;\n  min-width: 334px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 56px;\n  padding: 18px 20px 17px 20px;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  color: #161616;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nexport const ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: rgba(22, 22, 22, 0.5);\n  fill: #fff;\n  cursor: pointer;\n`;\n\nexport const BoxSvg = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxAddSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\nimport AddColumn from './AddColumn/AddColumn';\nimport {\n  Container,\n  Title,\n  TitleBox,\n  TaskList,\n  ContainerModal,\n  Svg,\n  BoxSvg,\n  SvgAdd,\n  BoxAddSvg,\n  Button,\n} from './Column.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const handleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleVisibleEdit = () => {\n    setShowEditModal(!showEditModal);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    handleVisible();\n  };\n\n  const handleEdit = e => {\n    handleVisibleEdit();\n    // console.log(column.title);\n    // console.log(column);\n    // column.title;\n    // const newColumn = {title: }\n  };\n\n  const handleDelete = () => {};\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <TitleBox {...provided.dragHandleProps}>\n            <Title>{column.title}</Title>\n            <BoxSvg>\n              <Svg onClick={handleEdit}>\n                <use href={`${sprite}#icon-pencil`} />\n              </Svg>\n              <Svg onClick={handleDelete}>\n                <use href={`${sprite}#icon-trash`} />\n              </Svg>\n            </BoxSvg>\n          </TitleBox>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <Button onClick={handleVisible}>\n            <BoxAddSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxAddSvg>\n            Add another card\n          </Button>\n\n          {showEditModal && (\n            <AddColumn\n              title={'Edit column'}\n              nameTitle={column.title}\n              closeColumnModal={handleVisibleEdit}\n              handleSubmit={handleSubmit}\n            />\n          )}\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.ul`\n  display: flex;\n  padding: 0 24px;\n`;\n\nexport const Container = styled.ul`\n  display: flex;\n  gap: 18px;\n  position: relative;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #ffffff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\n//add Elvira\nimport AddColumn from 'components/Column/AddColumn/AddColumn';\nimport {\n  MainContainer,\n  Container,\n  Button,\n  BoxSvg,\n  SvgAdd,\n} from './MainDashboard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n  const [visible, setVisible] = useState(false);\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = data => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: data,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    handlerVisible();\n  };\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'inherit';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <MainContainer>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <li>\n        <Button onClick={handlerVisible}>\n          <BoxSvg>\n            <SvgAdd>\n              <use href={`${sprite}#icon-plus`} />\n            </SvgAdd>\n          </BoxSvg>\n          Add another column\n        </Button>\n      </li>\n      {visible && (\n        <>\n          <AddColumn\n            closeColumnModal={handlerVisible}\n            handleSubmit={handleSubmit}\n            title={'Add column'}\n          />\n        </>\n      )}\n    </MainContainer>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerDashboard = styled.div`\n  width: 100%;\n  background: var(--board_bgc);\n`;\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\nimport { ContainerDashboard } from './Dashboard.styled';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <ContainerDashboard>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </ContainerDashboard>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Container } from './HomePage.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { refreshUser } from 'redux/auth/operations';\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <Container>\n        <Sidebar theme={theme} />\n        <div style={{ width: '100%' }}>\n          <Header theme={theme} />\n          <Dashboard theme={theme} />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg1.jpg\": 7727,\n\t\"./bg10.jpg\": 1640,\n\t\"./bg11.jpg\": 1948,\n\t\"./bg12.jpg\": 146,\n\t\"./bg13.jpg\": 3317,\n\t\"./bg14.jpg\": 2285,\n\t\"./bg15.jpg\": 1487,\n\t\"./bg16.jpg\": 130,\n\t\"./bg2.jpg\": 22,\n\t\"./bg3.jpg\": 5881,\n\t\"./bg4.jpg\": 5102,\n\t\"./bg5.jpg\": 3581,\n\t\"./bg6.jpg\": 8528,\n\t\"./bg7.jpg\": 7333,\n\t\"./bg8.jpg\": 490,\n\t\"./bg9.jpg\": 1779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2860;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","EditProfileModal","FormBox","Form","_templateObject4","FieldUser","Field","_templateObject5","IconUserWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","NoneInput","_templateObject9","_templateObject10","PlusBtn","_templateObject11","IconPlus","_templateObject12","_ref","onClose","_useSelector","useSelector","state","profile","avatarURL","username","email","password","dispatch","useDispatch","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateProfileData","stop","_x","apply","arguments","handleAvatarClick","e","selectedFile","target","files","type","startsWith","newPhoto","_jsx","children","_jsxs","Formik","initialValues","newName","newEmail","newPassword","onSubmit","_ref3","isSubmitting","setFieldValue","onClick","name","alt","src","className","width","height","href","concat","Sprite","document","getElementById","click","id","onChange","event","URL","createObjectURL","currentTarget","ErrorMessage","component","disabled","Backdrop","ModalWindow","Heading","CloseBtn","isOpen","handleClose","heading","body","style","overflow","window","addEventListener","key","ReactDOM","stopPropagation","xlinkHref","theme","_useState","useState","_useState2","_slicedToArray","isEditProfileModalOpen","setEditProfileModalOpen","openEditProfileModal","Modal","EditProfile","selectTheme","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","Flower","_templateObject13","BoardIcon","_templateObject14","BoardList","_templateObject15","EditIcon","_templateObject16","TItleBoard","_templateObject17","BoardIcons","_templateObject18","MainButton","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","validationSchema","evt","errors","touched","submitCount","autoComplete","placeholder","resize","closeModal","NeedHelpForm","selectBoards","boards","addBoardSchema","Yup","title","StyledInputField","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","btnContent","boardData","icon","background","resetForm","newBoard","createBoard","console","log","editBoard","_id","handleChange","value","map","checked","sprite","nanoid","i","require","actionsList","Sidebar","isModalOpen","setIsModalOpen","_useState3","_useState4","modalType","setModalType","_useState5","_useState6","setBoardData","_useState7","_useState8","isShow","setIsShow","useEffect","getBoards","toggleModal","handleModalType","buttonAction","ariaLabel","editButtonId","getAttribute","filter","board","deleteBoard","ModalBoard","NeedHelpModal","logOut","Select","Option","onToggleTheme","newTheme","forEach","t","classList","remove","add","setTheme","updateTheme","localStorage","setItem","t0","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","storedTheme","getItem","setTimeout","handleOutsideClick","removeEventListener","clearTimeout","closest","ThemeSelector","UserInfo","HeadContainer","HeadText","HeaderDashboard","LineContainer","TaskContainer","props","isDragging","TaskTitle","TaskDesc","TaskVector","TaskBox","TaskContent","TaskPrior","TaskDeadline","TestListIcon","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","ref","innerRef","description","deadline","BoxSvg","Button","handleSubmit","nameTitle","visible","setVisible","setTitle","_Fragment","closeColumnModal","ModalColumn","TitleBox","TaskList","isDraggingOver","ContainerModal","Svg","BoxAddSvg","Column","column","tasks","cardData","setCardData","dataForModal","titleTask","setTitleTask","showEditModal","setShowEditModal","handleVisible","handleVisibleEdit","taskId","uuidv4","replace","newTask","_defineProperty","priority","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","handleEdit","handleDelete","Droppable","droppableId","droppableProps","AddColumn","MainContainer","MainDashboard","handlerVisible","DragDropContext","onDragStart","color","transition","onDragUpdate","update","destination","opacity","Object","keys","length","backgroundColor","onDragEnd","result","_objectSpread3","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskId","newColumnOrder","columnOrder","direction","data","initialUserModel","boardsData","ContainerDashboard","Dashboard","refreshUser","ThemeProvider","Header","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}