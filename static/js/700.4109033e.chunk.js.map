{"version":3,"file":"static/js/700.4109033e.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background: #bedbb0;\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: #1f1f1f;\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n\n    color: #ffffff;\n    background-color: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const PhotoInputWrapper = styled.label`\nwidth: 68px;\nheight: 78px;\nflex-shrink: 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ncursor: pointer;\n\n// svg {\n//   width: 68px;\n//   height: 68px;\n//   fill: #fff;\n// }\n`;\n\nexport const AvatarImage = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\nborder-radius: 50%;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n   position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  display: none;\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 24px;\nheight: 24px;\n  cursor: pointer;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 4px;\n  fill: #161616;\n`;\n\nexport const IconUserWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  ModalCloseButton,\n  EditProfileModal,\n  FormBox,\n  PhotoInputWrapper,\n  AvatarImage,\n  FieldUser,\n  FileInput,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { photo, name, email, password } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = () => {\n    document.getElementById('newPhotoInput').click();\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <div>Edit profile</div>\n        <ModalCloseButton onClick={onClose}><use xlinkHref={`${Sprite}#icon-x-close`} /></ModalCloseButton>\n        <Formik\n          initialValues={{\n            newPhoto: photo,\n            newName: name,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\n\nconst UserInfo = () => {\n  const { photo, name } = useSelector(state => state.profile);\n  const [isModalOpen, setModalOpen] = React.useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{name}</div>\n      <Avatar src={photo} alt=\"User Avatar\" onClick={openModal} />\n      {isModalOpen && <EditProfile onClose={closeModal} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n   color: #ffffff;\n  height: 68px;\n  padding-left: 32px;\n  padding-right: 24px;\n\n  &.theme-light {\n    /* Light theme styles */\n    background-color: #fff;\n    color: #1f1f1f;\n  }\n\n  &.theme-dark {\n    /* Dark theme styles */\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    /* Violet theme styles */\n    background-color: #6a1b9a;\n    color: #fff;\n  }\n`;\n\nexport const HeaderNav = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n`;","import React, { useState } from 'react';\nimport { useTheme } from 'hooks/themeContext';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { LIGHT, DARK, VIOLET } from 'constants';\nimport { Container, HeaderNav, MenuIcon, SelectIcon } from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = ({ onToggleMenu }) => {\n  const { theme, handleThemeChange } = useTheme();\n  const [isOptionListOpen, setOptionListOpen] = useState(false);\n\n  const toggleOptionList = () => {\n    setOptionListOpen(!isOptionListOpen);\n  };\n\n  const onToggleTheme = () => {\n    let newTheme = LIGHT;\n    if (theme === LIGHT) {\n      newTheme = DARK;\n    } else if (theme === DARK) {\n      newTheme = VIOLET;\n    }\n    handleThemeChange(newTheme);\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={onToggleMenu}>\n        <div>\n          <MenuIcon></MenuIcon>\n        </div>\n      </div>\n      <div>\n        <HeaderNav onClick={toggleOptionList} value={theme}>\n          <div>\n            <SelectIcon><use stroke=\"white\" href={`${Sprite}#icon-menu`} /></SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        <select value={theme} onChange={onToggleTheme}>\n          <option value=\"light\">Light</option>\n          <option value=\"dark\">Dark</option>\n          <option value=\"violet\">Violet</option>\n        </select>\n      </div>\n      <UserInfo />\n    </Container>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\n\nconst HomePage = () => {\n  return (\n    <ThemeProvider>\n      <Header />\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"names":["Container","styled","Avatar","EditProfileModal","ModalCloseButton","FormBox","Form","FieldUser","Field","PhotoInputWrapper","AvatarImage","SaveBtn","FileInput","IconPlus","IconUserWrapper","onClose","useSelector","state","profile","photo","name","email","password","dispatch","useDispatch","handleFormSubmit","values","updateProfileData","handleAvatarClick","document","getElementById","click","onClick","xlinkHref","Sprite","initialValues","newPhoto","newName","newEmail","newPassword","onSubmit","isSubmitting","setFieldValue","src","alt","width","height","href","className","id","type","onChange","event","URL","createObjectURL","currentTarget","files","component","disabled","React","isModalOpen","setModalOpen","HeaderNav","MenuIcon","SelectIcon","onToggleMenu","useTheme","theme","handleThemeChange","useState","isOptionListOpen","setOptionListOpen","value","stroke","newTheme","LIGHT","DARK","VIOLET"],"sourceRoot":""}