{"version":3,"file":"static/js/393.da334e3c.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/Button/Button.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","components/ModalBoard/ModalBoard.jsx","components/Sidebar/AddBoard/AddBoard.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Calendar/Calendar.styled.js","components/Calendar/Calendar.jsx","components/Task/Task.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds/non-optimized|sync|/^/.//.*$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  // &.theme-light {\n  //   background-color: #fcfcfc;\n  //    }\n\n  // &.theme-dark {\n  //   background-color: #161616;\n  // }\n\n  // &.theme-violet {\n  //   background-color: #ECEDFD;\n  // }\n   `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  \n  &.theme-light {\n    background-color: #F6F6F7;\n    fill: #FFFFFF;\n     }\n\n  &.theme-dark {\n    background-color: #161616;\n    fill: #FFFFFF;\n  }\n\n  &.theme-violet {\n    background-color: #ECEDFD;\n    fill: #FFFFFF;\n  }\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: var(--modal_bgc);\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--modal_main_color);\n\n  &:hover,\n  :focus {\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n    color: var(--modal_main_color);\n    background-color: var(--modal_field);\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const PhotoInputWrapper = styled.label`\nwidth: 68px;\nheight: 78px;\nflex-shrink: 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ncursor: pointer;\n\n&:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n// svg {\n//   width: 68px;\n//   height: 68px;\n//   fill: #fff;\n// }\n`;\n\nexport const AvatarImage = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\nborder-radius: 50%;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid  var(--create_normal);\n  color: var(--plus_color);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: var(--create_active);\n  }\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n   position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  display: none;\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 24px;\nheight: 24px;\n  cursor: pointer;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 4px;\n  fill: #161616;\n`;\n\nexport const IconUserWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  ModalCloseButton,\n  EditProfileModal,\n  FormBox,\n  PhotoInputWrapper,\n  AvatarImage,\n  FieldUser,\n  FileInput,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { photo, name, email, password } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = () => {\n    document.getElementById('newPhotoInput').click();\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <div>Edit profile</div>\n        <ModalCloseButton onClick={onClose}><use xlinkHref={`${Sprite}#icon-x-close`} /></ModalCloseButton>\n        <Formik\n          initialValues={{\n            newPhoto: photo,\n            newName: name,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar, UserIcon } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const UserInfo = ({ theme }) => {\n//   const { photo, name } = useSelector((state) => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   return (\n//     <Container>\n//       <div>{name}</div>\n//       {photo ? (\n//         <Avatar src={photo} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon className={`icon-user theme-${theme}`} onClick={openModal}>\n//           <use href={`${Sprite}#icon-user`} />\n//         </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar,  UserIcon  } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\nimport Sprite from '../../images/sprite.svg';\n\nconst setAvatarIcon = (activeUserTheme) => {\n  switch (activeUserTheme) {\n       case 'light':\n      return '#icon-userlight';\n      case 'dark':\n      return '#icon-userdark';\n    case 'violet':\n      return '#icon-userviolet';\n    default:\n      return '#icon-userlight'; \n  }\n}; \n\nconst UserInfo = ({theme}) => {\n  const { photo, name } = useSelector(state => state.profile);\n  const [isModalOpen, setModalOpen] = React.useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const avatarIcon = setAvatarIcon(theme);\n\n  return (\n    <Container>\n      <div>{name}</div>\n      {photo ? (\n        <Avatar src={photo} alt=\"User Avatar\" onClick={openModal} />\n      ) : (\n        <UserIcon onClick={openModal}>\n        <svg className={`icon-user`} width=\"32\" height=\"32\">\n          <use href={Sprite + avatarIcon} />\n        </svg>\n      </UserIcon>\n      )}\n      {isModalOpen && <EditProfile onClose={closeModal} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;\n\n\n\n","export const selectTheme = (state) => state.theme;","import styled from '@emotion/styled';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n  cursor: pointer;\n  margin-left: auto;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: var(--modal_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  document.body.style.overflow = isOpen ? 'hidden' : 'visible';\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px;\n\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { MainButton } from 'components/Button/Button';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n};\n\nconst NeedHelpForm = () => {\n  const handleSubmit = evt => {};\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n        <NeedHelpForm />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 302px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #fff;\n  stroke: rgba(22, 22, 22, 0.5);\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  &:checked + img {\n    border: 1px solid rgba(190, 219, 176, 0.4);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: #161616;\n  }\n  &:hover + img {\n    border: 1px solid #bedbb0;\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { MainButton } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { createBoard } from 'redux/boards/boardOperations';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1.jpg',\n  'bg2.jpg',\n  'bg3.jpg',\n  'bg4.jpg',\n  'bg5.jpg',\n  'bg6.jpg',\n  'bg7.jpg',\n  'bg8.jpg',\n  'bg9.jpg',\n  'bg10.jpg',\n  'bg11.jpg',\n  'bg12.jpg',\n  'bg13.jpg',\n  'bg14.jpg',\n  'bg15.jpg',\n  'bg16.jpg',\n];\n\nconst initialValues = { title: '', icon: icons[0], background: backgrounds[0] };\n\nfunction ModalBoard({ btnContent, closeModal }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    // const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      title: values.title,\n      icon: values.icon,\n      background: values.background,\n    };\n    dispatch(createBoard(newBoard));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addBoardSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\">\n          <StyledInputField\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={values.title}\n          />\n          <ErrorMsg name=\"title\" component=\"p\" />\n          <StyledSubtitle>Icons</StyledSubtitle>\n          <IconsWrapper>\n            {icons.map(icon => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon}\n                  onChange={handleChange}\n                  checked={values.icon === icon}\n                />\n                <StyledSVG>\n                  <use href={`${sprite}#${icon}`}></use>\n                </StyledSVG>\n              </label>\n            ))}\n          </IconsWrapper>\n          <StyledSubtitle>Background</StyledSubtitle>\n          <BgImagesWrapper>\n            {backgrounds.map((background, i) => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"background\"\n                  value={background}\n                  onChange={handleChange}\n                  checked={values.background === background}\n                />\n                <img\n                  src={require(`../../images/backgrounds/non-optimized/${background}`)}\n                  alt={`background variant ${i + 1}`}\n                  width=\"28\"\n                />\n              </label>\n            ))}\n          </BgImagesWrapper>\n          <MainButton type=\"submit\">{btnContent}</MainButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalBoard;\n","import Modal from '../../Modal/Modal';\nimport ModalBoard from '../../ModalBoard/ModalBoard';\n\nconst AddBoard = ({ closeBoardModal }) => {\n  const handleCloseModal = () => {\n    closeBoardModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading=\"New board\">\n        <ModalBoard btnContent={'Create'} closeModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddBoard;\n","import {\n  SvgAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  SidebarBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport AddBoard from './AddBoard/AddBoard';\nimport { useDispatch } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isShow, setIsShow] = useState(false);\n  const [openBoard, setOpenBoard] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getBoards());\n  }, [dispatch]);\n\n  const showBoardModal = () => {\n    setOpenBoard(true);\n  };\n  const closeBoardModal = () => {\n    setOpenBoard(false);\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  const handleLogout = () => {\n    console.log('logout');\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n\n        <SvgAdd onClick={showBoardModal}>\n          <use href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n        {openBoard && <AddBoard closeBoardModal={closeBoardModal} />}\n      </BoardTitleBlock>\n\n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower src={flower} alt=\"flower\" />\n\n        <HelpContent>\n          If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={handleLogout}>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const HeaderNav = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  color: var(--header_user_text);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { updateTheme } from 'redux/theme/operations';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  SelectIcon,\n  HeaderWrap,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isOptionListOpen, setOptionListOpen] = useState(false);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n    let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleOptionList = () => {\n    setOptionListOpen(!isOptionListOpen);\n  };\n\n  const sendThemeToBackend = newTheme => {\n    localStorage.setItem('theme', newTheme);\n  };\n\n     const onToggleTheme = (event) => {\n    const newTheme = event.target.value;\n\n      const themes = ['light', 'dark', 'violet'];\n    themes.forEach(t => {\n      document.body.classList.remove(t);\n    });\n\n    document.body.classList.remove(theme);\n    document.body.classList.add(newTheme);\n  \n    dispatch(setTheme(newTheme)); // Update the local theme state immediately\n    sendThemeToBackend(newTheme); // Save the theme in localStorage (this part seems correct)\n  \n       dispatch(updateTheme({ theme: newTheme }))\n      .unwrap()\n      .catch((error) => {\n        console.log('Error updating theme:', error);\n      });\n\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen);\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      {isSideBarOpen && <Sidebar />}\n      <HeaderWrap>\n        <HeaderNav onClick={toggleOptionList} value={theme}>\n          <div>\n            <SelectIcon\n              className={`icon-chevron-down theme-${theme}`}\n              onClick={toggleThemeSelector}\n            >\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <select value={theme} onChange={onToggleTheme}>\n            <option value=\"light\">Light</option>\n            <option value=\"dark\">Dark</option>\n            <option value=\"violet\">Violet</option>\n          </select>\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n","export const HeaderDashboard = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        height: '80px',\n        backgroundColor: 'lightgray',\n        widows: '100%',\n      }}\n    >\n      <p>Name Board</p>\n\n      <p>Filters logic</p>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CalendarContainer = styled.div`\n  & .react-datepicker {\n    font-family: 'Poppins', sans-serif;\n    border-radius: 8px;\n    padding: 18px;\n    border: 1px solid #bedbb0;\n    background: #fff;\n  }\n\n  & .react-datepicker-popper[data-placement^='bottom'] {\n    padding: 0px;\n  }\n\n  & .react-datepicker__triangle {\n    display: none;\n  }\n\n  & .react-datepicker__header {\n    background: transparent;\n    border: none;\n    padding: 0;\n  }\n\n  & .react-datepicker__navigation {\n    position: absolute;\n    top: 12px;\n  }\n\n  & .react-datepicker__navigation-icon--previous:before {\n    right: -12px;\n    border-color: #161616cc;\n    border-width: 2px 2px 0 0;\n    transition: border-color 250ms ease-in;\n  }\n\n  & .react-datepicker__navigation-icon--next:before {\n    left: -12px;\n    border-color: #161616cc;\n    border-width: 2px 2px 0 0;\n    transition: border-color 250ms ease-in;\n  }\n\n  &\n    .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon--previous:before,\n  &\n    .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon--next:before {\n    border-color: #bedbb0;\n  }\n\n  & .react-datepicker__current-month {\n    font-family: 'Poppins', sans-serif;\n    color: #161616;\n    font-family: Poppins;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: -0.32px;\n    padding-bottom: 14px;\n    border-bottom: 1px solid #16161633;\n  }\n\n  & .react-datepicker__day-names {\n    margin: 12px 0 0 0;\n  }\n\n  & .react-datepicker__day-name {\n    color: rgba(22, 22, 22, 0.5);\n    font-family: Poppins;\n    font-size: 14px;\n    font-weight: 500;\n  }\n\n  & .react-datepicker__month {\n    margin: 0;\n  }\n\n  & .react-datepicker__day {\n    font-family: 'Poppins', sans-serif;\n    color: #161616;\n    font-family: Poppins;\n    font-size: 14px;\n    font-weight: 400;\n    border-radius: 50%;\n    transition: background-color 250ms ease-in, color 250ms ease-in;\n  }\n\n  & .react-datepicker__day--selected,\n  & .react-datepicker__day:hover {\n    background: #bedbb0;\n    border-radius: 50%;\n    border: none;\n  }\n\n  & .react-datepicker__day--outside-month,\n  & .react-datepicker__day--disabled {\n    color: rgba(22, 22, 22, 0.2);\n  }\n\n  & .react-datepicker__day--outside-month:hover,\n  & .react-datepicker__day--disabled:hover {\n    background: rgba(22, 22, 22, 0.1);\n  }\n\n  & .react-datepicker__day--keyboard-selected {\n    background: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  color: #bedbb0;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  border: none;\n`;\n","import React, { useState, forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { subDays, addDays, formatDistanceToNowStrict } from 'date-fns';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Button, CalendarContainer } from './Calendar.styled';\nimport Sprite from '../../images/sprite.svg';\n\nexport const Calendar = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const result = formatDistanceToNowStrict(Date.parse(selectedDate), {\n    includeSeconds: true,\n  });\n  console.log(result);\n\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => {\n    const formatDate = () => {\n      const today = new Date();\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      if (selectedDate.toDateString() === today.toDateString()) {\n        return 'Today,';\n      } else if (selectedDate.toDateString() === tomorrow.toDateString()) {\n        return 'Tomorrow,';\n      } else {\n        return '';\n      }\n    };\n\n    return (\n      <Button onClick={onClick} ref={ref}>\n        {formatDate(value)} {value}\n        <svg width=\"18\" height=\"18\" fill=\"#BEDBB0\">\n          <use href={`${Sprite}#icon-chevron-down-1`} />\n        </svg>\n      </Button>\n    );\n  });\n\n  return (\n    <CalendarContainer>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => setSelectedDate(date)}\n        dateFormat=\"MMMM d\"\n        customInput={<ExampleCustomInput value={selectedDate} />}\n        onChangeRaw={e => {\n          const newDate = new Date(e.target.value);\n          setSelectedDate(newDate);\n        }}\n        minDate={subDays(new Date(), 0)}\n        maxDate={addDays(new Date(), 365)}\n        popperModifiers={[\n          {\n            name: 'offset',\n            options: {\n              offset: [5, 10],\n            },\n          },\n          {\n            name: 'preventOverflow',\n            options: {\n              rootBoundary: 'viewport',\n              tether: false,\n              altAxis: true,\n            },\n          },\n        ]}\n      />\n    </CalendarContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Calendar } from 'components/Calendar/Calendar';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  padding: 8px;\n  margin: 8px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n\n  /* display: flex; */\n  gap: 10px;\n`;\n\nconst Handle = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: orange;\n  border-radius: 4px;\n`;\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <Handle />\n          <p>{task.title}</p>\n          <p>{task.description}</p>\n          <p>{task.priority}</p>\n          <p>{task.deadline}</p>\n          <Calendar />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  background-color: white;\n  width: 220px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3`\n  padding: 8px;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    hendleVisible();\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <Title {...provided.dragHandleProps}>{column.title}</Title>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <button onClick={hendleVisible}>Add another card</button>\n\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\nconst Container = styled.div`\n  display: flex;\n\n  position: relative;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 50%;\n  top: 50%;\n`;\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n\n  const [visible, setVisible] = useState(false);\n  const [titleColumn, setTitleColumn] = useState('');\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: titleColumn,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    hendleVisible();\n  };\n\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      console.log(newState);\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <button\n        style={{ height: '50px', width: '200px' }}\n        onClick={hendleVisible}\n      >\n        Add another card\n      </button>\n\n      {visible && (\n        <ContainerModal>\n          Add Column\n          <label>\n            Column title\n            <input\n              type=\"text\"\n              value={titleColumn}\n              onChange={e => {\n                setTitleColumn(e.target.value);\n              }}\n            />\n          </label>\n          <button type=\"submit\" onClick={handleSubmit}>\n            Add Column\n          </button>\n        </ContainerModal>\n      )}\n    </div>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <div>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Container } from './HomePage.styled';\n\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n\n  return (\n    <ThemeProvider>\n      <Container>\n        <Sidebar theme={theme} />\n        <div style={{ width: '100%' }}>\n          <Header theme={theme} />\n          <Dashboard theme={theme} />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg1.jpg\": 7727,\n\t\"./bg10.jpg\": 1640,\n\t\"./bg11.jpg\": 1948,\n\t\"./bg12.jpg\": 146,\n\t\"./bg13.jpg\": 3317,\n\t\"./bg14.jpg\": 2285,\n\t\"./bg15.jpg\": 1487,\n\t\"./bg16.jpg\": 130,\n\t\"./bg2.jpg\": 22,\n\t\"./bg3.jpg\": 5881,\n\t\"./bg4.jpg\": 5102,\n\t\"./bg5.jpg\": 3581,\n\t\"./bg6.jpg\": 8528,\n\t\"./bg7.jpg\": 7333,\n\t\"./bg8.jpg\": 490,\n\t\"./bg9.jpg\": 1779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2860;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","EditProfileModal","ModalCloseButton","FormBox","Form","_templateObject4","FieldUser","Field","_templateObject5","PhotoInputWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","FileInput","_templateObject9","IconPlus","_templateObject10","IconUserWrapper","_templateObject11","_ref","onClose","_useSelector","useSelector","state","profile","photo","name","email","password","dispatch","useDispatch","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateProfileData","stop","_x","apply","arguments","handleAvatarClick","document","getElementById","click","_jsx","children","_jsxs","onClick","xlinkHref","concat","Sprite","Formik","initialValues","newPhoto","newName","newEmail","newPassword","onSubmit","_ref3","isSubmitting","setFieldValue","_Fragment","src","alt","width","height","href","className","id","type","onChange","event","URL","createObjectURL","currentTarget","files","ErrorMessage","component","disabled","theme","_React$useState","React","_React$useState2","_slicedToArray","isModalOpen","setModalOpen","openModal","avatarIcon","activeUserTheme","setAvatarIcon","EditProfile","selectTheme","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","_templateObject12","Flower","_templateObject13","Backdrop","ModalWindow","Heading","CloseBtn","isOpen","handleClose","heading","body","style","overflow","window","addEventListener","key","ReactDOM","e","stopPropagation","MainButton","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","validationSchema","evt","errors","touched","submitCount","autoComplete","placeholder","resize","closeModal","Modal","NeedHelpForm","addBoardSchema","Yup","title","StyledInputField","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","icon","background","btnContent","resetForm","newBoard","createBoard","handleChange","value","map","checked","sprite","nanoid","i","require","closeBoardModal","handleCloseModal","ModalBoard","Sidebar","_useState","useState","_useState2","isShow","setIsShow","_useState3","_useState4","openBoard","setOpenBoard","useEffect","getBoards","AddBoard","NeedHelpModal","console","log","logOut","HeaderNav","MenuIcon","HeaderWrap","SelectIcon","isOptionListOpen","setOptionListOpen","isSideBarOpen","setSideBarOpen","_useState5","_useState6","isThemeSelectorOpen","setThemeSelectorOpen","timeout","storedTheme","localStorage","getItem","setTheme","setTimeout","handleOutsideClick","removeEventListener","clearTimeout","target","closest","newTheme","forEach","t","classList","remove","add","setItem","sendThemeToBackend","updateTheme","unwrap","catch","error","UserInfo","HeaderDashboard","display","alignItems","justifyContent","backgroundColor","widows","CalendarContainer","Button","Calendar","Date","selectedDate","setSelectedDate","result","formatDistanceToNowStrict","parse","includeSeconds","ExampleCustomInput","forwardRef","ref","today","tomorrow","setDate","getDate","toDateString","formatDate","fill","DatePicker","selected","date","dateFormat","customInput","onChangeRaw","newDate","minDate","subDays","maxDate","addDays","popperModifiers","options","offset","rootBoundary","tether","altAxis","props","isDragging","Handle","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","innerRef","description","priority","deadline","TaskList","isDraggingOver","ContainerModal","Column","column","tasks","cardData","setCardData","visible","setVisible","dataForModal","titleTask","setTitleTask","hendleVisible","handleSubmit","taskId","uuidv4","replace","newTask","_defineProperty","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","Droppable","droppableId","droppableProps","MainDashboard","titleColumn","setTitleColumn","DragDropContext","onDragStart","color","transition","onDragUpdate","update","destination","opacity","Object","keys","length","onDragEnd","_objectSpread3","source","start","finish","newTaskId","Array","from","splice","newState","startTaskIds","newStart","finishTaskIds","newFinish","newColumnOrder","columnOrder","direction","initialUserModel","boardsData","Dashboard","ThemeProvider","Header","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}