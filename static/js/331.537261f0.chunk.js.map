{"version":3,"file":"static/js/331.537261f0.chunk.js","mappings":"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","sources":["components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Task/Task.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: rgb(252, 252, 252);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  // &.theme-light {\n  //   background-color: #fcfcfc;\n  //    }\n\n  // &.theme-dark {\n  //   background-color: #161616;\n  // }\n\n  // &.theme-violet {\n  //   background-color: #ECEDFD;\n  // }\n   `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  \n  &.theme-light {\n    background-color: #F6F6F7;\n    fill: #FFFFFF;\n     }\n\n  &.theme-dark {\n    background-color: #161616;\n    fill: #FFFFFF;\n  }\n\n  &.theme-violet {\n    background-color: #ECEDFD;\n    fill: #FFFFFF;\n  }\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: #1f1f1f;\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n\n    color: #ffffff;\n    background-color: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const PhotoInputWrapper = styled.label`\nwidth: 68px;\nheight: 78px;\nflex-shrink: 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ncursor: pointer;\n\n// svg {\n//   width: 68px;\n//   height: 68px;\n//   fill: #fff;\n// }\n`;\n\nexport const AvatarImage = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\nborder-radius: 50%;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n   position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  display: none;\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 24px;\nheight: 24px;\n  cursor: pointer;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 4px;\n  fill: #161616;\n`;\n\nexport const IconUserWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  ModalCloseButton,\n  EditProfileModal,\n  FormBox,\n  PhotoInputWrapper,\n  AvatarImage,\n  FieldUser,\n  FileInput,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { photo, name, email, password } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = () => {\n    document.getElementById('newPhotoInput').click();\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <div>Edit profile</div>\n        <ModalCloseButton onClick={onClose}><use xlinkHref={`${Sprite}#icon-x-close`} /></ModalCloseButton>\n        <Formik\n          initialValues={{\n            newPhoto: photo,\n            newName: name,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar,  UserIcon  } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\nimport Sprite from '../../images/sprite.svg';\n\nconst UserInfo = ({theme}) => {\n  const { photo, name } = useSelector(state => state.profile);\n  const [isModalOpen, setModalOpen] = React.useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{name}</div>\n      {photo ? (\n        <Avatar src={photo} alt=\"User Avatar\" onClick={openModal} />\n      ) : (\n        <UserIcon className={`icon-user theme-${theme}`}>\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isModalOpen && <EditProfile onClose={closeModal} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;","export const selectTheme = (state) => state.theme;","import styled from 'styled-components';\n\nexport const SidebarBlock = styled.aside`\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  // background-color: #121212\n\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (min-width: 1400px) {\n    display: none;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  color: #ffffff;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: #fff;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: #fff;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Field, Form } from 'formik';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n};\n\nconst NeedHelpForm = () => {\n  const handleSubmit = evt => {};\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Field\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email address\"\n              style={{\n                width: 300,\n                height: 49,\n              }}\n            />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Field\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  width: 300,\n                  height: 120,\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <button type=\"submit\">Send</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n        <NeedHelpForm />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","import {\n  SvgAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  SidebarBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState } from 'react';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isShow, setIsShow] = useState(false);\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-lightning`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <createBoardTitle>\n          <p>Create a new board</p>\n        </createBoardTitle>\n\n        <SvgAdd>\n          <use href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n      </BoardTitleBlock>\n\n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower src={flower} alt=\"flower\" />\n\n        <HelpContent>\n          If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\">\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n\n  &.theme-light {\n    background-color: #fcfcfc;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #161616;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #fff;\n    color: #161616;\n  }\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const HeaderNav = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  &.theme-light {\n    fill: #161616;\n  }\n\n  &.theme-dark {\n    fill: #ffffff;\n  }\n\n  &.theme-violet {\n    fill: #161616;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n\n  &.theme-light {\n    fill: #161616;\n  }\n\n  &.theme-dark {\n    fill: #ffffff;\n  }\n\n  &.theme-violet {\n    fill: #161616;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  SelectIcon,\n  HeaderWrap,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isOptionListOpen, setOptionListOpen] = useState(false);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false); \n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n  }, [dispatch]);\n\n  const toggleOptionList = () => {\n    setOptionListOpen(!isOptionListOpen);\n  };\n\n  const sendThemeToBackend = (newTheme) => {\n    localStorage.setItem('theme', newTheme);\n  };\n\n  const onToggleTheme = (event) => {\n    const newTheme = event.target.value;\n    dispatch(setTheme(newTheme));\n    sendThemeToBackend(newTheme);\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen); \n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen);\n  };\n\n   return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      <HeaderWrap>\n        <HeaderNav onClick={toggleOptionList} value={theme}>\n          <div>\n          <SelectIcon className={`icon-chevron-down theme-${theme}`} onClick={toggleThemeSelector}>\n              <use href={`${Sprite}#icon-chevron-down`} />\n              </SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        {isThemeSelectorOpen && ( \n        <select value={theme} onChange={onToggleTheme}>\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n        <option value=\"violet\">Violet</option>\n      </select>\n      )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n\n","export const HeaderDashboard = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        height: '80px',\n        backgroundColor: 'lightgray',\n        widows: '100%',\n      }}\n    >\n      <p>Name Board</p>\n\n      <p>Filters logic</p>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  padding: 8px;\n  margin: 8px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n\n  /* display: flex; */\n  gap: 10px;\n`;\n\nconst Handle = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: orange;\n  border-radius: 4px;\n`;\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <Handle />\n          <p>{task.title}</p>\n          <p>{task.description}</p>\n          <p>{task.priority}</p>\n          <p>{task.deadline}</p>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  background-color: white;\n  width: 220px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3`\n  padding: 8px;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    hendleVisible();\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <Title {...provided.dragHandleProps}>{column.title}</Title>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <button onClick={hendleVisible}>Add another card</button>\n\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\nconst Container = styled.div`\n  display: flex;\n\n  position: relative;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 50%;\n  top: 50%;\n`;\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n\n  const [visible, setVisible] = useState(false);\n  const [titleColumn, setTitleColumn] = useState('');\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: titleColumn,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    hendleVisible();\n  };\n\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      console.log(newState);\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <button\n        style={{ height: '50px', width: '200px' }}\n        onClick={hendleVisible}\n      >\n        Add another card\n      </button>\n\n      {visible && (\n        <ContainerModal>\n          Add Column\n          <label>\n            Column title\n            <input\n              type=\"text\"\n              value={titleColumn}\n              onChange={e => {\n                setTitleColumn(e.target.value);\n              }}\n            />\n          </label>\n          <button type=\"submit\" onClick={handleSubmit}>\n            Add Column\n          </button>\n        </ContainerModal>\n      )}\n    </div>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <div>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\n\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n  return (\n    <ThemeProvider>\n      <Header theme={theme}/>\n      <div style={{ display: 'flex' }}>\n        <Sidebar theme={theme}/>\n        <Dashboard theme={theme}/>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","ModalWindow","_templateObject2","Heading","_templateObject3","CloseBtn","_templateObject4","_ref","children","isOpen","handleClose","heading","window","addEventListener","event","key","ReactDOM","_jsx","onClick","_jsxs","e","stopPropagation","xlinkHref","concat","Sprite","document","getElementById","Container","Avatar","UserIcon","EditProfileModal","ModalCloseButton","FormBox","Form","FieldUser","Field","_templateObject5","PhotoInputWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","FileInput","_templateObject9","IconPlus","_templateObject10","IconUserWrapper","_templateObject11","onClose","_useSelector","useSelector","state","profile","photo","name","email","password","dispatch","useDispatch","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateProfileData","stop","_x","apply","arguments","handleAvatarClick","click","Formik","initialValues","newPhoto","newName","newEmail","newPassword","onSubmit","_ref3","isSubmitting","setFieldValue","_Fragment","src","alt","width","height","href","className","id","type","onChange","URL","createObjectURL","currentTarget","files","ErrorMessage","component","disabled","theme","_React$useState","React","_React$useState2","_slicedToArray","isModalOpen","setModalOpen","EditProfile","selectTheme","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","_templateObject12","Flower","_templateObject13","HelpSchema","yup","shape","required","matches","comment","min","max","validationSchema","evt","errors","touched","submitCount","autoComplete","placeholder","style","resize","closeModal","Modal","NeedHelpForm","Sidebar","_useState","useState","_useState2","isShow","setIsShow","sprite","NeedHelpModal","HeaderNav","MenuIcon","HeaderWrap","SelectIcon","isOptionListOpen","setOptionListOpen","_useState3","_useState4","isSideBarOpen","setSideBarOpen","_useState5","_useState6","isThemeSelectorOpen","setThemeSelectorOpen","useEffect","storedTheme","localStorage","getItem","setTheme","value","newTheme","target","setItem","sendThemeToBackend","UserInfo","HeaderDashboard","display","alignItems","justifyContent","backgroundColor","widows","props","isDragging","Handle","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","ref","innerRef","title","description","priority","deadline","TaskList","isDraggingOver","ContainerModal","Column","column","tasks","cardData","setCardData","visible","setVisible","dataForModal","titleTask","setTitleTask","hendleVisible","handleSubmit","taskId","uuidv4","replace","newTask","_defineProperty","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","Droppable","droppableId","droppableProps","map","MainDashboard","titleColumn","setTitleColumn","DragDropContext","onDragStart","body","color","transition","onDragUpdate","update","destination","opacity","Object","keys","length","onDragEnd","result","_objectSpread3","source","start","finish","newTaskId","Array","from","splice","newState","console","log","startTaskIds","newStart","finishTaskIds","newFinish","newColumnOrder","columnOrder","direction","initialUserModel","icon","background","boardsData","Dashboard","ThemeProvider","Header"],"sourceRoot":""}