{"version":3,"file":"static/js/832.241f4eec.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/EditProfile/EditProfileModal.jsx","components/UserInfo/UserInfo.jsx","components/Sidebar/Sidebar.styled.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","components/MainButton/MainButton.styled.js","components/MainButton/MainButton.jsx","components/MainButton/index.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","redux/boards/boardsSelectors.js","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","schemas/addTaskSchema.js","components/ModalBoard/ModalBoard.jsx","components/ModalBoard/index.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/HomePage/HomePage.styled.js","components/EmptyPage/EmptyPage.jsx","pages/HomePage/HomePage.jsx","images/backgrounds|sync|/^/.//.*/.png$","images/backgrounds|sync|/^/.//.*_dark/.png$","images/backgrounds|sync|/^/.//.*_light/.png$","images/backgrounds|sync|/^/.//.*_violet/.png$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n    `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  stroke: transparent;\n     `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const LabelPass = styled.label`\n  position: relative;\n  width: 100%;\n`;\n\nexport const LabelText = styled.label`\n  width: 100%;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 100%;\n  height: 49px;\n  color: var(--modal_main_color);\n  background-color: var(--modal_field);\n  opacity: 0.4;\n  border: 1px solid var(--input_color);\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n\n  outline: none;\n  transition: all 500ms;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 352px;\n  }\n`;\n\nexport const IconUserWrapper = styled.label`\n  width: 68px;\n  height: 78px;\n  position: relative;\n  margin: 0px auto 14px auto;\n  border-radius: 8px;\n  background-position: center;\n  cursor: pointer;\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid var(--create_normal);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 0.8;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  display: none;\n  width: 100%;\n`;\n\nexport const NoneInput = styled.input`\n  display: none;\n`;\n\nexport const PlusBtn = styled.button`\n  position: absolute;\n  bottom: -15%;\n  left: 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: var(--user_bgc);\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: var(--create_active);\n  }\n`;\n\nexport const TextBtn = styled(Form)`\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: var(--save-color);\n`;\n\nexport const IconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n  z-index: 99;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n  fill: transparent;\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  FormBox,\n  AvatarImage,\n  FieldUser,\n  NoneInput,\n  PlusBtn,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n  PasswordView,\n  PasswordIcon,\n  Svg,\n  LabelPass,\n  LabelText,\n  TextBtn,\n} from './EditProfile.styled';\nimport { updateUser, updateUserAvatar } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport Sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\nimport { showToast } from 'components/Notification/ToastNotification';\n\nconst EditProfile = ({ onClose }) => {\n  const { username, theme, email, password, avatarURL } =\n    useSelector(selectUser);\n  const [showPassword, setShowPassword] = useState(false);\n  const [avatarNewURL, setAvatarNewURL] = useState(avatarURL);\n\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = async formValues => {\n    console.log(formValues);\n    dispatch(\n      updateUser({\n        username: formValues.newName,\n        email: formValues.newEmail,\n        password: formValues.newPassword,\n        theme,\n      })\n    );\n    if (avatarNewURL !== formValues.newPhoto) {\n      dispatch(updateUserAvatar(avatarNewURL));\n    }\n    onClose();\n    showToast('success', 'User updated successfully.');\n  };\n\n  const handleAvatarClick = e => {\n    e.preventDefault();\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const formData = new FormData();\n      formData.append('avatar', selectedFile);\n      setAvatarNewURL(formData);\n    } else {\n      showToast('error', 'Invalid file format. Please select an image.');\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          newPhoto: avatarNewURL,\n          newName: username,\n          newEmail: email,\n          newPassword: password,\n        }}\n        onSubmit={handleFormSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <FormBox>\n            <IconUserWrapper>\n              {values.newPhoto ? (\n                <AvatarImage\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  alt=\"Avatar\"\n                  src={values.newPhoto}\n                />\n              ) : (\n                <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                  <use href={`${Sprite}#icon-user`} />\n                </svg>\n              )}\n              <PlusBtn\n                type=\"button\"\n                onClick={() => document.getElementById('newPhotoInput').click()}\n              >\n                <IconPlus>\n                  <use href={`${Sprite}#icon-plus-us`} />\n                </IconPlus>\n                <NoneInput\n                  type=\"file\"\n                  id=\"newPhotoInput\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                    handleAvatarClick(event);\n                  }}\n                />\n              </PlusBtn>\n            </IconUserWrapper>\n\n            <LabelText>\n              <FieldUser type=\"text\" name=\"newName\" />\n              <ErrorMessage name=\"newName\" component=\"div\" />\n            </LabelText>\n\n            <LabelText>\n              <FieldUser type=\"email\" name=\"newEmail\" />\n              <ErrorMessage name=\"newEmail\" component=\"div\" />\n            </LabelText>\n\n            <LabelPass>\n              <FieldUser\n                type={showPassword ? 'text' : 'password'}\n                id='password'\n                name=\"password\" \n               placeholder='Enter Password'\n              />\n              <PasswordView onClick={togglePasswordVisibility}>\n                {showPassword ? (\n                  <PasswordIcon src={eyeHide} alt=\"Hide Password\" />\n                ) : (\n                  <Svg>\n                    <use stroke=\"gray\" href={`${Sprite}#eye-password`} />\n                  </Svg>\n                )}\n              </PasswordView>\n              <ErrorMessage name=\"newPassword\" component=\"div\" />\n            </LabelPass>\n\n            <SaveBtn type=\"submit\" disabled={isSubmitting}>\n              <TextBtn>Save</TextBtn>\n            </SaveBtn>\n          </FormBox>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","import Modal from 'components/Modal/Modal';\nimport EditProfile from './EditProfile';\n\nconst EditProfileModal = ({ onClose }) => {\n  const handleCloseModal = () => {\n    onClose();\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={true}\n        handleClose={handleCloseModal}\n        heading={'Edit profile'}\n      >\n        <EditProfile onClose={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditProfileModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfileModal from 'components/EditProfile/EditProfileModal';\nimport Sprite from '../../images/sprite.svg';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserInfo = ({ theme }) => {\n  const { username, avatarURL } = useSelector(selectUser);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n\n  const openEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const closeEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar\n          src={avatarURL}\n          alt=\"User Avatar\"\n          onClick={openEditProfileModal}\n        />\n      ) : (\n        <UserIcon\n          className={`icon-user theme-${theme}`}\n          onClick={openEditProfileModal}\n        >\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isEditProfileModalOpen && <EditProfileModal onClose={closeEditProfileModal} />}\n         </Container>\n  );\n};\n\nexport default UserInfo;\n\n\n\n\n\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar,  UserIcon  } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const setAvatarIcon = (activeUserTheme) => {\n//   switch (activeUserTheme) {\n//        case 'light':\n//       return '#icon-userlight';\n//       case 'dark':\n//       return '#icon-userdark';\n//     case 'violet':\n//       return '#icon-userviolet';\n//     default:\n//       return '#icon-userlight';\n//   }\n// };\n\n// const UserInfo = ({theme}) => {\n//   const { avatarURL, username } = useSelector(state => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   const avatarIcon = setAvatarIcon(theme);\n\n//   return (\n//     <Container>\n//       <div>{username}</div>\n//       {avatarURL ? (\n//         <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon onClick={openModal}>\n//         <svg className={`icon-user`} width=\"32\" height=\"32\">\n//           <use href={Sprite + avatarIcon} />\n//         </svg>\n//       </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n","import styled from '@emotion/styled/macro';\nimport { NavLink } from 'react-router-dom';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 225px;\n  min-height: 100vh;\n  padding: 24px;\n\n  background-color: var(--nav_bgc);\n  color: var(--nav_main_color);\n\n  @media (min-width: 768px) {\n    width: 260px;\n  }\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n`;\nexport const Title = styled.h3`\n  color: var(--nav_main_color);\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\nexport const MyBoardTitle = styled.p`\n  margin-bottom: 8px;\n\n  color: var(--nav_second_color);\n  font-family: Poppins;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\nexport const BoardTitleBlock = styled.div`\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  margin-bottom: 40px;\n  padding: 14px 0;\n  border-top: 1px solid var(--line_color);\n  border-bottom: 1px solid var(--line_color);\n\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\nexport const ButtonAdd = styled.button`\n  width: 40px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  padding: 10px 8px;\n  border-radius: 6px;\n  border: none;\n\n  background-color: var(--create_normal);\n  &:hover {\n    background-color: var(--create_active);\n  }\n  > svg {\n    stroke: var(--create_plus_color);\n  }\n`;\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  margin: 0 -24px;\n  align-items: center;\n  letter-spacing: -0.28px;\n  margin-bottom: 4px;\n`;\nexport const TitleBoard = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const BoardIcons = styled.div`\n  display: none;\n  margin-left: auto;\n  margin-right: 20px;\n`;\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n\n  stroke: var(--nav_second_color);\n  opacity: 0.5;\n  fill: transparent;\n`;\n\nexport const ButtonIcon = styled.button`\n  outline: none;\n  border: none;\n  background-color: transparent;\n  margin-right: 8px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const NeedHelpBlock = styled.div`\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n  background-color: var(--need_bgc);\n  color: var(--nav_main_color);\n`;\n\nexport const HelpContent = styled.p`\n  line-height: 20px;\n  letter-spacing: -0.28px;\n  color: var(--nav_main_color);\n  > span {\n    color: var(--span_color);\n  }\n`;\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n\n  color: var(--nav_main_color);\n`;\nexport const SvgHelp = styled.svg`\n  stroke: var(--nav_main_color);\n  fill: rgba(0, 0, 0, 0);\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  border: none;\nmargin-top: auto;\n  color: var(--nav_main_color)\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: transparent;\n  padding: 0;\n  > svg {\n    stroke: var(--logout_fill);\n    &:hover {\n      stroke: var(--logout_fill_active);\n    }\n  }\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n\nexport const BoardTitle = styled.p`\n  color: var(--board_second_color);\n`;\nexport const ProjectIcon = styled.svg`\n  stroke: var(--board_second_color);\n  fill: transparent;\n  margin-right: 8px;\n  margin-left: 24px;\n`;\nexport const Nav = styled(NavLink)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 60px;\n  &.active {\n    color: var(--board_main_color);\n    background-color: var(--board_active_bgc);\n    &:after {\n      display: flex;\n      content: '';\n      border-radius: 4px 0px 0px 4px;\n      background: var(--border_bgc);\n      width: 4px;\n    }\n    ${BoardIcons} {\n      display: flex;\n    }\n    ${BoardTitle} {\n      color: var(--board_active_color);\n    }\n    ${ProjectIcon} {\n      stroke: var(--board_active_icon);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst dynamicPadding = ({ showPlus }) =>\n  showPlus\n    ? css`\n        padding: 10px;\n      `\n    : css`\n        padding: 14px;\n      `;\n\nexport const StyledButton = styled.button`\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${dynamicPadding};\n\n  border-radius: 8px;\n  border: none;\n\n  cursor: pointer;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background-color: var(--plus_bgc);\n  margin-right: 8px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--plus_color);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton, SvgAdd, SvgWrapper } from './MainButton.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst MainButton = ({ type, onClick, children, showPlus = false }) => (\n  <StyledButton type={type} onClick={onClick} showPlus={showPlus}>\n    {showPlus && (\n      <SvgWrapper>\n        <SvgAdd>\n          <use href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n      </SvgWrapper>\n    )}\n    {children}\n  </StyledButton>\n);\n\nMainButton.propTypesropTypes = {\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  btnContent: PropTypes.node,\n  showPlus: PropTypes.bool,\n};\n\nexport default MainButton;\n","import MainButton from './MainButton';\n\nexport default MainButton;\n","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { needHelp } from '../../redux/auth/operations';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\nimport MainButton from 'components/MainButton';\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelpForm = ({ handleCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { email, comment } = values;\n    console.log({ email, comment });\n    try {\n      const result = await dispatch(needHelp({ email, comment }));\n      if (needHelp.fulfilled.match(result)) {\n        console.log('Request successful');\n        resetForm(initialValues);\n        handleCloseModal();\n      } else {\n      }\n    } catch (err) {\n      console.log('Error:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n\nNeedHelpForm.propTypes = {\n  handleCloseModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n      <NeedHelpForm handleCloseModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","export const selectBoards = state => state.boards.boards;\n\nexport const selectRefreshError = ({ boards: { isRefreshing, error } }) => ({\n  isRefreshing,\n  error,\n});\n","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  width: 100%;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  transition: all 500ms;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: rgba(0, 0, 0, 0);\n  stroke: var(--modal_second_color);\n  transition: all 500ms;\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  transition: all 500ms;\n  &:checked + img {\n    border: 1px solid var(--modal_data_color);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: var(--modal_main_color);\n  }\n  &:hover + img {\n    border: 1px solid var(--active_btn);\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 40px;\n  margin-right: 20px;\n\n  @media screen and (min-width: 335px) {\n    margin-right: 35px;\n  }\n  @media screen and (min-width: 375px) {\n    margin-right: 50px;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const addTaskSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n  description: Yup.string().required('Description is required'),\n  priority: Yup.string().required('Priority is required'),\n});\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { useDispatch } from 'react-redux';\nimport { createBoard, editBoard } from 'redux/boards/boardOperations';\nimport MainButton from 'components/MainButton';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { selectRefreshError } from 'redux/boards/boardsSelectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1',\n  'bg2',\n  'bg3',\n  'bg4',\n  'bg5',\n  'bg6',\n  'bg7',\n  'bg8',\n  'bg9',\n  'bg10',\n  'bg11',\n  'bg12',\n  'bg13',\n  'bg14',\n  'bg15',\n  'bg16',\n];\n\nfunction ModalBoard({ btnContent, closeModal, boardData }) {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme).toLowerCase();\n  const { isRefreshing, error } = useSelector(selectRefreshError);\n\n  const initialValues =\n    btnContent === 'Create'\n      ? {\n          title: '',\n          icon: icons[0],\n          background: backgrounds[0],\n        }\n      : {\n          title: boardData?.title,\n          icon: boardData?.icon,\n          background: boardData?.background,\n        };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      id: boardId,\n      title: values.title.trim(),\n      icon: values.icon,\n      background: values.background,\n      boardsData: { tasks: {}, columns: {}, columnOrder: [] },\n    };\n    if (btnContent === 'Create') {\n      dispatch(createBoard(newBoard));\n    } else if (\n      values.title !== boardData.title ||\n      values.icon !== boardData.icon ||\n      values.background !== boardData.background\n    ) {\n      dispatch(editBoard({ newBoard, id: boardData._id }));\n    }\n\n    resetForm();\n    closeModal();\n  };\n  if (error) {\n    return (\n      <p style={{ fontSize: '40px', color: 'red', textAlign: 'center' }}>\n        Ops, something went wrong\n        <br />\n        {error}\n      </p>\n    );\n  }\n\n  return (\n    <>\n      {isRefreshing && <Loader />}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={addBoardSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, values }) => (\n          <Form autoComplete=\"off\">\n            <StyledInputField\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              onChange={handleChange}\n              value={values.title}\n            />\n            <ErrorMsg name=\"title\" component=\"p\" />\n            <StyledSubtitle>Icons</StyledSubtitle>\n            <IconsWrapper>\n              {icons.map(icon => (\n                <label key={nanoid()}>\n                  <StyledRadioField\n                    type=\"radio\"\n                    name=\"icon\"\n                    value={icon}\n                    onChange={handleChange}\n                    checked={values.icon === icon}\n                  />\n                  <StyledSVG>\n                    <use href={`${sprite}#${icon}`}></use>\n                  </StyledSVG>\n                </label>\n              ))}\n            </IconsWrapper>\n            <StyledSubtitle>Background</StyledSubtitle>\n            <BgImagesWrapper>\n              {backgrounds.map((background, i) => (\n                <label key={nanoid()}>\n                  <StyledRadioField\n                    type=\"radio\"\n                    name=\"background\"\n                    value={background}\n                    onChange={handleChange}\n                    checked={values.background === background}\n                  />\n\n                  {i === 0 && theme === 'dark' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_dark.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n\n                  {i === 0 && theme === 'violet' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_violet.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n\n                  {i === 0 && theme === 'light' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_light.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n                  {i >= 1 && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n                </label>\n              ))}\n            </BgImagesWrapper>\n            <MainButton type=\"submit\" showPlus={true}>\n              {btnContent}\n            </MainButton>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  boardData: PropTypes.object,\n};\n\nexport default ModalBoard;\n","import ModalBoard from './ModalBoard';\n\nexport default ModalBoard;\n","import {\n  SidebarBlock,\n  ButtonAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TitleBoard,\n  ProjectIcon,\n  BoardTitle,\n  Nav,\n  ButtonIcon,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\nimport Modal from 'components/Modal/Modal';\nimport ModalBoard from 'components/ModalBoard';\n\nconst actionsList = { add: 'add', edit: 'edit' };\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(actionsList.add);\n  const [boardData, setBoardData] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBoards());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleModalType = e => {\n    const buttonAction = e.currentTarget.ariaLabel;\n    const editButtonId = e.currentTarget.getAttribute('data-board-id') || '';\n    if (buttonAction === actionsList.add) {\n      setModalType(actionsList.add);\n      toggleModal();\n    } else {\n      setModalType(actionsList.edit);\n      setBoardData(boards.filter(board => board._id === editButtonId)[0]);\n      toggleModal();\n    }\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <Nav to=\"/\">\n        <TitleBlock>\n          <SvgLightning>\n            <use href={`${sprite}#icon-logo`} />\n          </SvgLightning>\n          <Title>Task Pro</Title>\n        </TitleBlock>\n      </Nav>\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n        <ButtonAdd aria-label=\"add\" type=\"button\" onClick={handleModalType}>\n          <svg width={20} height={20}>\n            <use href={`${sprite}#icon-plus`} />\n          </svg>\n        </ButtonAdd>\n      </BoardTitleBlock>\n      <ul>\n        {boards.map(board => (\n          <BoardList key={board._id}>\n            <Nav to={`/home/${board.title}`}>\n              <TitleBoard>\n                <ProjectIcon width={18} height={18}>\n                  <use href={`${sprite}#${board.icon}`} />\n                </ProjectIcon>\n                <BoardTitle>{board.title}</BoardTitle>\n              </TitleBoard>\n\n              <BoardIcons>\n                <ButtonIcon\n                  type=\"button\"\n                  aria-label=\"edit\"\n                  data-board-id={board._id}\n                  onClick={handleModalType}\n                >\n                  <EditIcon>\n                    <use href={`${sprite}#icon-pencil`} />\n                  </EditIcon>\n                </ButtonIcon>\n                <ButtonIcon\n                  type=\"button\"\n                  aria-label=\"edit\"\n                  data-board-id={board._id}\n                  onClick={handleModalType}\n                >\n                  <EditIcon onClick={() => dispatch(deleteBoard(board._id))}>\n                    <use href={`${sprite}#icon-trash`} />\n                  </EditIcon>\n                </ButtonIcon>\n              </BoardIcons>\n            </Nav>\n          </BoardList>\n        ))}\n      </ul>\n      {isModalOpen && (\n        <Modal\n          isOpen={toggleModal}\n          handleClose={toggleModal}\n          heading={modalType === actionsList.add ? 'New board' : 'Edit board'}\n          modalType={'modalBoard'}\n        >\n          <ModalBoard\n            btnContent={modalType === actionsList.add ? 'Create' : 'Edit'}\n            closeModal={toggleModal}\n            boardData={boardData}\n          />\n        </Modal>\n      )}\n      <NeedHelpBlock>\n        <Flower src={flower} alt=\"flower\" />\n        <HelpContent>\n          If you need help with <span>TaskPro</span>, check out our support\n          resources or reach out to our customer support team.\n        </HelpContent>\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={() => dispatch(logOut())}>\n        <svg width={32} height={32}>\n          <use xlinkHref={`${sprite}#icon-login`}></use>\n        </svg>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  // position: fixed;\n  // top: 0;\n  // left: 0;\n  // width: 100%;\n  // height: 100%;\n  // z-index: 1;\n  // background-color: rgba(21, 21, 21, 0.3);\n`;\n\nexport const ThemeList = styled.ul`\nposition: absolute;\ntop: 100%;\n    left: -10%;\n    transform: translate(-100%, 10%);\n    width: 100px;\n    height: 107px;\n    display: flex;\n  flex-direction: column;\n    padding: 18px 44px 18px 18px;\n    gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid var(--theme_border);\n  cursor: pointer;\n  z-index: 99;\n    z-index: 3;\n   }\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: var(--theme_color);\n  cursor: pointer;\n  &:hover {\n    color: var(--theme_active);\n  }\n`;\n\n// export const StyledSelect = styled(Select)`\n//   /* Стилі для вибраних тем */\n//   .css-1nmdiq5-menu {\n//     position: absolute;\n//     top: 100%;\n//     left: -10%;\n//     transform: translate(-100%, 10%);\n//     width: 100px;\n//     height: 107px;\n//     padding-left: 18px;\n//     border-radius: 8px;\n//   border: 1px solid #BEDBB0;\n//   background: #FCFCFC;\n//   box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n//     z-index: 1;\n//   }\n\n//   .css-1f769on{\n\n//   }\n\n//   /* Стилі для опцій */\n\n//   .css-d7l1ni-option\n//   css-10wo9uf-option{\n//     font-family: Poppins;\n//   font-size: 14px;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   color: var(--theme_color);\n//   background-color: var(--theme_bgc);\n//     cursor: pointer;\n//     &:hover {\n//       // background-color: var(--theme_active);\n//       color: var(--theme_text);\n//     }\n//   }\n// `;\n\n// export const SelectStyles = {\n//   control: provided => ({\n//     ...provided,\n//     display: 'none',\n//     // Додайте стилі для контролу (значення) Select\n//   }),\n//   option: provided => ({\n//     ...provided,\n//      // Приховати опції\n//   }),\n// };\n\n// export const Select = styled.select`\n//   // position: absolute;\n//   bottom: -70px;\n//   left: 50%;\n//   transform: translateX(-50%);\n//   padding: 18px 44px 18px 18px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   gap: 4px;\n//   background: var(--theme_bgc);\n//   box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n//   border-radius: 8px;\n//   border: 1px solid var(--border_theme);\n//   cursor: pointer;\n//   z-index: 99;\n//   appearance: none; /* Remove default arrow */\n// `;\n\n// export const Option = styled.option`\n//   font-family: Poppins;\n//   font-size: 14px;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   color: var(--theme_color);\n//   background-color: var(--theme_bgc); /* Set background color */\n\n//   &:hover,\n//   &:focus,\n//   &:active {\n//     background-color: var(--theme_active);\n//     color: var(--theme_text); /* Change text color on interaction */\n//   }\n// `;\n\n// .css-1wa3eu0-singleValue {\n//   // color: var(--close_active);\n//      overflow: hidden;\n// }\n\n/* Відобразити опції */\n//  .css-1s2ci2r-menu {\n\n// }\n\n// export const SelectContainer = styled.div`\n//   position: absolute;\n//   top: 100%;\n//   left: -10%;\n//   transform: translate(-100%, 10%);\n//   width: 100px;\n//   height: 107px;\n//   // padding-left: 18px;\n//   border-radius: 8px;\n// border: 1px solid #BEDBB0;\n// background: #FCFCFC;\n// box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n// `;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from 'redux/auth/operations';\nimport { ThemeContainer, ThemeList, ThemeItem } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const { theme } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const themeOptions = [\n    { value: 'LIGHT', label: 'Light' },\n    { value: 'DARK', label: 'Dark' },\n    { value: 'VIOLET', label: 'Violet' },\n  ];\n\n  useEffect(() => {\n    document.body.classList.remove('LIGHT', 'DARK', 'VIOLET');\n    document.body.classList.add(currentTheme);\n  }, [currentTheme]);\n\n  \n    const onHandleTheme = async newTheme => {\n    setCurrentTheme(newTheme);\n\n    try {\n      await dispatch(updateUser({ theme: newTheme.toUpperCase() }));\n\n      onClose();\n    } catch (error) {\n      console.error('Failed to update theme:', error);\n    }\n  };\n\n  return (\n    <ThemeContainer>\n      <ThemeList>\n        {themeOptions.map(option => (\n          <ThemeItem\n            key={option.value}\n            onClick={() => onHandleTheme(option.value)}\n            className={currentTheme === option.value ? 'active' : ''}\n          >\n            {option.label}\n          </ThemeItem>\n        ))}\n      </ThemeList>\n    </ThemeContainer>\n  );\n};\n\nexport default ThemeSelector;\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectUser } from 'redux/auth/selectors';\n// import { updateUser } from 'redux/auth/operations';\n// import { ThemeContainer, ThemeList, ThemeItem } from './ThemeSelector.styled';\n\n// const ThemeSelector = ({ onClose }) => {\n//   const { theme } = useSelector(selectUser);\n//   const dispatch = useDispatch();\n//   const [currentTheme, setCurrentTheme] = useState(theme);\n\n//   useEffect(() => {\n//     document.body.classList.remove('light', 'dark', 'violet');\n//     document.body.classList.add(currentTheme);\n//   }, [currentTheme]);\n\n//   const themeOptions = [\n//     { value: 'light', label: 'Light' },\n//     { value: 'dark', label: 'Dark' },\n//     { value: 'violet', label: 'Violet' },\n//   ];\n\n//   useEffect(() => {\n//     document.body.classList.remove('light', 'dark', 'violet');\n//     document.body.classList.add(currentTheme);\n//   }, [currentTheme]);\n\n//   const onHandleTheme = async newTheme => {\n//     console.log(newTheme);\n//     setCurrentTheme(newTheme);\n\n//     try {\n//       await dispatch(updateUser({ theme: newTheme.toUpperCase() }));\n//       onClose();\n//     } catch (error) {\n//       console.error('Failed to update theme:', error);\n//     }\n//   };\n\n//   return (\n//     <ThemeContainer>\n//       <ThemeList>\n//         {themeOptions.map(option => (\n//           <ThemeItem\n//             key={option.value}\n//             onClick={() => onHandleTheme(option.value)}\n//             className={currentTheme === option.value ? 'active' : ''}\n//           >\n//             {option.label}\n//           </ThemeItem>\n//         ))}\n//       </ThemeList>\n//     </ThemeContainer>\n//   );\n// };\n\n// export default ThemeSelector;\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectUser } from 'redux/auth/selectors';\n// import { updateUser } from 'redux/auth/operations';\n// import {  Container, StyledSelect, SelectStyles } from './ThemeSelector.styled';\n\n// const ThemeSelector = ({ isOpen, onClose }) => {\n//   const { theme } = useSelector(selectUser);\n//   const dispatch = useDispatch();\n//   const [currentTheme, setCurrentTheme] = useState(theme);\n\n//   useEffect(() => {\n//     document.body.classList.remove('light', 'dark', 'violet');\n//     document.body.classList.add(currentTheme);\n//   }, [currentTheme]);\n\n//   const themeOptions = [\n//     { value: 'light', label: 'Light' },\n//     { value: 'dark', label: 'Dark' },\n//     { value: 'violet', label: 'Violet' },\n//   ];\n\n//   const onHandleTheme = async selectedOption => {\n//     console.log(selectedOption);\n//     const newTheme = selectedOption.value;\n\n//     setCurrentTheme(newTheme);\n\n//     try {\n//       await dispatch(updateUser({ theme: newTheme }));\n//       onClose();\n//     } catch (error) {\n//       console.error('Failed to update theme:', error);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <StyledSelect\n//         value={themeOptions.find(option => option.value === currentTheme)}\n//         onChange={onHandleTheme}\n//         options={themeOptions}\n//         isSearchable={false}\n//         styles={SelectStyles}\n//         menuIsOpen={isOpen}\n//       />\n//     </Container>\n//   );\n// };\n\n// export default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const PageHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  // color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.div`\nwidth: 32px;\nheight: 32px;\nborder: none;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--header_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin-left: auto;\n`;\n\nexport const HeaderNav = styled.div`\n// position: relative;\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nmargin-right: 14px;\nwidth: 80px;\ncursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  stroke: var(--chevron-down);\n  fill: none;\n  z-index: 999;\n`;\n\nexport const Text = styled.div`\ncolor: var(--header_theme_text);\nfont-family: Poppins;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nletter-spacing: -0.28px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Backdrop } from 'components/Modal/Modal.styles';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  PageHeader,\n  HeaderNav,\n  MenuBtn,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n  Text,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n// import { updateUser } from 'redux/auth/operations';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { theme } = useSelector(selectUser);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n      let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen);\n  };\n\n  return (\n    <PageHeader>\n      <MenuBtn type='button' onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </MenuBtn>\n      {isSideBarOpen && <Backdrop><Sidebar /></Backdrop>}\n      <HeaderWrap>\n        <HeaderNav>\n        <Text>Theme</Text>\n          <div>\n            <SelectIcon width=\"16\" height=\"16\" onClick={toggleThemeSelector}>\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          \n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector\n            onClose={() => setThemeSelectorOpen(false)}\n          />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </PageHeader>\n  );\n};\n\nexport default Header;\n\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","export function EmptyPage (){\n    return (\n        <div>\n            <p>\n            Before starting your project, it is essential to create a board to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n            </p>\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Container } from './HomePage.styled';\nimport { Outlet } from 'react-router-dom';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { EmptyPage } from 'components/EmptyPage/EmptyPage';\nconst HomePage = () => {\n  const { theme } = useSelector(selectUser);\n  const location = useLocation();\n  const checkUrl = location.pathname.length > '/home/'.length;\n\n  useEffect(\n    () => {\n      document.body.classList.add(theme);\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <>\n      <Container>\n        <Sidebar />\n        <div style={{ width: '100%' }}>\n          <Header />\n          <Dashboard />\n          {!checkUrl && <EmptyPage theme={theme} />}\n        </div>\n      </Container>\n      <Container>\n        <Outlet />\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from 'components/Header/Header';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { Dashboard } from 'components/Dashboard/Dashboard';\n// import { Container } from './HomePage.styled';\n\n// const HomePage = () => {\n//   const theme = useSelector(state => state.auth.theme); // Отримати тему з Redux-сторі\n\n//   // Функція для встановлення класу теми на <html> елементі\n//   const setThemeClass = theme => {\n//     document.documentElement.className = '';\n//     document.documentElement.classList.add(`theme-${theme}`);\n//   };\n\n//   React.useEffect(() => {\n//     setThemeClass(theme); // Встановити клас теми під час завантаження сторінки\n//   }, [theme]);\n\n//   return (\n//     <Container>\n//       <Sidebar theme={theme} />\n//       <div style={{ width: '100%' }}>\n//         <Header theme={theme} />\n//         <Dashboard theme={theme} />\n//       </div>\n//     </Container>\n//   );\n// };\n\n// export default HomePage;\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { ThemeProvider } from 'hooks/themeContext';\n// import Header from 'components/Header/Header';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { Dashboard } from 'components/Dashboard/Dashboard';\n// import { selectUser } from 'redux/auth/selectors'; // Підключити селектор для теми\n// import { Container } from './HomePage.styled';\n\n// const HomePage = () => {\n//   const theme = useSelector(selectUser); // Отримати тему з Redux-сторі\n\n//   // Якщо користувач не має встановленої теми, використовувати світлу тему за замовчуванням\n//   const userTheme = theme || 'light';\n\n//   return (\n//     <ThemeProvider>\n//       <Container>\n//         <Sidebar theme={userTheme} />\n//         <div style={{ width: '100%' }}>\n//           <Header theme={userTheme} />\n//           {/* Використовувати тему користувача для відображення */}\n//           <Dashboard theme={userTheme} />\n//         </div>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default HomePage;\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from 'components/Header/Header';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { Dashboard } from 'components/Dashboard/Dashboard';\n// // import { selectUser } from 'redux/auth/selectors';\n// import { Container } from './HomePage.styled';\n\n// const HomePage = () => {\n//   const theme = useSelector(state => state.auth.theme); // Отримати тему зі стору\n\n//   return (\n//     <Container className={`theme-${theme}`}>\n//       <Sidebar theme={theme} />\n//       <div style={{ width: '100%' }}>\n//         <Header theme={theme} />\n//         <Dashboard theme={theme} />\n//       </div>\n//     </Container>\n//   );\n// };\n\n// export default HomePage;\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { ThemeProvider } from 'hooks/themeContext';\n// import Header from 'components/Header/Header';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { Dashboard } from 'components/Dashboard/Dashboard';\n// import { selectUser } from 'redux/auth/selectors';\n// import { Container } from './HomePage.styled';\n// const HomePage = () => {\n//   const theme = useSelector(selectUser);\n\n//   return (\n//     <ThemeProvider>\n//       <Container>\n//         <Sidebar theme={theme} />\n//         <div style={{ width: '100%' }}>\n//           <Header theme={theme} />\n//           <Dashboard theme={theme} />\n//         </div>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default HomePage;\n","var map = {\n\t\"./bg10.png\": 2952,\n\t\"./bg11.png\": 8978,\n\t\"./bg12.png\": 409,\n\t\"./bg13.png\": 6502,\n\t\"./bg14.png\": 3126,\n\t\"./bg15.png\": 1218,\n\t\"./bg16.png\": 6137,\n\t\"./bg1_dark.png\": 1973,\n\t\"./bg1_light.png\": 8005,\n\t\"./bg1_violet.png\": 4458,\n\t\"./bg2.png\": 8146,\n\t\"./bg3.png\": 8894,\n\t\"./bg4.png\": 6022,\n\t\"./bg5.png\": 3028,\n\t\"./bg6.png\": 4033,\n\t\"./bg7.png\": 2829,\n\t\"./bg8.png\": 7740,\n\t\"./bg9.png\": 2945\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6849;","var map = {\n\t\"./bg1_dark.png\": 1973\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1021;","var map = {\n\t\"./bg1_light.png\": 8005\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2322;","var map = {\n\t\"./bg1_violet.png\": 4458\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2254;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","FormBox","Form","LabelPass","LabelText","FieldUser","Field","_templateObject4","IconUserWrapper","_templateObject5","AvatarImage","_templateObject6","SaveBtn","_templateObject7","NoneInput","_templateObject8","_templateObject9","PlusBtn","_templateObject10","TextBtn","_templateObject11","IconPlus","_templateObject12","PasswordView","_templateObject13","PasswordIcon","_templateObject14","Svg","_templateObject15","_ref","onClose","_useSelector","useSelector","selectUser","username","theme","email","password","avatarURL","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","avatarNewURL","setAvatarNewURL","dispatch","useDispatch","togglePasswordVisibility","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formValues","wrap","_context","prev","next","console","log","updateUser","newName","newEmail","newPassword","newPhoto","updateUserAvatar","showToast","stop","_x","apply","arguments","_jsx","children","Formik","initialValues","onSubmit","_ref3","isSubmitting","values","setFieldValue","_jsxs","type","name","alt","src","className","width","height","href","concat","Sprite","onClick","document","getElementById","click","id","onChange","event","URL","createObjectURL","currentTarget","files","e","preventDefault","selectedFile","target","startsWith","formData","FormData","append","handleAvatarClick","ErrorMessage","component","placeholder","eyeHide","stroke","disabled","handleCloseModal","Modal","isOpen","handleClose","heading","EditProfile","isEditProfileModalOpen","setIsEditProfileModalOpen","openEditProfileModal","EditProfileModal","SidebarBlock","_styled","styles","TitleBlock","SvgLightning","Title","MyBoardTitle","BoardTitleBlock","ButtonAdd","BoardList","TitleBoard","BoardIcons","EditIcon","ButtonIcon","NeedHelpBlock","HelpContent","NeedHelpButton","SvgHelp","LogoutBtn","Flower","BoardTitle","ProjectIcon","Nav","NavLink","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","css","_len","length","args","Array","_key","serializeStyles","StyledButton","showPlus","SvgWrapper","SvgAdd","MainButton","_ref$showPlus","sprite","propTypesropTypes","PropTypes","btnContent","handleSubmit","resetForm","result","needHelp","sent","t0","message","_x2","validationSchema","_ref4","errors","touched","submitCount","autoComplete","style","resize","closeModal","NeedHelpForm","selectBoards","state","boards","selectRefreshError","_ref$boards","isRefreshing","error","addBoardSchema","Yup","title","StyledInputField","description","priority","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","boardData","selectTheme","toLowerCase","icon","background","fontSize","color","textAlign","_Fragment","Loader","newBoard","uuidv4","replace","trim","boardsData","tasks","columns","columnOrder","createBoard","editBoard","_id","handleChange","value","map","checked","nanoid","i","require","actionsList","Sidebar","isModalOpen","setIsModalOpen","modalType","setModalType","_useState5","_useState6","setBoardData","_useState7","_useState8","isShow","setIsShow","useEffect","getBoards","toggleModal","handleModalType","buttonAction","ariaLabel","editButtonId","getAttribute","filter","board","to","deleteBoard","ModalBoard","NeedHelpModal","logOut","xlinkHref","ThemeContainer","ThemeList","ThemeItem","currentTheme","setCurrentTheme","body","classList","remove","add","onHandleTheme","newTheme","toUpperCase","label","option","PageHeader","MenuBtn","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","Text","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","setTimeout","addEventListener","handleOutsideClick","removeEventListener","clearTimeout","closest","Backdrop","ThemeSelector","UserInfo","EmptyPage","checkUrl","useLocation","pathname","Header","Dashboard","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}