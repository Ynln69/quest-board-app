{"version":3,"file":"static/js/720.a8c23daf.chunk.js","mappings":"kOAEaA,EAAWC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0MAYrBC,EAAcH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kcAsBxBG,EAAUL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kMAWnBK,EAAWP,EAAAA,EAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+Q,SCflC,MA1BA,SAAcO,GAA8C,IAA3CC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAQC,EAAWH,EAAXG,YAAaC,EAAOJ,EAAPI,QAC9C,OAAKF,GAQDA,GACFG,OAAOC,iBAAiB,WAPJ,SAAAC,GACF,WAAdA,EAAMC,KACRL,GAEJ,IAMOM,EAAAA,cACLC,EAAAA,EAAAA,KAACpB,EAAQ,CAACqB,QAASR,EAAYF,UAC7BW,EAAAA,EAAAA,MAAClB,EAAW,CAACiB,QAAS,SAAAE,GAAC,OAAIA,EAAEC,iBAAiB,EAACb,SAAA,EAC7CS,EAAAA,EAAAA,KAACd,EAAO,CAAAK,SAAEG,KACVM,EAAAA,EAAAA,KAACZ,EAAQ,CAACa,QAASR,EAAYF,UAC7BS,EAAAA,EAAAA,KAAA,OAAKK,UAAS,GAAAC,OAAKC,EAAAA,EAAM,sBAE3BP,EAAAA,EAAAA,KAAA,OAAAT,SAAMA,SAGViB,SAASC,eAAe,gBAtBN,IAwBtB,C,yHCQA,MAxBA,WACE,OACET,EAAAA,EAAAA,KAACU,EAAAA,GAAS,CAAAnB,UACRW,EAAAA,EAAAA,MAACS,EAAAA,GAAO,CAAApB,SAAA,EACNS,EAAAA,EAAAA,KAACY,EAAAA,GAAI,KACLV,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAAAtB,SAAA,EACVS,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAvB,UACHS,EAAAA,EAAAA,KAAA,OAAKe,KAAI,GAAAT,OAAKU,EAAAA,EAAK,mBAErBhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAAA1B,SAAC,iBAETS,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAAA3B,SAAC,8HAINW,EAAAA,EAAAA,MAACiB,EAAAA,GAAW,CAAA5B,SAAA,EACVS,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CAACC,GAAG,gBAAe9B,SAAC,kBAC9BS,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CAACD,GAAG,aAAY9B,SAAC,kBAKrC,E,UChBA,EAjBoB,WAClB,IAAAgC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApC/B,EAAMiC,EAAA,GAAEE,EAASF,EAAA,GAExB,OACEvB,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACES,EAAAA,EAAAA,KAAC4B,EAAO,KACR5B,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAM0B,GAAU,EAAK,EAACpC,SAAC,iGACxCS,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CACJpC,YAAa,kBAAMkC,GAAU,EAAM,EACnCnC,OAAQA,EACRD,SAAU,WACVuC,WAAY,aAIpB,C","sources":["components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/Welcome/Welcome.jsx","pages/WelcomePage/WelcomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: rgb(252, 252, 252);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import React from 'react';\nimport icons from '../../images/sprite.svg';\nimport {\n  Container,\n  Wrapper,\n  Logo,\n  LogoWrapper,\n  Icon,\n  Title,\n  Text,\n  AuthWrapper,\n  RegButton,\n  LogButton,\n} from './Welcome.styled';\n\nfunction Welcome() {\n  return (\n    <Container>\n      <Wrapper>\n        <Logo />\n        <LogoWrapper>\n          <Icon>\n            <use href={`${icons}#icon-logo`} />\n          </Icon>\n          <Title>TASK PRO</Title>\n        </LogoWrapper>\n        <Text>\n          Supercharge your productivity and take control of your tasks with Task\n          Pro - Don't wait, start achieving your goals now!\n        </Text>\n        <AuthWrapper>\n          <RegButton to=\"auth/register\">Registration</RegButton>\n          <LogButton to=\"auth/login\">Log In</LogButton>\n        </AuthWrapper>\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Welcome;\n","import React, { useState } from 'react';\nimport Welcome from 'components/Welcome/Welcome';\nimport Modal from 'components/Modal/Modal';\n\nconst WelcomePage = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div>\n      <Welcome />\n      <button onClick={() => setIsOpen(true)}>Відкрити модалку</button>\n      <Modal\n        handleClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n        children={'hello :)'}\n        btnContent={'button'}\n      />\n    </div>\n  );\n};\n\nexport default WelcomePage;\n"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","ModalWindow","_templateObject2","Heading","_templateObject3","CloseBtn","_templateObject4","_ref","children","isOpen","handleClose","heading","window","addEventListener","event","key","ReactDOM","_jsx","onClick","_jsxs","e","stopPropagation","xlinkHref","concat","Sprite","document","getElementById","Container","Wrapper","Logo","LogoWrapper","Icon","href","icons","Title","Text","AuthWrapper","RegButton","to","LogButton","_useState","useState","_useState2","_slicedToArray","setIsOpen","Welcome","Modal","btnContent"],"sourceRoot":""}