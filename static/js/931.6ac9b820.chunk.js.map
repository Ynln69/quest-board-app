{"version":3,"file":"static/js/931.6ac9b820.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/Button/Button.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","components/ModalBoard/ModalBoard.jsx","components/Sidebar/AddBoard/AddBoard.jsx","components/Sidebar/EditBoard/EditBoard.jsx","redux/boards/boardsSelectors.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Calendar/Calendar.styled.js","components/Calendar/Calendar.jsx","components/Task/Task.jsx","components/Column/ModalColumn/ModalColumn.styled.js","components/Column/ModalColumn/ModalColumn.jsx","components/Column/AddColumn/AddColumn.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.styled.js","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds/non-optimized|sync|/^/.//.*$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  // &.theme-light {\n  //   background-color: #fcfcfc;\n  //    }\n\n  // &.theme-dark {\n  //   background-color: #161616;\n  // }\n\n  // &.theme-violet {\n  //   background-color: #ECEDFD;\n  // }\n   `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  \n  &.theme-light {\n    background-color: #F6F6F7;\n    fill: #FFFFFF;\n     }\n\n  &.theme-dark {\n    background-color: #161616;\n    fill: #FFFFFF;\n  }\n\n  &.theme-violet {\n    background-color: #ECEDFD;\n    fill: #FFFFFF;\n  }\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: var(--modal_bgc);\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--modal_main_color);\n\n  &:hover,\n  :focus {\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n    color: var(--modal_main_color);\n    background-color: var(--modal_field);\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const PhotoInputWrapper = styled.label`\nwidth: 68px;\nheight: 78px;\nflex-shrink: 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ncursor: pointer;\n\n&:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n// svg {\n//   width: 68px;\n//   height: 68px;\n//   fill: #fff;\n// }\n`;\n\nexport const AvatarImage = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\nborder-radius: 50%;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid  var(--create_normal);\n  color: var(--plus_color);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: var(--create_active);\n  }\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n   position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  display: none;\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 24px;\nheight: 24px;\n  cursor: pointer;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 4px;\n  fill: #161616;\n`;\n\nexport const IconUserWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  ModalCloseButton,\n  EditProfileModal,\n  FormBox,\n  PhotoInputWrapper,\n  AvatarImage,\n  FieldUser,\n  FileInput,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { avatarURL,username, email, password } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith(\"image/\")) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        dispatch(updateProfileData({ newPhoto: reader.result }));\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <div>Edit profile</div>\n        <ModalCloseButton onClick={onClose}><use xlinkHref={`${Sprite}#icon-x-close`} /></ModalCloseButton>\n        <Formik\n          initialValues={{\n            newPhoto: avatarURL,\n            newName: username,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\n\nexport default EditProfile;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\nimport Sprite from '../../images/sprite.svg';\n\nconst UserInfo = ({ theme }) => {\n  const { avatarURL, username } = useSelector((state) => state.profile);\n  const [isModalOpen, setModalOpen] = React.useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n      ) : (\n        <UserIcon className={`icon-user theme-${theme}`} onClick={openModal}>\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isModalOpen && <EditProfile onClose={closeModal} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;\n\n\n\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar,  UserIcon  } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const setAvatarIcon = (activeUserTheme) => {\n//   switch (activeUserTheme) {\n//        case 'light':\n//       return '#icon-userlight';\n//       case 'dark':\n//       return '#icon-userdark';\n//     case 'violet':\n//       return '#icon-userviolet';\n//     default:\n//       return '#icon-userlight'; \n//   }\n// }; \n\n// const UserInfo = ({theme}) => {\n//   const { avatarURL, username } = useSelector(state => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   const avatarIcon = setAvatarIcon(theme);\n\n//   return (\n//     <Container>\n//       <div>{username}</div>\n//       {avatarURL ? (\n//         <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon onClick={openModal}>\n//         <svg className={`icon-user`} width=\"32\" height=\"32\">\n//           <use href={Sprite + avatarIcon} />\n//         </svg>\n//       </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n\n\n\n","export const selectTheme = (state) => state.theme;","import styled from '@emotion/styled';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n  cursor: pointer;\n  margin-left: auto;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\nexport const BoardIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  &:last-child {\n    margin-right: 0;\n  }\n  &.theme-violet {\n    fill: var(--add_btn_bgc);\n  }\n  &.theme-dark {\n    fill: #ffffff;\n  }\n`;\n\nexport const TItleBoard = styled.div`\n  display: flex;\n`;\n\nexport const BoardIcons = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: var(--modal_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--close_icon);\n\n  &:hover,\n  :focus {\n    stroke: var(--close_active);\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  document.body.style.overflow = isOpen ? 'hidden' : 'visible';\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: 'Poppins';\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { MainButton } from 'components/Button/Button';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n};\n\nconst NeedHelpForm = () => {\n  const handleSubmit = evt => {};\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n        <NeedHelpForm />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 302px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #fff;\n  stroke: rgba(22, 22, 22, 0.5);\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  &:checked + img {\n    border: 1px solid rgba(190, 219, 176, 0.4);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: #161616;\n  }\n  &:hover + img {\n    border: 1px solid #bedbb0;\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { MainButton } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { createBoard } from 'redux/boards/boardOperations';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1.jpg',\n  'bg2.jpg',\n  'bg3.jpg',\n  'bg4.jpg',\n  'bg5.jpg',\n  'bg6.jpg',\n  'bg7.jpg',\n  'bg8.jpg',\n  'bg9.jpg',\n  'bg10.jpg',\n  'bg11.jpg',\n  'bg12.jpg',\n  'bg13.jpg',\n  'bg14.jpg',\n  'bg15.jpg',\n  'bg16.jpg',\n];\n\nconst initialValues = { title: '', icon: icons[0], background: backgrounds[0] };\n\nfunction ModalBoard({ btnContent, closeModal }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    // const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      title: values.title,\n      icon: values.icon,\n      background: values.background,\n    };\n    dispatch(createBoard(newBoard));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addBoardSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\">\n          <StyledInputField\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={values.title}\n          />\n          <ErrorMsg name=\"title\" component=\"p\" />\n          <StyledSubtitle>Icons</StyledSubtitle>\n          <IconsWrapper>\n            {icons.map(icon => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon}\n                  onChange={handleChange}\n                  checked={values.icon === icon}\n                />\n                <StyledSVG>\n                  <use href={`${sprite}#${icon}`}></use>\n                </StyledSVG>\n              </label>\n            ))}\n          </IconsWrapper>\n          <StyledSubtitle>Background</StyledSubtitle>\n          <BgImagesWrapper>\n            {backgrounds.map((background, i) => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"background\"\n                  value={background}\n                  onChange={handleChange}\n                  checked={values.background === background}\n                />\n                <img\n                  src={require(`../../images/backgrounds/non-optimized/${background}`)}\n                  alt={`background variant ${i + 1}`}\n                  width=\"28\"\n                />\n              </label>\n            ))}\n          </BgImagesWrapper>\n          <MainButton type=\"submit\">{btnContent}</MainButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalBoard;\n","import Modal from '../../Modal/Modal';\nimport ModalBoard from '../../ModalBoard/ModalBoard';\n\nconst AddBoard = ({ closeBoardModal }) => {\n  const handleCloseModal = () => {\n    closeBoardModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading=\"New board\">\n        <ModalBoard btnContent={'Create'} closeModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddBoard;\n","import Modal from '../../Modal/Modal';\nimport ModalBoard from '../../ModalBoard/ModalBoard';\n\nconst EditBoard = ({ closeBoardModal }) => {\n  const handleCloseModal = () => {\n    closeBoardModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading=\"Edit board\">\n        <ModalBoard btnContent={'Edit'} closeModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditBoard;","export const selectBoards = state => state.boards.boards;\n","import {\n  SvgAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  SidebarBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardIcon,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TItleBoard,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport AddBoard from './AddBoard/AddBoard';\nimport EditBoard from './EditBoard/EditBoard';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isShow, setIsShow] = useState(false);\n  const [editBoard, setEditBoard] = useState(false);\n  const [openBoard, setOpenBoard] = useState(false);\n  const selectBoard = useSelector(selectBoards);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getBoards());\n    },\n    [dispatch],\n    selectBoard\n  );\n\n  const showEditBoardModal = () => {\n    setEditBoard(true);\n  };\n  const closeEditBoardModal = () => {\n    setEditBoard(false);\n  };\n\n  const showBoardModal = () => {\n    setOpenBoard(true);\n  };\n  const closeBoardModal = () => {\n    setOpenBoard(false);\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  const handleLogout = () => {\n    console.log('logout');\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n\n        <SvgAdd onClick={showBoardModal}>\n          <use href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n        {openBoard && <AddBoard closeBoardModal={closeBoardModal} />}\n      </BoardTitleBlock>\n      {selectBoard.map(board => (\n        <ul>\n          <li>\n            <BoardList>\n              <TItleBoard>\n                <BoardIcon>\n                  <use href={`${sprite}#${board.icon}`} />\n                </BoardIcon>\n\n                {board.title}\n              </TItleBoard>\n              <BoardIcons>\n                <EditIcon>\n                  <use\n                    href={`${sprite}#icon-pencil`}\n                    onClick={showEditBoardModal}\n                  />\n                </EditIcon>\n                <EditIcon onClick={() => dispatch(deleteBoard(board._id))}>\n                  <use href={`${sprite}#icon-trash`} />\n                </EditIcon>\n              </BoardIcons>\n            </BoardList>\n          </li>\n          {editBoard && <EditBoard closeBoardModal={closeEditBoardModal} />}\n        </ul>\n      ))}\n\n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower src={flower} alt=\"flower\" />\n\n        <HelpContent>\n          If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={handleLogout}>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n//   display: inline-block;\n`;\n\nexport const Select = styled.select`\n  position: absolute;\n  display: none;\n  bottom: -70px;\n  left: 80%;\n  transform: translateX(-80%);\n  display: inline-flex;\n  padding: 18px 44px 18px 18px;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid var(--border_theme);\n  cursor: pointer;\n  z-index: 99;\n`;\n\nexport const Option = styled.option`\n  // content: '';\n  // position: absolute;\n  // top: 50%;\n  // right: 12px;\n  // transform: translateY(-50%);\n  // width: 0;\n  // height: 0;\n  font-family: Poppins;\n  font-size: 14px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: -0.28px;\n  border: 1px solid var(--border_theme);\n  color: var(-theme_color);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: var(--theme_active);\n  }\n`;\n\n// export const ThemeMenu = styled.ul`\n//   position: absolute;\n//   top: 100%;\n//   left: 0;\n//   width: 100%;\n//   background: var(--theme_bgc);\n//   box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n//   border-radius: 8px;\n//   padding: 8px 0;\n//   margin-top: 4px;\n//   list-style: none;\n//   z-index: 99;\n// `;\n\n// export const ThemeMenuItem = styled.li`\n//   font-family: Poppins;\n//   color: var(--border_theme);\n//   font-size: 14px;\n//   letter-spacing: -0.28px;\n//   padding: 8px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: var(--border_theme);\n//     color: var(--theme_bgc);\n//   }\n// `;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { updateTheme } from 'redux/theme/operations';\nimport { Container, Select, Option } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  const onToggleTheme = async event => {\n    const newTheme = event.target.value;\n\n    const themes = ['light', 'dark', 'violet'];\n    themes.forEach(t => {\n      document.body.classList.remove(t);\n    });\n\n    document.body.classList.remove(theme);\n    document.body.classList.add(newTheme);\n\n    dispatch(setTheme(newTheme));\n\n    try {\n      await dispatch(updateTheme({ theme: newTheme }));\n      localStorage.setItem('theme', newTheme);\n    } catch (error) {\n      console.log('Error updating theme:', error);\n    }\n    onClose();\n  };\n\n  return (\n    <Container >\n      <Select value={theme} onChange={onToggleTheme} >\n        \n        <Option value=\"light\">Light</Option>\n        <Option value=\"dark\">Dark</Option>\n        <Option value=\"violet\">Violet</Option>\n      \n              </Select>\n    </Container>\n  );\n};\nexport default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  // color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  color: var(--header_user_text);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const HeaderNav = styled.div`\nposition: relative;\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nmargin-right: 14px;\ncursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  color: var(--header_user_text);\n  fill: transparent;\n  z-index: 999;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n    let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen); // Toggle the state for isThemeSelectorOpen\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      {isSideBarOpen && <Sidebar />}\n      <HeaderWrap>\n        <HeaderNav>\n          <div>\n            <SelectIcon\n              className={`icon-chevron-down theme-${theme}`}\n              width=\"16\"\n              height=\"16\"\n              onClick={toggleThemeSelector}\n            >\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector onClose={() => setThemeSelectorOpen(false)} />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import UserInfo from 'components/UserInfo/UserInfo';\n// import { setTheme } from 'redux/theme/themeSlice';\n// import { selectTheme } from 'redux/theme/selectors';\n// import { updateTheme } from 'redux/theme/operations';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import {\n//   Container,\n//   HeaderNav,\n//   MenuIcon,\n//   SelectIcon,\n//   HeaderWrap,\n// } from './Header.styled';\n// import Sprite from '../../images/sprite.svg';\n\n// const Header = () => {\n//   const dispatch = useDispatch();\n//   const theme = useSelector(selectTheme);\n//   const [isOptionListOpen, setOptionListOpen] = useState(false);\n//   const [isSideBarOpen, setSideBarOpen] = useState(false);\n//   const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n//   useEffect(() => {\n//     const storedTheme = localStorage.getItem('theme');\n//     if (storedTheme) {\n//       dispatch(setTheme(storedTheme));\n//     }\n//     let timeout;\n\n//     if (isSideBarOpen) {\n//       timeout = setTimeout(() => {\n//         document.addEventListener('click', handleOutsideClick);\n//       }, 100);\n//     } else {\n//       document.removeEventListener('click', handleOutsideClick);\n//     }\n\n//     return () => {\n//       clearTimeout(timeout);\n//       document.removeEventListener('click', handleOutsideClick);\n//     };\n//   }, [dispatch, isSideBarOpen]);\n\n//   const handleOutsideClick = e => {\n//     if (!e.target.closest('aside')) {\n//       setSideBarOpen(false);\n//     }\n//   };\n\n//   const toggleOptionList = () => {\n//     setOptionListOpen(!isOptionListOpen);\n//   };\n\n//   const sendThemeToBackend = newTheme => {\n//     localStorage.setItem('theme', newTheme);\n//   };\n\n//      const onToggleTheme = (event) => {\n//     const newTheme = event.target.value;\n\n//       const themes = ['light', 'dark', 'violet'];\n//     themes.forEach(t => {\n//       document.body.classList.remove(t);\n//     });\n\n//     document.body.classList.remove(theme);\n//     document.body.classList.add(newTheme);\n\n//     dispatch(setTheme(newTheme)); // Update the local theme state immediately\n//     sendThemeToBackend(newTheme); // Save the theme in localStorage (this part seems correct)\n\n//        dispatch(updateTheme({ theme: newTheme }))\n//       .unwrap()\n//       .catch((error) => {\n//         console.log('Error updating theme:', error);\n//       });\n\n//   };\n\n//   const toggleSideBar = () => {\n//     setSideBarOpen(!isSideBarOpen);\n//   };\n\n//   const toggleThemeSelector = () => {\n//     setThemeSelectorOpen(!isThemeSelectorOpen);\n//   };\n\n//   return (\n//     <Container className={`theme-${theme}`}>\n//       <div onClick={toggleSideBar}>\n//         <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n//           <use href={`${Sprite}#icon-menu`} />\n//         </MenuIcon>\n//       </div>\n//       {isSideBarOpen && <Sidebar />}\n//       <HeaderWrap>\n//         <HeaderNav onClick={toggleOptionList} value={theme}>\n//           <div>\n//             <SelectIcon\n//               className={`icon-chevron-down theme-${theme}`}\n//               onClick={toggleThemeSelector}\n//             >\n//               <use href={`${Sprite}#icon-chevron-down`} />\n//             </SelectIcon>\n//           </div>\n//           Theme\n//         </HeaderNav>\n//         {isThemeSelectorOpen && (\n//           <select value={theme} onChange={onToggleTheme}>\n//             <option value=\"light\">Light</option>\n//             <option value=\"dark\">Dark</option>\n//             <option value=\"violet\">Violet</option>\n//           </select>\n//         )}\n//         <UserInfo />\n//       </HeaderWrap>\n//       {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n//     </Container>\n//   );\n// };\n\n// export default Header;\n","export const HeaderDashboard = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        height: '80px',\n        widows: '100%',\n      }}\n    >\n      <p>Name Board</p>\n\n      <p>Filters logic</p>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CalendarContainer = styled.div`\n  & .react-datepicker {\n    font-family: 'Poppins', sans-serif;\n    border-radius: 8px;\n    padding: 18px;\n    border: 1px solid #bedbb0;\n    background: #fff;\n  }\n\n  & .react-datepicker-popper[data-placement^='bottom'] {\n    padding: 0px;\n  }\n\n  & .react-datepicker__triangle {\n    display: none;\n  }\n\n  & .react-datepicker__header {\n    background: transparent;\n    border: none;\n    padding: 0;\n  }\n\n  & .react-datepicker__navigation {\n    position: absolute;\n    top: 12px;\n  }\n\n  & .react-datepicker__navigation-icon--previous:before {\n    right: -12px;\n    border-color: #161616cc;\n    border-width: 2px 2px 0 0;\n    transition: border-color 250ms ease-in;\n  }\n\n  & .react-datepicker__navigation-icon--next:before {\n    left: -12px;\n    border-color: #161616cc;\n    border-width: 2px 2px 0 0;\n    transition: border-color 250ms ease-in;\n  }\n\n  &\n    .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon--previous:before,\n  &\n    .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon--next:before {\n    border-color: #bedbb0;\n  }\n\n  & .react-datepicker__current-month {\n    font-family: 'Poppins', sans-serif;\n    color: #161616;\n    font-family: Poppins;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: -0.32px;\n    padding-bottom: 14px;\n    border-bottom: 1px solid #16161633;\n  }\n\n  & .react-datepicker__day-names {\n    margin: 12px 0 0 0;\n  }\n\n  & .react-datepicker__day-name {\n    color: rgba(22, 22, 22, 0.5);\n    font-family: Poppins;\n    font-size: 14px;\n    font-weight: 500;\n  }\n\n  & .react-datepicker__month {\n    margin: 0;\n  }\n\n  & .react-datepicker__day {\n    font-family: 'Poppins', sans-serif;\n    color: #161616;\n    font-family: Poppins;\n    font-size: 14px;\n    font-weight: 400;\n    border-radius: 50%;\n    transition: background-color 250ms ease-in, color 250ms ease-in;\n  }\n\n  & .react-datepicker__day--selected,\n  & .react-datepicker__day:hover {\n    background: #bedbb0;\n    border-radius: 50%;\n    border: none;\n  }\n\n  & .react-datepicker__day--outside-month,\n  & .react-datepicker__day--disabled {\n    color: rgba(22, 22, 22, 0.2);\n  }\n\n  & .react-datepicker__day--outside-month:hover,\n  & .react-datepicker__day--disabled:hover {\n    background: rgba(22, 22, 22, 0.1);\n  }\n\n  & .react-datepicker__day--keyboard-selected {\n    background: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  color: #bedbb0;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  border: none;\n`;\n","import React, { useState, forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { subDays, addDays, formatDistanceToNowStrict } from 'date-fns';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Button, CalendarContainer } from './Calendar.styled';\nimport Sprite from '../../images/sprite.svg';\n\nexport const Calendar = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const result = formatDistanceToNowStrict(Date.parse(selectedDate), {\n    includeSeconds: true,\n  });\n  console.log(result);\n\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => {\n    const formatDate = () => {\n      const today = new Date();\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      if (selectedDate.toDateString() === today.toDateString()) {\n        return 'Today,';\n      } else if (selectedDate.toDateString() === tomorrow.toDateString()) {\n        return 'Tomorrow,';\n      } else {\n        return '';\n      }\n    };\n\n    return (\n      <Button onClick={onClick} ref={ref}>\n        {formatDate(value)} {value}\n        <svg width=\"18\" height=\"18\" fill=\"#BEDBB0\">\n          <use href={`${Sprite}#icon-chevron-down-1`} />\n        </svg>\n      </Button>\n    );\n  });\n\n  return (\n    <CalendarContainer>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => setSelectedDate(date)}\n        dateFormat=\"MMMM d\"\n        customInput={<ExampleCustomInput value={selectedDate} />}\n        onChangeRaw={e => {\n          const newDate = new Date(e.target.value);\n          setSelectedDate(newDate);\n        }}\n        minDate={subDays(new Date(), 0)}\n        maxDate={addDays(new Date(), 365)}\n        popperModifiers={[\n          {\n            name: 'offset',\n            options: {\n              offset: [5, 10],\n            },\n          },\n          {\n            name: 'preventOverflow',\n            options: {\n              rootBoundary: 'viewport',\n              tether: false,\n              altAxis: true,\n            },\n          },\n        ]}\n      />\n    </CalendarContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Calendar } from 'components/Calendar/Calendar';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  padding: 8px;\n  margin: 8px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n\n  /* display: flex; */\n  gap: 10px;\n`;\n\nconst Handle = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: orange;\n  border-radius: 4px;\n`;\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <Handle />\n          <p>{task.title}</p>\n          <p>{task.description}</p>\n          <p>{task.priority}</p>\n          <p>{task.deadline}</p>\n          <Calendar />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 302px;\n  min-height: 49px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  color: #161616;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  ine-height: normal;\n  font-family: inherit;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  color: #161616;\n  font-size: 18px;\n  font-weight: 500;\n  width: 302px;\n  height: 49px;\n`;\n","import { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport sprite from '../../../images/sprite.svg';\nimport { Button, BoxSvg, SvgAdd, Input } from './ModalColumn.styled';\n\nconst ModalColumn = ({ handleSubmit, nameTitle }) => {\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState(nameTitle || '');\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleFormSubmit = () => {\n    handleSubmit(title);\n    handlerVisible();\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ title: nameTitle }} onSubmit={handleFormSubmit}>\n        <Form>\n          <Input\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={e => {\n              setTitle(e.target.value);\n            }}\n          />\n          <Button type=\"submit\">\n            <BoxSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxSvg>\n            Add\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\nexport default ModalColumn;\n","import Modal from '../../Modal/Modal';\nimport ModalColumn from '../ModalColumn/ModalColumn';\n\nconst AddColumn = ({ closeColumnModal, handleSubmit, title, nameTitle }) => {\n  const handleCloseModal = () => {\n    closeColumnModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={title}>\n        <ModalColumn handleSubmit={handleSubmit} nameTitle={nameTitle} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  border-radius: 2px;\n  min-width: 334px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 56px;\n  padding: 18px 20px 17px 20px;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  color: #161616;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nexport const ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: rgba(22, 22, 22, 0.5);\n  fill: #fff;\n  cursor: pointer;\n`;\n\nexport const BoxSvg = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #bedbb0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxAddSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\nimport AddColumn from './AddColumn/AddColumn';\nimport {\n  Container,\n  Title,\n  TitleBox,\n  TaskList,\n  ContainerModal,\n  Svg,\n  BoxSvg,\n  SvgAdd,\n  BoxAddSvg,\n  Button,\n} from './Column.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const handleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleVisibleEdit = () => {\n    setShowEditModal(!showEditModal);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    handleVisible();\n  };\n\n  const handleEdit = e => {\n    handleVisibleEdit();\n    // console.log(column.title);\n    // console.log(column);\n    // column.title;\n    // const newColumn = {title: }\n  };\n\n  const handleDelete = () => {};\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <TitleBox {...provided.dragHandleProps}>\n            <Title>{column.title}</Title>\n            <BoxSvg>\n              <Svg onClick={handleEdit}>\n                <use href={`${sprite}#icon-pencil`} />\n              </Svg>\n              <Svg onClick={handleDelete}>\n                <use href={`${sprite}#icon-trash`} />\n              </Svg>\n            </BoxSvg>\n          </TitleBox>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <Button onClick={handleVisible}>\n            <BoxAddSvg>\n              <SvgAdd>\n                <use href={`${sprite}#icon-plus`} />\n              </SvgAdd>\n            </BoxAddSvg>\n            Add another card\n          </Button>\n\n          {showEditModal && (\n            <AddColumn\n              title={'Edit column'}\n              nameTitle={column.title}\n              closeColumnModal={handleVisibleEdit}\n              handleSubmit={handleSubmit}\n            />\n          )}\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: flex;\n  gap: 18px;\n\n  position: relative;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #ffffff;\n  cursor: pointer;\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background: #161616;\n  margin-right: 7px;\n`;\n\nexport const Button = styled.button`\n  min-width: 334px;\n  min-height: 56px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px 78px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-family: inherit;\n  color: #161616;\n  background: #ffffff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #9dc888;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\n//add Elvira\nimport AddColumn from 'components/Column/AddColumn/AddColumn';\nimport { Container, Button, BoxSvg, SvgAdd } from './MainDashboard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n\n  const [visible, setVisible] = useState(false);\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = data => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: data,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    handlerVisible();\n  };\n\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <li>\n        <Button onClick={handlerVisible}>\n          <BoxSvg>\n            <SvgAdd>\n              <use href={`${sprite}#icon-plus`} />\n            </SvgAdd>\n          </BoxSvg>\n          Add another column\n        </Button>\n      </li>\n\n      {visible && (\n        <>\n          <AddColumn\n            closeColumnModal={handlerVisible}\n            handleSubmit={handleSubmit}\n            title={'Add column'}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerDashboard = styled.div`\n  width: 100%;\n  background: var(--board_bgc);\n`;\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\nimport { ContainerDashboard } from './Dashboard.styled';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <ContainerDashboard>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </ContainerDashboard>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Container } from './HomePage.styled';\n\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n\n  return (\n    <ThemeProvider>\n      <Container>\n        <Sidebar theme={theme} />\n        <div style={{ width: '100%' }}>\n          <Header theme={theme} />\n          <Dashboard theme={theme} />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg1.jpg\": 7727,\n\t\"./bg10.jpg\": 1640,\n\t\"./bg11.jpg\": 1948,\n\t\"./bg12.jpg\": 146,\n\t\"./bg13.jpg\": 3317,\n\t\"./bg14.jpg\": 2285,\n\t\"./bg15.jpg\": 1487,\n\t\"./bg16.jpg\": 130,\n\t\"./bg2.jpg\": 22,\n\t\"./bg3.jpg\": 5881,\n\t\"./bg4.jpg\": 5102,\n\t\"./bg5.jpg\": 3581,\n\t\"./bg6.jpg\": 8528,\n\t\"./bg7.jpg\": 7333,\n\t\"./bg8.jpg\": 490,\n\t\"./bg9.jpg\": 1779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2860;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","EditProfileModal","ModalCloseButton","FormBox","Form","_templateObject4","FieldUser","Field","_templateObject5","PhotoInputWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","FileInput","_templateObject9","IconPlus","_templateObject10","IconUserWrapper","_templateObject11","_ref","onClose","_useSelector","useSelector","state","profile","avatarURL","username","email","password","dispatch","useDispatch","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateProfileData","stop","_x","apply","arguments","handleAvatarClick","e","selectedFile","target","files","type","startsWith","reader","FileReader","onloadend","newPhoto","result","readAsDataURL","_jsx","children","_jsxs","onClick","xlinkHref","concat","Sprite","Formik","initialValues","newName","newEmail","newPassword","onSubmit","_ref3","isSubmitting","setFieldValue","_Fragment","src","alt","width","height","href","className","id","name","onChange","event","URL","createObjectURL","currentTarget","ErrorMessage","component","disabled","theme","_React$useState","React","_React$useState2","_slicedToArray","isModalOpen","setModalOpen","openModal","EditProfile","selectTheme","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","_templateObject12","Flower","_templateObject13","BoardIcon","_templateObject14","BoardList","_templateObject15","EditIcon","_templateObject16","TItleBoard","_templateObject17","BoardIcons","_templateObject18","Backdrop","ModalWindow","Heading","CloseBtn","isOpen","handleClose","heading","document","body","style","overflow","window","addEventListener","key","ReactDOM","stopPropagation","getElementById","MainButton","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","validationSchema","evt","errors","touched","submitCount","autoComplete","placeholder","resize","closeModal","Modal","NeedHelpForm","addBoardSchema","Yup","title","StyledInputField","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","icon","background","btnContent","resetForm","newBoard","createBoard","handleChange","value","map","checked","sprite","nanoid","i","require","closeBoardModal","handleCloseModal","ModalBoard","selectBoards","boards","Sidebar","_useState","useState","_useState2","isShow","setIsShow","_useState3","_useState4","editBoard","setEditBoard","_useState5","_useState6","openBoard","setOpenBoard","selectBoard","useEffect","getBoards","showEditBoardModal","closeEditBoardModal","AddBoard","board","deleteBoard","_id","EditBoard","NeedHelpModal","console","log","logOut","Select","Option","onToggleTheme","newTheme","forEach","t","classList","remove","add","setTheme","updateTheme","localStorage","setItem","t0","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","storedTheme","getItem","setTimeout","handleOutsideClick","removeEventListener","clearTimeout","closest","ThemeSelector","UserInfo","HeaderDashboard","display","alignItems","justifyContent","widows","CalendarContainer","Button","Calendar","Date","selectedDate","setSelectedDate","formatDistanceToNowStrict","parse","includeSeconds","ExampleCustomInput","forwardRef","ref","today","tomorrow","setDate","getDate","toDateString","formatDate","fill","DatePicker","selected","date","dateFormat","customInput","onChangeRaw","newDate","minDate","subDays","maxDate","addDays","popperModifiers","options","offset","rootBoundary","tether","altAxis","props","isDragging","Handle","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","innerRef","description","priority","deadline","BoxSvg","handleSubmit","nameTitle","visible","setVisible","setTitle","closeColumnModal","ModalColumn","TitleBox","TaskList","isDraggingOver","ContainerModal","Svg","BoxAddSvg","Column","column","tasks","cardData","setCardData","dataForModal","titleTask","setTitleTask","_useState7","_useState8","showEditModal","setShowEditModal","handleVisible","handleVisibleEdit","taskId","uuidv4","replace","newTask","_defineProperty","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","handleEdit","handleDelete","Droppable","droppableId","droppableProps","AddColumn","MainDashboard","handlerVisible","DragDropContext","onDragStart","color","transition","onDragUpdate","update","destination","opacity","Object","keys","length","backgroundColor","onDragEnd","_objectSpread3","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskId","newColumnOrder","columnOrder","direction","data","initialUserModel","boardsData","ContainerDashboard","Dashboard","ThemeProvider","Header","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}