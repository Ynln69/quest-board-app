{"version":3,"file":"static/js/64.573d5c8d.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Task/Task.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  background: #bedbb0;\n   `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const EditProfileModal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 100%;\npadding: 24px;\n\nborder-radius: 8px;\nbox-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground-color: #1f1f1f;\n\ncubic-bezier(0.4, 0, 0.2, 1)\n @media screen and (min-width: 375px) {\n  width: 335px;\n}\n@media screen and (min-width: 768px) {\n  width: 400px;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: #161616;\n\n  &:hover,\n  :focus {\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 14px;\n  gap: 14px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 287px;\n    height: 49px;\n\n    color: #ffffff;\n    background-color: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 352px;\n    }\n  }\n`;\n\nexport const PhotoInputWrapper = styled.label`\nwidth: 68px;\nheight: 78px;\nflex-shrink: 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ncursor: pointer;\n\n// svg {\n//   width: 68px;\n//   height: 68px;\n//   fill: #fff;\n// }\n`;\n\nexport const AvatarImage = styled.img`\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\nborder-radius: 50%;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n   position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  display: none;\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 24px;\nheight: 24px;\n  cursor: pointer;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 4px;\n  fill: #161616;\n`;\n\nexport const IconUserWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  ModalCloseButton,\n  EditProfileModal,\n  FormBox,\n  PhotoInputWrapper,\n  AvatarImage,\n  FieldUser,\n  FileInput,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n} from './EditProfile.styled';\nimport { updateProfileData } from 'redux/user/profileSlice';\nimport Sprite from '../../images/sprite.svg';\n\nconst EditProfile = ({ onClose }) => {\n  const { photo, name, email, password } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    dispatch(updateProfileData(values));\n    onClose();\n  };\n\n  const handleAvatarClick = () => {\n    document.getElementById('newPhotoInput').click();\n  };\n\n  return (\n    <Container>\n      <EditProfileModal>\n        <div>Edit profile</div>\n        <ModalCloseButton onClick={onClose}><use xlinkHref={`${Sprite}#icon-x-close`} /></ModalCloseButton>\n        <Formik\n          initialValues={{\n            newPhoto: photo,\n            newName: name,\n            newEmail: email,\n            newPassword: password,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormBox>\n              <PhotoInputWrapper>\n                {values.newPhoto ? (\n                  <>\n                    <AvatarImage\n                      src={values.newPhoto}\n                      alt=\"User Avatar\"\n                      width=\"68\"\n                      height=\"68\"\n                      onClick={handleAvatarClick}\n                    />\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </>\n                ) : (\n                  <IconUserWrapper onClick={handleAvatarClick}>\n                    <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                      <use href={`${Sprite}#icon-user`} />\n                    </svg>\n                    <IconPlus onClick={handleAvatarClick}>\n                      <use href={`${Sprite}#icon-plus`} />\n                    </IconPlus>\n                  </IconUserWrapper>\n                )}\n                <FileInput\n                  id=\"newPhotoInput\"\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                  }}\n                />\n              </PhotoInputWrapper>\n              <label>\n                <FieldUser type=\"text\" name=\"newName\" />\n                <ErrorMessage name=\"newName\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"email\" name=\"newEmail\" />\n                <ErrorMessage name=\"newEmail\" component=\"div\" />\n              </label>\n              <label>\n                <FieldUser type=\"password\" name=\"newPassword\" />\n                <ErrorMessage name=\"newPassword\" component=\"div\" />\n              </label>\n              <SaveBtn type=\"submit\" disabled={isSubmitting}>\n                Save\n              </SaveBtn>\n            </FormBox>\n          )}\n        </Formik>\n      </EditProfileModal>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar } from './UserInfo.styled';\nimport EditProfile from 'components/EditProfile/EditProfile';\n\nconst UserInfo = () => {\n  const { photo, name } = useSelector(state => state.profile);\n  const [isModalOpen, setModalOpen] = React.useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{name}</div>\n      <Avatar src={photo} alt=\"User Avatar\" onClick={openModal} />\n      {isModalOpen && <EditProfile onClose={closeModal} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;","export const selectTheme = (state) => state.theme;","import styled from 'styled-components';\n\nexport const SidebarBlock = styled.aside`\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n  // background-color: #121212\n\n  &.theme-light {\n    background-color: #ffffff;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #121212;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #5255bc;\n  }\n\n  @media (min-width: 1400px) {\n    display: none;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const MyBoardTitle = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const HelpContent = styled.p`\n  // color: #FFF;\n  line-height: 20px;\n  letter-spacing: -0.28px;\n\n  &.theme-light {\n    color: #161616;\n  }\n\n  &.theme-dark {\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const BoardTitleBlock = styled.div`\n  border-top: 1px solid #1f1f1f;\n  border-bottom: 1px solid #1f1f1f;\n  padding: 14px 0;\n  color: #ffffff;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background: #bedbb0;\n  stroke: #121212;\n`;\n\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n  fill: #ffffff;\n  background: #1f1f1f;\n`;\n\nexport const SvgHelp = styled.svg`\n  stroke: #ffffff;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const NeedHelpBlock = styled.div`\n  // background-color: #1F1F1F;\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n\n  &.theme-light {\n    background-color: #f6f6f7;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #1f1f1f;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: rgba(236, 237, 253, 0.4);\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: #fff;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: #fff;\n  border: none;\n  padding: 0;\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n","import { SvgAdd, SvgLightning, Title, TitleBlock,SidebarBlock, BoardTitleBlock, MyBoardTitle, NeedHelpBlock, NeedHelpButton,SvgHelp, HelpContent, LogoutBtn, Flower } from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from \"../../images/flower.png\"\n\n\nexport function Sidebar({ theme, isOpen }) {\n \n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n      <SvgLightning>\n          <use  href={`${sprite}#icon-lightning`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n     \n\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <createBoardTitle>\n          <p>Create a new board</p>\n        </createBoardTitle>\n       \n        <SvgAdd>\n          <use  href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n      </BoardTitleBlock>\n   \n      <NeedHelpBlock className={`theme-${theme}`}>\n        <Flower  src={flower} alt=\"flower\"/>\n       \n        <HelpContent>\n        If you need help with TaskPro, check out our support resources or\n          reach out to our customer support team.\n        </HelpContent>\n \n        <NeedHelpButton type=\"button\" name=\"help\">\n        <SvgHelp>\n          <use  href={`${sprite}#icon-help`} />\n        </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n        \n      </NeedHelpBlock>\n       \n\n  <LogoutBtn type=\"button\" name=\"logout\">\n  Log out\n  </LogoutBtn>\n  </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n\n  &.theme-light {\n    background-color: #fcfcfc;\n    color: #161616;\n  }\n\n  &.theme-dark {\n    background-color: #161616;\n    color: #ffffff;\n  }\n\n  &.theme-violet {\n    background-color: #fff;\n    color: #161616;\n  }\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const HeaderNav = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  &.theme-light {\n    fill: #161616;\n  }\n\n  &.theme-dark {\n    fill: #ffffff;\n  }\n\n  &.theme-violet {\n    fill: #161616;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  SelectIcon,\n  HeaderWrap,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = ({ onToggleMenu }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isOptionListOpen, setOptionListOpen] = useState(false);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n\n  const toggleOptionList = () => {\n    setOptionListOpen(!isOptionListOpen);\n  };\n\n  const sendThemeToBackend = (newTheme) => {\n    \n  };\n\n  const onToggleTheme = (event) => {\n    const newTheme = event.target.value;\n    dispatch(setTheme(newTheme));\n    sendThemeToBackend(newTheme);\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen); \n  };\n\n   return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      <HeaderWrap>\n        <HeaderNav onClick={toggleOptionList} value={theme}>\n          <div>\n            <SelectIcon><use href={`${Sprite}#icon-chevron-down`} /></SelectIcon>\n          </div>\n          Theme\n        </HeaderNav>\n        <select value={theme} onChange={onToggleTheme}>\n          <option value=\"light\">Light</option>\n          <option value=\"dark\">Dark</option>\n          <option value=\"violet\">Violet</option>\n        </select>\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} className={`theme-${theme}`}/>}\n    </Container>\n  );\n};\n\nexport default Header;\n\n","export const HeaderDashboard = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        height: '80px',\n        backgroundColor: 'lightgray',\n        widows: '100%',\n      }}\n    >\n      <p>Name Board</p>\n\n      <p>Filters logic</p>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  padding: 8px;\n  margin: 8px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n\n  /* display: flex; */\n  gap: 10px;\n`;\n\nconst Handle = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: orange;\n  border-radius: 4px;\n`;\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <Handle />\n          <p>{task.title}</p>\n          <p>{task.description}</p>\n          <p>{task.priority}</p>\n          <p>{task.deadline}</p>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  background-color: white;\n  width: 220px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3`\n  padding: 8px;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 800px;\n  top: 200px;\n`;\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    hendleVisible();\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <Title {...provided.dragHandleProps}>{column.title}</Title>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <button onClick={hendleVisible}>Add another card</button>\n\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Column } from 'components/Column/Column';\n\nconst Container = styled.div`\n  display: flex;\n\n  position: relative;\n`;\n\nconst ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #beb7b7;\n\n  position: absolute;\n  z-index: 999;\n  left: 50%;\n  top: 50%;\n`;\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n\n  const [visible, setVisible] = useState(false);\n  const [titleColumn, setTitleColumn] = useState('');\n\n  const hendleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = () => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: titleColumn,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    hendleVisible();\n  };\n\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      console.log(newState);\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <button\n        style={{ height: '50px', width: '200px' }}\n        onClick={hendleVisible}\n      >\n        Add another card\n      </button>\n\n      {visible && (\n        <ContainerModal>\n          Add Column\n          <label>\n            Column title\n            <input\n              type=\"text\"\n              value={titleColumn}\n              onChange={e => {\n                setTitleColumn(e.target.value);\n              }}\n            />\n          </label>\n          <button type=\"submit\" onClick={handleSubmit}>\n            Add Column\n          </button>\n        </ContainerModal>\n      )}\n    </div>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <div>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\n\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n  return (\n    <ThemeProvider>\n      <Header theme={theme}/>\n      <div style={{ display: 'flex' }}>\n        <Sidebar theme={theme}/>\n        <Dashboard theme={theme}/>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","EditProfileModal","ModalCloseButton","_templateObject3","FormBox","Form","_templateObject4","FieldUser","Field","_templateObject5","PhotoInputWrapper","_templateObject6","AvatarImage","_templateObject7","SaveBtn","_templateObject8","FileInput","_templateObject9","IconPlus","_templateObject10","IconUserWrapper","_templateObject11","_ref","onClose","_useSelector","useSelector","state","profile","photo","name","email","password","dispatch","useDispatch","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateProfileData","stop","_x","apply","arguments","handleAvatarClick","document","getElementById","click","_jsx","children","_jsxs","onClick","xlinkHref","concat","Sprite","Formik","initialValues","newPhoto","newName","newEmail","newPassword","onSubmit","_ref3","isSubmitting","setFieldValue","_Fragment","src","alt","width","height","href","className","id","type","onChange","event","URL","createObjectURL","currentTarget","files","ErrorMessage","component","disabled","_React$useState","React","_React$useState2","_slicedToArray","isModalOpen","setModalOpen","EditProfile","selectTheme","theme","SidebarBlock","TitleBlock","MyBoardTitle","HelpContent","Title","BoardTitleBlock","SvgAdd","SvgLightning","SvgHelp","NeedHelpBlock","NeedHelpButton","LogoutBtn","_templateObject12","Flower","_templateObject13","Sidebar","isOpen","sprite","HeaderNav","MenuIcon","HeaderWrap","SelectIcon","onToggleMenu","_useState","useState","_useState2","isOptionListOpen","setOptionListOpen","_useState3","_useState4","isSideBarOpen","setSideBarOpen","value","newTheme","target","setTheme","UserInfo","HeaderDashboard","style","display","alignItems","justifyContent","backgroundColor","widows","props","isDragging","Handle","Task","task","index","Draggable","draggableId","provided","snapshot","_objectSpread","draggableProps","dragHandleProps","ref","innerRef","title","description","priority","deadline","TaskList","isDraggingOver","ContainerModal","Column","column","tasks","cardData","setCardData","visible","setVisible","dataForModal","_useState5","_useState6","titleTask","setTitleTask","hendleVisible","handleSubmit","taskId","uuidv4","replace","newTask","_defineProperty","columnId","newColumn","columns","taskIds","_toConsumableArray","prevCardData","Droppable","droppableId","droppableProps","map","placeholder","e","MainDashboard","titleColumn","setTitleColumn","DragDropContext","onDragStart","body","color","transition","onDragUpdate","update","destination","opacity","Object","keys","length","onDragEnd","result","_objectSpread3","source","start","finish","newTaskId","Array","from","splice","newState","console","log","startTaskIds","newStart","finishTaskIds","newFinish","newColumnOrder","columnOrder","direction","initialUserModel","icon","background","boardsData","Dashboard","ThemeProvider","Header"],"sourceRoot":""}