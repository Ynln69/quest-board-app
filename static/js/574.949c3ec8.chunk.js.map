{"version":3,"file":"static/js/574.949c3ec8.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/EditProfile/EditProfileModal.jsx","components/UserInfo/UserInfo.jsx","components/Sidebar/Sidebar.styled.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","redux/boards/boardsSelectors.js","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","schemas/addTaskSchema.js","components/ModalBoard/ModalBoard.jsx","components/ModalBoard/index.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds|sync|/^/.//.*/.png$","images/backgrounds|sync|/^/.//.*_dark/.png$","images/backgrounds|sync|/^/.//.*_light/.png$","images/backgrounds|sync|/^/.//.*_violet/.png$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\ncolor: var(--header_user_text);\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: cover;\n  border-radius: 8px;\n  cursor: pointer;\n    `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  cursor: pointer;\n  stroke: transparent;\n     `;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n  margin: auto;\n`;\n\nexport const LabelPass = styled.label`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n`;\n\nexport const FieldUser = styled(Field)`\n  width: 100%;\n  height: 49px;\n  color: var(--modal_main_color);\n  background-color: var(--modal_field);\n  opacity: 0.4;\n  border: 1px solid var(--input_color);\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n\n  outline: none;\n  transition: all 500ms;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const IconUserWrapper = styled.label`\n  width: 68px;\n  height: 78px;\n  position: relative;\n  margin: 0px auto 14px auto;\n  border-radius: 8px;\n  background-position: center;\n  cursor: pointer;\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const FileInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  display: none;\n`;\n\nexport const NoneInput = styled.input`\n  display: none;\n`;\n\nexport const PlusBtn = styled.button`\n  position: absolute;\n  bottom: -15%;\n  left: 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: var(--user_bgc);\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: var(--create_active);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n  z-index: 99;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n  fill: transparent;\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport MainButton from 'components/MainButton';\nimport {\n  FormBox,\n  AvatarImage,\n  Label,\n  FieldUser,\n  NoneInput,\n  PlusBtn,\n  IconPlus,\n  IconUserWrapper,\n  PasswordView,\n  PasswordIcon,\n  Svg,\n  LabelPass,\n} from './EditProfile.styled';\nimport { updateUser, updateUserAvatar } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport Sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\nimport { showToast } from 'components/Notification/ToastNotification';\n\nconst EditProfile = ({ onClose }) => {\n  const { username, theme, email, avatarURL } =\n    useSelector(selectUser);\n  const [showPassword, setShowPassword] = useState(false);\n  const [avatarNewURL, setAvatarNewURL] = useState(avatarURL);\n\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = async formValues => {\n    if (username !== formValues.username || email !== formValues.email)\n      dispatch(\n        updateUser({\n          username: formValues.newName,\n          email: formValues.newEmail,\n          theme,\n        })\n      );\n\n    if (avatarNewURL !== formValues.newPhoto) {\n      dispatch(updateUserAvatar(avatarNewURL));\n    }\n    onClose();\n    showToast('success', 'User updated successfully.');\n  };\n\n  const handleAvatarClick = e => {\n    e.preventDefault();\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const formData = new FormData();\n      formData.append('avatar', selectedFile);\n      setAvatarNewURL(formData);\n    } else {\n      showToast('error', 'Invalid file format. Please select an image.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        newPhoto: avatarNewURL,\n        newName: username,\n        newEmail: email,\n      }}\n      onSubmit={handleFormSubmit}\n    >\n      {({ isSubmitting, values, setFieldValue }) => (\n        <FormBox>\n          <IconUserWrapper>\n            {values.newPhoto ? (\n              <AvatarImage\n                type=\"file\"\n                name=\"newPhoto\"\n                alt=\"Avatar\"\n                src={values.newPhoto}\n                width=\"68\"\n                height=\"68\"\n              />\n            ) : (\n              <svg width=\"68\" height=\"68\">\n                <use href={`${Sprite}#icon-user`} />\n              </svg>\n            )}\n            <PlusBtn\n              type=\"button\"\n              onClick={() => document.getElementById('newPhotoInput').click()}\n            >\n              <IconPlus width=\"14\" height=\"14\">\n                <use href={`${Sprite}#icon-plus-us`} />\n              </IconPlus>\n              <NoneInput\n                type=\"file\"\n                id=\"newPhotoInput\"\n                name=\"newPhoto\"\n                onChange={event => {\n                  setFieldValue(\n                    'newPhoto',\n                    URL.createObjectURL(event.currentTarget.files[0])\n                  );\n                  handleAvatarClick(event);\n                }}\n              />\n            </PlusBtn>\n          </IconUserWrapper>\n\n          <Label>\n            <FieldUser type=\"text\" name=\"newName\" />\n            <ErrorMessage name=\"newName\" component=\"div\" />\n          </Label>\n\n          <Label>\n            <FieldUser type=\"email\" name=\"newEmail\" />\n            <ErrorMessage name=\"newEmail\" component=\"div\" />\n          </Label>\n\n          <LabelPass>\n            <FieldUser\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter Password\"\n            />\n            <PasswordView onClick={togglePasswordVisibility}>\n              {showPassword ? (\n                <PasswordIcon\n                  src={eyeHide}\n                  alt=\"Hide Password\"\n                  width=\"16\"\n                  height=\"16\"\n                />\n              ) : (\n                <Svg width=\"16\" height=\"16\">\n                  <use stroke=\"gray\" href={`${Sprite}#eye-password`} />\n                </Svg>\n              )}\n            </PasswordView>\n            <ErrorMessage name=\"newPassword\" component=\"div\" />\n          </LabelPass>\n\n          <MainButton type=\"submit\" disabled={isSubmitting}>\n            Save\n          </MainButton>\n        </FormBox>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProfile;\n","import Modal from 'components/Modal/Modal';\nimport EditProfile from './EditProfile';\n\nconst EditProfileModal = ({ onClose }) => {\n  const handleCloseModal = () => {\n    onClose();\n  };\n\n  return (\n    <Modal\n      isOpen={true}\n      handleClose={handleCloseModal}\n      heading={'Edit profile'}\n      modalType={'editProfile'}\n    >\n      <EditProfile onClose={handleCloseModal} />\n    </Modal>\n  );\n};\n\nexport default EditProfileModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfileModal from 'components/EditProfile/EditProfileModal';\nimport Sprite from '../../images/sprite.svg';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserInfo = ({ theme }) => {\n  const { username, avatarURL } = useSelector(selectUser);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n\n  const openEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const closeEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar\n          src={avatarURL}\n          alt=\"User Avatar\"\n          onClick={openEditProfileModal}\n          width=\"32\"\n          height=\"32\"\n        />\n      ) : (\n        <UserIcon\n          className={`icon-user theme-${theme}`}\n          onClick={openEditProfileModal}\n          width=\"32\"\n          height=\"32\"\n        >\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isEditProfileModalOpen && (\n        <EditProfileModal onClose={closeEditProfileModal} />\n      )}\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled/macro';\nimport { NavLink } from 'react-router-dom';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 225px;\n  min-height: 100%;\n  padding: 14px;\n\n  background-color: var(--nav_bgc);\n  color: var(--nav_main_color);\n\n  @media (min-width: 768px) {\n    width: 260px;\n    padding: 24px;\n  }\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\nexport const NavLogo = styled(NavLink)`\n  display: flex;\n  align-items: center;\n`;\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n`;\nexport const Title = styled.h3`\n  color: var(--nav_main_color);\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\nexport const MyBoardTitle = styled.p`\n  margin-bottom: 8px;\n\n  color: var(--nav_second_color);\n  font-family: Poppins;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\nexport const BoardTitleBlock = styled.div`\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  padding: 14px 0;\n  border-top: 1px solid var(--line_color);\n  border-bottom: 1px solid var(--line_color);\n\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\nexport const ButtonAdd = styled.button`\n  width: 40px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  padding: 10px 8px;\n  border-radius: 6px;\n  border: none;\n\n  background-color: var(--create_normal);\n  &:hover {\n    background-color: var(--create_active);\n  }\n  > svg {\n    stroke: var(--create_plus_color);\n  }\n`;\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n\n  align-items: center;\n  letter-spacing: -0.28px;\n  margin-bottom: 4px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const TitleBoard = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const BoardIcons = styled.div`\n  display: none;\n  margin-left: auto;\n  margin-right: 20px;\n`;\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n\n  stroke: var(--nav_second_color);\n  opacity: 0.5;\n  fill: transparent;\n`;\n\nexport const ButtonIcon = styled.button`\n  outline: none;\n  border: none;\n  background-color: transparent;\n  margin-right: 8px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const NeedHelpBlock = styled.div`\n  border-radius: 8px;\n  margin-bottom: 24px;\n  margin-top: auto;\n\n  padding: 20px;\n  background-color: var(--need_bgc);\n  color: var(--nav_main_color);\n  @media screen and (max-width: 768px) {\n    padding: 14px;\n  }\n`;\n\nexport const HelpContent = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.24px;\n  color: var(--nav_main_color);\n  > span {\n    color: var(--span_color);\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: -0.28px;\n  }\n`;\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n\n  color: var(--nav_main_color);\n`;\nexport const SvgHelp = styled.svg`\n  stroke: var(--nav_main_color);\n  fill: rgba(0, 0, 0, 0);\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  border: none;\n\n  color: var(--nav_main_color);\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: transparent;\n  padding: 0;\n  > svg {\n    stroke: var(--logout_fill);\n    &:hover {\n      stroke: var(--logout_fill_active);\n    }\n  }\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n\nexport const BoardTitle = styled.p`\n  color: var(--board_color);\n`;\nexport const ProjectIcon = styled.svg`\n  stroke: var(--board_color);\n  fill: transparent;\n  margin-right: 8px;\n  margin-left: 24px;\n`;\nexport const Nav = styled(NavLink)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 60px;\n\n  &.active {\n    color: var(--board_main_color);\n    background-color: var(--board_active_bgc);\n\n    ${BoardIcons} {\n      display: flex;\n    }\n    ${BoardTitle} {\n      color: var(--board_active_color);\n    }\n    ${ProjectIcon} {\n      stroke: var(--board_active_icon);\n    }\n  }\n`;\n\nexport const MainBoard = styled.div`\n  padding: 0;\n  margin: 40px -14px 0 -14px;\n  height: 140px;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border_bgc);\n    border-radius: 4px 0px 0px 4px;\n    height: 61px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 40px -24px 0 -24px;\n  }\n`;\n\nexport const Section = styled.div`\n  padding-top: 70px;\n  @media screen snd (min-width: 768px) {\n    padding-top: 60px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { needHelp } from '../../redux/auth/operations';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\nimport MainButton from 'components/MainButton';\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelpForm = ({ handleCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { email, comment } = values;\n    console.log({ email, comment });\n    try {\n      const result = await dispatch(needHelp({ email, comment }));\n      if (needHelp.fulfilled.match(result)) {\n        console.log('Request successful');\n        resetForm(initialValues);\n        handleCloseModal();\n      } else {\n        console.log('Request failed')\n      }\n    } catch (err) {\n      console.log('Error:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n\nNeedHelpForm.propTypes = {\n  handleCloseModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={true}\n        handleClose={handleCloseModal}\n        heading={'Need help'}\n        modalType={'modalHelp'}\n      >\n        <NeedHelpForm handleCloseModal={handleCloseModal} />\n      </Modal>\n    </>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectRefreshError = ({ boards: { isRefreshing, error } }) => ({\n  isRefreshing,\n  error,\n});\n","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  width: 100%;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  transition: all 500ms;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: rgba(0, 0, 0, 0);\n  stroke: var(--modal_second_color);\n  transition: all 500ms;\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  transition: all 500ms;\n  &:checked + img {\n    border: 1px solid var(--modal_data_color);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: var(--modal_main_color);\n  }\n  &:hover + img {\n    border: 1px solid var(--active_btn);\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 40px;\n  margin-right: 20px;\n\n  @media screen and (min-width: 335px) {\n    margin-right: 35px;\n  }\n  @media screen and (min-width: 375px) {\n    margin-right: 50px;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const addTaskSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n  description: Yup.string().required('Description is required'),\n  priority: Yup.string().required('Priority is required'),\n});\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { useDispatch } from 'react-redux';\nimport { createBoard, editBoard } from 'redux/boards/boardOperations';\nimport MainButton from 'components/MainButton';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { selectRefreshError } from 'redux/boards/boardsSelectors';\nimport Loader from 'components/Loader/Loader';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1',\n  'bg2',\n  'bg3',\n  'bg4',\n  'bg5',\n  'bg6',\n  'bg7',\n  'bg8',\n  'bg9',\n  'bg10',\n  'bg11',\n  'bg12',\n  'bg13',\n  'bg14',\n  'bg15',\n  'bg16',\n];\n\nfunction ModalBoard({ btnContent, closeModal, boardData }) {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme).toLowerCase();\n  const { isRefreshing, error } = useSelector(selectRefreshError);\n\n  const initialValues =\n    btnContent === 'Create'\n      ? {\n          title: '',\n          icon: icons[0],\n          background: backgrounds[0],\n        }\n      : {\n          title: boardData?.title,\n          icon: boardData?.icon,\n          background: boardData?.background,\n        };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      id: boardId,\n      title: values.title.trim(),\n      icon: values.icon,\n      background: values.background,\n      boardsData: { tasks: {}, columns: {}, columnOrder: [] },\n    };\n    if (btnContent === 'Create') {\n      dispatch(createBoard(newBoard));\n    } else if (\n      values.title !== boardData.title ||\n      values.icon !== boardData.icon ||\n      values.background !== boardData.background\n    ) {\n      dispatch(editBoard({ newBoard, id: boardData._id }));\n    }\n\n    resetForm();\n    closeModal();\n  };\n  if (error) {\n    return (\n      <p style={{ fontSize: '40px', color: 'red', textAlign: 'center' }}>\n        Ops, something went wrong\n        <br />\n        {error}\n      </p>\n    );\n  }\n\n  return (\n    <>\n      {isRefreshing && <Loader />}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={addBoardSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, values }) => (\n          <Form autoComplete=\"off\">\n            <StyledInputField\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              onChange={handleChange}\n              value={values.title}\n            />\n            <ErrorMsg name=\"title\" component=\"p\" />\n            <StyledSubtitle>Icons</StyledSubtitle>\n            <IconsWrapper>\n              {icons.map(icon => (\n                <label key={nanoid()}>\n                  <StyledRadioField\n                    type=\"radio\"\n                    name=\"icon\"\n                    value={icon}\n                    onChange={handleChange}\n                    checked={values.icon === icon}\n                  />\n                  <StyledSVG>\n                    <use href={`${sprite}#${icon}`}></use>\n                  </StyledSVG>\n                </label>\n              ))}\n            </IconsWrapper>\n            <StyledSubtitle>Background</StyledSubtitle>\n            <BgImagesWrapper>\n              {backgrounds.map((background, i) => (\n                <label key={nanoid()}>\n                  <StyledRadioField\n                    type=\"radio\"\n                    name=\"background\"\n                    value={background}\n                    onChange={handleChange}\n                    checked={values.background === background}\n                  />\n\n                  {i === 0 && theme === 'dark' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_dark.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n\n                  {i === 0 && theme === 'violet' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_violet.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n\n                  {i === 0 && theme === 'light' && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}_light.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n                  {i >= 1 && (\n                    <img\n                      src={require(`../../images/backgrounds/${background}.png`)}\n                      alt={`background variant ${i + 1}`}\n                      width=\"28\"\n                    />\n                  )}\n                </label>\n              ))}\n            </BgImagesWrapper>\n            <MainButton type=\"submit\" showPlus={true}>\n              {btnContent}\n            </MainButton>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  boardData: PropTypes.object,\n};\n\nexport default ModalBoard;\n","import ModalBoard from './ModalBoard';\n\nexport default ModalBoard;\n","import {\n  SidebarBlock,\n  ButtonAdd,\n  SvgLightning,\n  Title,\n  NavLogo,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TitleBoard,\n  ProjectIcon,\n  BoardTitle,\n  Nav,\n  Section,\n  MainBoard,\n  ButtonIcon,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/need-help-img.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\nimport Modal from 'components/Modal/Modal';\nimport ModalBoard from 'components/ModalBoard';\n\nconst actionsList = { add: 'add', edit: 'edit' };\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(actionsList.add);\n  const [boardData, setBoardData] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBoards());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleModalType = e => {\n    const buttonAction = e.currentTarget.ariaLabel;\n    const editButtonId = e.currentTarget.getAttribute('data-board-id') || '';\n    if (buttonAction === actionsList.add) {\n      setModalType(actionsList.add);\n      toggleModal();\n    } else {\n      setModalType(actionsList.edit);\n      setBoardData(boards.filter(board => board._id === editButtonId)[0]);\n      toggleModal();\n    }\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <NavLogo to=\"/\">\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </NavLogo>\n      <Section>\n        <MyBoardTitle>My boards</MyBoardTitle>\n\n        <BoardTitleBlock>\n          <p>Create a new board</p>\n          <ButtonAdd aria-label=\"add\" type=\"button\" onClick={handleModalType}>\n            <svg width={20} height={20}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </ButtonAdd>\n        </BoardTitleBlock>\n\n        <MainBoard>\n          <ul>\n            {boards.map(board => (\n              <BoardList key={board._id}>\n                <Nav to={`/home/${board.title}`}>\n                  <TitleBoard>\n                    <ProjectIcon width={18} height={18}>\n                      <use href={`${sprite}#${board.icon}`} />\n                    </ProjectIcon>\n                    <BoardTitle>{board.title}</BoardTitle>\n                  </TitleBoard>\n\n                  <BoardIcons>\n                    <ButtonIcon\n                      type=\"button\"\n                      aria-label=\"edit\"\n                      data-board-id={board._id}\n                      onClick={handleModalType}\n                    >\n                      <EditIcon>\n                        <use href={`${sprite}#icon-pencil`} />\n                      </EditIcon>\n                    </ButtonIcon>\n                    <ButtonIcon\n                      type=\"button\"\n                      aria-label=\"edit\"\n                      data-board-id={board._id}\n                      onClick={handleModalType}\n                    >\n                      <EditIcon\n                        onClick={() => dispatch(deleteBoard(board._id))}\n                      >\n                        <use href={`${sprite}#icon-trash`} />\n                      </EditIcon>\n                    </ButtonIcon>\n                  </BoardIcons>\n                </Nav>\n              </BoardList>\n            ))}\n          </ul>\n        </MainBoard>\n      </Section>\n      {isModalOpen && (\n        <Modal\n          isOpen={toggleModal}\n          handleClose={toggleModal}\n          heading={modalType === actionsList.add ? 'New board' : 'Edit board'}\n          modalType={'modalBoard'}\n        >\n          <ModalBoard\n            btnContent={modalType === actionsList.add ? 'Create' : 'Edit'}\n            closeModal={toggleModal}\n            boardData={boardData}\n          />\n        </Modal>\n      )}\n      <NeedHelpBlock>\n        <Flower src={flower} alt=\"flower\" width={54} height={78} />\n        <HelpContent>\n          If you need help with <span>TaskPro</span>, check out our support\n          resources or reach out to our customer support team.\n        </HelpContent>\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={() => dispatch(logOut())}>\n        <svg width={32} height={32}>\n          <use xlinkHref={`${sprite}#icon-login`}></use>\n        </svg>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ThemeContainer = styled.div`\n  position: fixed;\n`;\n\nexport const ThemeList = styled.ul`\nposition: absolute;\ntop: 28px;\n  left: 5px;\n    width: 100px;\n    height: 107px;\n    display: flex;\n  flex-direction: column;\n    padding: 18px 44px 18px 18px;\n    gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid var(--theme_border);\n  cursor: pointer;\n  z-index: 99;\n   }\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: var(--theme_color);\n  cursor: pointer;\n  &:hover {\n    color: var(--theme_active);\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from 'redux/auth/operations';\nimport { ThemeContainer, ThemeList, ThemeItem } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const { theme } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const themeOptions = [\n    { value: 'LIGHT', label: 'Light' },\n    { value: 'DARK', label: 'Dark' },\n    { value: 'VIOLET', label: 'Violet' },\n  ];\n\n  useEffect(() => {\n    document.body.classList.remove('LIGHT', 'DARK', 'VIOLET');\n    document.body.classList.add(currentTheme);\n  }, [currentTheme]);\n\n  const onHandleTheme = async newTheme => {\n    setCurrentTheme(newTheme);\n\n    try {\n      await dispatch(updateUser({ theme: newTheme.toUpperCase() }));\n\n      onClose();\n    } catch (error) {\n      console.error('Failed to update theme:', error);\n    }\n  };\n\n  return (\n    <ThemeContainer className=\"theme\">\n      <ThemeList>\n        {themeOptions.map(option => (\n          <ThemeItem\n            key={option.value}\n            onClick={() => onHandleTheme(option.value)}\n            className={currentTheme === option.value ? 'active' : ''}\n          >\n            {option.label}\n          </ThemeItem>\n        ))}\n      </ThemeList>\n    </ThemeContainer>\n  );\n};\n\nexport default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const PageHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.div`\n  width: 32px;\n  height: 32px;\n  border: none;\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--header_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n  position: relative;\n `;\n\nexport const HeaderNav = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  width: 80px;\n  cursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  align-items: baseline;\n  stroke: var(--chevron-down);\n  fill: none;\n  z-index: 999;\n`;\n\nexport const Text = styled.div`\n  color: var(--header_theme_text);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Backdrop } from 'components/Modal/Modal.styles';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  PageHeader,\n  HeaderNav,\n  MenuBtn,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n  Text,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { theme } = useSelector(selectUser);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    let timeout;\n\n    if (isSideBarOpen || isThemeSelectorOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen, isThemeSelectorOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n    if (!e.target.closest('theme')) { \n      setThemeSelectorOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen);\n  };\n\n  return (\n    <PageHeader>\n      <MenuBtn type=\"button\" onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"24\" height=\"24\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </MenuBtn>\n      {isSideBarOpen && (\n        <Backdrop>\n          <Sidebar />\n        </Backdrop>\n      )}\n      <HeaderWrap>\n        <HeaderNav onClick={toggleThemeSelector}>\n          <Text>Theme</Text>\n          <SelectIcon width=\"16\" height=\"16\" >\n            <use href={`${Sprite}#icon-chevron-down`} />\n          </SelectIcon>\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector onClose={() => setThemeSelectorOpen(false)} />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </PageHeader>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: left;\n  width: 100%;\n  color: var(--board_bgc);\n`;\n\nexport const Container = styled.div`\n  flex-grow: 1;\n`;\nexport const HomeSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const TitlePage = styled.p`\n  width: 486px;\n\n  color: var(--board_second_color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  text-align: center;\n`;\n\nexport const LinkToCreate = styled.button`\n  font-family: 'Poppins';\n  border: none;\n  background-color: transparent;\n  color: var(--span_color);\n`;\n","import { Suspense, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser, selectIsLoggedIn } from 'redux/auth/selectors';\n\nimport Header from 'components/Header/Header';\nimport Loader from 'components/Loader/Loader';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport {\n  HomeContainer,\n  Container,\n  HomeSection,\n  TitlePage,\n  LinkToCreate,\n} from './HomePage.styled';\n\nimport { showToast } from 'components/Notification/ToastNotification';\n\nconst HomePage = () => {\n  const { theme, username } = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(\n    () => {\n      document.body.classList.add(theme);\n      setTimeout(() => {\n        if (isLoggedIn) {\n          showToast('success', `Welcome, ${username}!`);\n        }\n      });\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <HomeContainer>\n      <Sidebar />\n      <Container>\n        <Header />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <HomeSection>\n          <TitlePage>\n            Before starting your project, it is essential{' '}\n            <LinkToCreate>to create a board</LinkToCreate> to visualize and\n            track all the necessary tasks and milestones. This board serves as a\n            powerful tool to organize the workflow and ensure effective\n            collaboration among team members.\n          </TitlePage>\n        </HomeSection>\n      </Container>\n    </HomeContainer>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg10.png\": 2952,\n\t\"./bg11.png\": 8978,\n\t\"./bg12.png\": 409,\n\t\"./bg13.png\": 6502,\n\t\"./bg14.png\": 3126,\n\t\"./bg15.png\": 1218,\n\t\"./bg16.png\": 6137,\n\t\"./bg1_dark.png\": 1973,\n\t\"./bg1_light.png\": 8005,\n\t\"./bg1_violet.png\": 4458,\n\t\"./bg2.png\": 8146,\n\t\"./bg3.png\": 8894,\n\t\"./bg4.png\": 6022,\n\t\"./bg5.png\": 3028,\n\t\"./bg6.png\": 4033,\n\t\"./bg7.png\": 2829,\n\t\"./bg8.png\": 7740,\n\t\"./bg9.png\": 2945\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6849;","var map = {\n\t\"./bg1_dark.png\": 1973\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1021;","var map = {\n\t\"./bg1_light.png\": 8005\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2322;","var map = {\n\t\"./bg1_violet.png\": 4458\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2254;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","UserIcon","_templateObject3","FormBox","Form","LabelPass","Label","FieldUser","Field","_templateObject4","IconUserWrapper","_templateObject5","AvatarImage","_templateObject6","NoneInput","_templateObject7","_templateObject8","PlusBtn","_templateObject9","IconPlus","_templateObject10","PasswordView","_templateObject11","PasswordIcon","_templateObject12","Svg","_templateObject13","_ref","onClose","_useSelector","useSelector","selectUser","username","theme","email","avatarURL","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","avatarNewURL","setAvatarNewURL","dispatch","useDispatch","togglePasswordVisibility","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formValues","wrap","_context","prev","next","updateUser","newName","newEmail","newPhoto","updateUserAvatar","showToast","stop","_x","apply","arguments","_jsx","Formik","initialValues","onSubmit","children","_ref3","isSubmitting","values","setFieldValue","_jsxs","type","name","alt","src","width","height","href","concat","Sprite","onClick","document","getElementById","click","id","onChange","event","URL","createObjectURL","currentTarget","files","e","preventDefault","selectedFile","target","startsWith","formData","FormData","append","handleAvatarClick","ErrorMessage","component","placeholder","eyeHide","stroke","MainButton","disabled","handleCloseModal","Modal","isOpen","handleClose","heading","modalType","EditProfile","isEditProfileModalOpen","setIsEditProfileModalOpen","openEditProfileModal","className","EditProfileModal","SidebarBlock","_styled","styles","NavLogo","NavLink","SvgLightning","Title","MyBoardTitle","BoardTitleBlock","ButtonAdd","BoardList","TitleBoard","BoardIcons","EditIcon","ButtonIcon","NeedHelpBlock","HelpContent","NeedHelpButton","SvgHelp","LogoutBtn","Flower","BoardTitle","ProjectIcon","Nav","MainBoard","Section","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","handleSubmit","resetForm","result","console","log","needHelp","sent","t0","message","_x2","validationSchema","_ref4","errors","touched","submitCount","autoComplete","style","resize","closeModal","_Fragment","NeedHelpForm","selectBoards","state","boards","selectRefreshError","_ref$boards","isRefreshing","error","addBoardSchema","Yup","title","StyledInputField","description","priority","ErrorMsg","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","btnContent","boardData","selectTheme","toLowerCase","icon","background","fontSize","color","textAlign","Loader","newBoard","uuidv4","replace","trim","boardsData","tasks","columns","columnOrder","createBoard","editBoard","_id","handleChange","value","map","checked","sprite","nanoid","i","require","showPlus","actionsList","Sidebar","isModalOpen","setIsModalOpen","setModalType","_useState5","_useState6","setBoardData","_useState7","_useState8","isShow","setIsShow","useEffect","getBoards","toggleModal","handleModalType","buttonAction","ariaLabel","editButtonId","getAttribute","filter","board","to","deleteBoard","ModalBoard","flower","NeedHelpModal","logOut","xlinkHref","ThemeContainer","ThemeList","ThemeItem","currentTheme","setCurrentTheme","body","classList","remove","add","onHandleTheme","newTheme","toUpperCase","label","option","PageHeader","MenuBtn","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","Text","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","setTimeout","addEventListener","handleOutsideClick","removeEventListener","clearTimeout","closest","Backdrop","ThemeSelector","UserInfo","HomeContainer","HomeSection","TitlePage","LinkToCreate","isLoggedIn","selectIsLoggedIn","Header","Suspense","fallback","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}